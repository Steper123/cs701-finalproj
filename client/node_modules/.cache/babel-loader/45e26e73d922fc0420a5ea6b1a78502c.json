{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/EventHolder.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nconst EventHolder = ({\n  team\n}) => {\n  const [eventMode, setEventMode] = React.useState(\"Home\");\n  const [escucha, setEscucha] = React.useState(false); //Pitching detail\n\n  const [pitchOn, setPitchOn] = React.useState(); //Speech Packaging\n\n  var indexSpeech = 0;\n  var SpeechRecognition = window.webkitSpeechRecognition;\n  var recognition = new SpeechRecognition();\n  recognition.continuous = false;\n\n  recognition.onstart = function () {\n    console.log(\"We are listening. Try speaking into the microphone.\");\n  };\n\n  recognition.onend = function () {\n    recognition.abort();\n  };\n\n  recognition.onerror = function () {\n    console.log(\"Error\");\n  };\n\n  recognition.onresult = function (event) {\n    var transcript = event.results[indexSpeech][0].transcript;\n    var confidence = event.results[indexSpeech][0].confidence;\n    indexSpeech += 1;\n    console.log(transcript);\n    console.log(confidence);\n  };\n\n  const listeningButton = /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (escucha == false) {\n        recognition.start();\n        setEscucha(true);\n      } else {\n        recognition.abort();\n        console.log(\"Speech has stopped\");\n        setEscucha(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"Test\"); //Other Objects for display\n\n  const Message = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"WELCOME TO THE GAME CREATOR\"), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Please answer some questions before beginning.\"));\n\n  if (eventMode == \"Home\") {\n    return /*#__PURE__*/React.createElement(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, listeningButton);\n  }\n};\n\nexport default EventHolder;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/EventHolder.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","EventHolder","team","eventMode","setEventMode","escucha","setEscucha","pitchOn","setPitchOn","indexSpeech","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","onstart","console","log","onend","abort","onerror","onresult","event","transcript","results","confidence","listeningButton","start","Message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,GAAjC,QAA4C,YAA5C;;AAIA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,KAAK,CAACC,QAAN,CAAe,MAAf,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBb,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9B,CAFgC,CAGhC;;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBf,KAAK,CAACC,QAAN,EAA9B,CAJgC,CAMhC;;AACA,MAAIe,WAAW,GAAG,CAAlB;AACA,MAAIC,iBAAiB,GAAGC,MAAM,CAACC,uBAA/B;AACA,MAAIC,WAAW,GAAG,IAAIH,iBAAJ,EAAlB;AACAG,EAAAA,WAAW,CAACC,UAAZ,GAAyB,KAAzB;;AACAD,EAAAA,WAAW,CAACE,OAAZ,GAAsB,YAAW;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACD,GAFD;;AAGAJ,EAAAA,WAAW,CAACK,KAAZ,GAAoB,YAAW;AAC7BL,IAAAA,WAAW,CAACM,KAAZ;AACD,GAFD;;AAGAN,EAAAA,WAAW,CAACO,OAAZ,GAAsB,YAAW;AAC/BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,GAFD;;AAIAJ,EAAAA,WAAW,CAACQ,QAAZ,GAAuB,UAASC,KAAT,EAAgB;AACrC,QAAIC,UAAU,GAAGD,KAAK,CAACE,OAAN,CAAcf,WAAd,EAA2B,CAA3B,EAA8Bc,UAA/C;AACA,QAAIE,UAAU,GAAGH,KAAK,CAACE,OAAN,CAAcf,WAAd,EAA2B,CAA3B,EAA8BgB,UAA/C;AACAhB,IAAAA,WAAW,IAAI,CAAf;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYM,UAAZ;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAZ;AACH,GANC;;AAQA,QAAMC,eAAe,gBACnB,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM;AACrB,UAAIrB,OAAO,IAAI,KAAf,EAAsB;AACpBQ,QAAAA,WAAW,CAACc,KAAZ;AACArB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAHD,MAIK;AACHO,QAAAA,WAAW,CAACM,KAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAX,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACA,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CA7BgC,CA2ChC;;AACA,QAAMsB,OAAO,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFF,CADF;;AAQA,MAAIzB,SAAS,IAAI,MAAjB,EAAyB;AACvB,wBAAQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD,GAFD,MAGK;AACH,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuB,eADH,CADF;AAMD;AAOF,CArED;;AAuEA,eAAezB,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\n\n\nconst EventHolder = ({ team }) => {\n  const [eventMode, setEventMode] = React.useState(\"Home\");\n  const [escucha, setEscucha] = React.useState(false);\n  //Pitching detail\n  const [pitchOn, setPitchOn] = React.useState()\n\n  //Speech Packaging\n  var indexSpeech = 0;\n  var SpeechRecognition = window.webkitSpeechRecognition;\n  var recognition = new SpeechRecognition();\n  recognition.continuous = false;\n  recognition.onstart = function() {\n    console.log(\"We are listening. Try speaking into the microphone.\");\n  };\n  recognition.onend = function() {\n    recognition.abort();\n  }\n  recognition.onerror = function() {\n    console.log(\"Error\");\n  }\n\n  recognition.onresult = function(event) {\n    var transcript = event.results[indexSpeech][0].transcript;\n    var confidence = event.results[indexSpeech][0].confidence;\n    indexSpeech += 1;\n    console.log(transcript);\n    console.log(confidence);\n};\n\n  const listeningButton = (\n    <Button onClick={() => {\n      if (escucha == false) {\n        recognition.start();\n        setEscucha(true);\n      }\n      else {\n        recognition.abort();\n        console.log(\"Speech has stopped\");\n        setEscucha(false);\n      }\n      }}>Test</Button>\n  );\n\n  //Other Objects for display\n  const Message = (\n    <div>\n      <h1>WELCOME TO THE GAME CREATOR</h1>\n      <strong>Please answer some questions before beginning.</strong>\n    </div>\n  );\n\n\n  if (eventMode == \"Home\") {\n    return (<Message></Message>);\n  }\n  else {\n    return (\n      <div>\n        {listeningButton}\n      </div>\n    );\n\n  }\n\n\n\n\n\n\n}\n\nexport default EventHolder;\n"]},"metadata":{},"sourceType":"module"}