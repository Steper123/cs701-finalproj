{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport classes from './App.css';\nimport bbLogo from './assets/images/baseball.png';\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nimport TeamAccessHolder from \"./components/TeamAccessHolder\";\nimport LoginScreen from \"./components/LoginScreen\";\nimport TeamList from \"./components/TeamList\";\nimport TeamPage from \"./components/TeamPage\";\nconst Header = styled.h1`\n  background-color: green;\n  text-align: center;\n  padding: 1rem;\n  color: white;\n`;\nconst ButtonDisplay = styled.div`\n  background-color: red;\n  padding: 0.5rem 0;\n  margin-bottom: 0.5rem;\n`;\n\nconst App = () => {\n  const [state, setState] = React.useState(null);\n  const [currUser, setUser] = React.useState(null);\n  const [access, setAccess] = React.useState(null);\n  const [signinError, setError] = React.useState(\"\");\n  const [mode, setMode] = React.useState(\"Home\");\n  const [selectedTeam, setTeam] = React.useState(null);\n  const [desiredAccess, setDesired] = React.useState(null);\n  console.log(currUser);\n  useEffect(() => {\n    const fetchState = () => {\n      const myUser = fetch(\"/api/states\").then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedState => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const myState = fetchedState[0];\n        setState(myState);\n        setMode(myState.appMode);\n        return myState;\n      }).then(data => {\n        if (data.currUserId == 0) {\n          setUser(null);\n          setAccess(null);\n          setTeam(null);\n          setDesired(null);\n        } else {\n          const myUser = fetch(`/api/users`).then(response => {\n            if (response.ok) {\n              return response.json();\n            }\n\n            throw new Error(response.statusText);\n          }).then(fetchedUsers => {\n            const filteredUser = fetchedUsers.filter(point => point.id == data.currUserId);\n            setUser(filteredUser[0]); // Create a copy of the collections, replacing the current article if this is an edit\n          }).catch(err => console.error(err)); // eslint-disable-line no-console\n\n          myUser.then(person => {\n            fetch(`/api/teamaccess`).then(response => {\n              if (response.ok) {\n                return response.json();\n              }\n\n              throw new Error(response.statusText);\n            }).then(fetchedAccesses => {\n              const filteredAccesses = fetchedAccesses.filter(access => access.userId == person.id);\n              setAccess(filteredAccesses); // Create a copy of the collections, replacing the current article if this is an edit\n            }).catch(err => console.error(err)); // eslint-disable-line no-console\n          });\n        }\n      });\n    };\n    /* const fetchUser = () => {\n      fetch(\"/api/users\")\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then((fetchedUsers) => {\n          // Create a copy of the collections, replacing the current article if this is an edit\n          const checkedSignedIn = fetchedUsers.filter(user => user.signedIn == 1);\n          if (checkedSignedIn.length != 0) {\n            setUser(checkedSignedIn[0]);\n            const myID = checkedSignedIn[0].id;\n            console.log(\"ID HERE\");\n            console.log(myID);\n            return myID;\n          }\n        }).then((thatID) => {\n          if (thatID != null) {\n            fetch(`/api/teamaccess`)\n              .then((response) => {\n                if (response.ok) {\n                  return response.json();\n                }\n                throw new Error(response.statusText);\n              })\n              .then((fetchedAccesses) => {\n                   const filteredAccess = fetchedAccesses.filter(point => point.userId == thatID);\n                 // Create a copy of the collections, replacing the current article if this is an edit\n                  setAccess(filteredAccess);\n                })\n              .catch((err) => console.error(err)); // eslint-disable-line no-console\n          }\n        })\n        .catch((err) => console.error(err)); // eslint-disable-line no-console\n    };\n    console.log(\"WE OUT HERE\"); */\n\n\n    fetchState(); //add back CurrUser\n  }, []);\n  console.log(access);\n\n  const handleSignInReturn = (username, password) => {\n    fetch(\"/api/users\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedUsers => {\n      // Create a copy of the collections, replacing the current article if this is an edit\n      const checkedSignedIn = fetchedUsers.filter(user => user.username == username && user.password == password);\n\n      if (checkedSignedIn.length != 0) {\n        const myId = checkedSignedIn[0].id;\n        const updatedState = { ...state,\n          currUserId: myId\n        };\n        fetch(`/api/states/${1}`, {\n          method: \"PUT\",\n          body: JSON.stringify(updatedState),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          console.log(response);\n          throw new Error(response.statusText);\n        }) //Add the newly created order to local orders and update order state\n        .then(finished => {\n          setState(finished);\n          setError(\"\");\n        }).catch(err => {\n          console.error(err);\n        });\n      } else {\n        setError(\"Your username/password combination do not match the ones found in our database\");\n      }\n    }).catch(err => console.error(err)); // eslint-disable-line no-console\n\n    /*\n    fetch(\"/api/users\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then((fetchedUsers) => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const checkedSignedIn = fetchedUsers.filter(user => user.username == username && user.password == password);\n        if (checkedSignedIn.length != 0) {\n           const newPerson = {\n            id: checkedSignedIn[0].id,\n            username: checkedSignedIn[0].username,\n            password: checkedSignedIn[0].password,\n            signedIn: 1\n          }\n           const updatedPerson = {...checkedSignedIn[0], ...newPerson};\n           fetch(`/api/users/${updatedPerson.id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(updatedPerson),\n            headers: new Headers({\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            })\n          })\n            .then(response => {\n              if (response.ok) {\n                return response.json();\n              }\n              console.log(response);\n              throw new Error(response.statusText);\n             })\n            //Add the newly created order to local orders and update order state\n            .then((finished) => {\n              setUser(finished);\n              setError(\"\");\n             })\n            .catch(err => {\n              console.error(err);\n            });\n        }\n        else {\n          setError(\"Your username/password combination do not match the ones found in our database\");\n        }\n      })\n      .catch((err) => console.error(err)); // eslint-disable-line no-console\n       */\n  };\n\n  const handleSignOutReturn = () => {\n    const updatedState = { ...state,\n      currUserId: 0\n    };\n    fetch(`/api/states/${1}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedState),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      console.log(response);\n      throw new Error(response.statusText);\n    }) //Add the newly created order to local orders and update order state\n    .then(finished => {\n      setState(finished);\n      setTeam(null);\n      setDesired(null);\n      setError(\"\");\n      setMode(\"Home\");\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const handleAccountCreation = personCredentials => {\n    fetch(\"/api/users\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedUsers => {\n      // Create a copy of the collections, replacing the current article if this is an edit\n      const checkedSignedIn = fetchedUsers.filter(user => user.username == personCredentials.username);\n\n      if (checkedSignedIn.length != 0) {\n        setError(\"Someone with this username already exists! Either sign-in to your other account or try a new username\");\n      } else {\n        const newUser = fetch(\"/api/users\", {\n          method: \"POST\",\n          body: JSON.stringify(personCredentials),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }) //Add the newly created order to local orders and update order state\n        .then(receivedPerson => {\n          return receivedPerson;\n        }).catch(err => {\n          console.error(err);\n        });\n        newUser.then(info => {\n          const updatedState = { ...state,\n            currUserId: info.id\n          };\n          fetch(`/api/states/${1}`, {\n            method: \"PUT\",\n            body: JSON.stringify(updatedState),\n            headers: new Headers({\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            })\n          }).then(response => {\n            if (response.ok) {\n              return response.json();\n            }\n\n            console.log(response);\n            throw new Error(response.statusText);\n          }) //Add the newly created order to local orders and update order state\n          .then(finished => {\n            setState(finished);\n          }).catch(err => {\n            console.error(err);\n          });\n        });\n      }\n    }).catch(err => console.error(err)); // eslint-disable-line no-console\n  };\n\n  const teamDataReturn = (team, returnedAccess) => {\n    setTeam(team);\n    setDesired(returnedAccess);\n    setMode(\"Team\");\n  };\n\n  const baseballImage = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: bbLogo,\n    alt: \"BBLogo\",\n    class: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }\n  }));\n\n  if (currUser == null && mode == \"Home\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }\n    }, baseballImage), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }\n    }, \"Voice-Activated Baseball Scoring\")), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LoginScreen, {\n      signIn: handleSignInReturn,\n      createAccount: handleAccountCreation,\n      errorMessage: signinError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }\n    })));\n  } else if (currUser != null && mode == \"Home\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }\n    }, \"Voice-Activated Baseball Scoring\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }\n    }, \"Thanks for signing-in! Please select one of your teams below to get started.\"), /*#__PURE__*/React.createElement(TeamList, {\n      access: access,\n      dataReturn: teamDataReturn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.ButtonContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleSignOutReturn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }\n    }, \"Sign Out!\")));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }\n    }, \"Voice-Activated Baseball Scoring\"), /*#__PURE__*/React.createElement(TeamPage, {\n      team: selectedTeam,\n      access: desiredAccess,\n      returnHome: () => setMode(\"Home\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/App.js"],"names":["React","useState","useEffect","classes","bbLogo","styled","Container","Button","Row","Col","TeamAccessHolder","LoginScreen","TeamList","TeamPage","Header","h1","ButtonDisplay","div","App","state","setState","currUser","setUser","access","setAccess","signinError","setError","mode","setMode","selectedTeam","setTeam","desiredAccess","setDesired","console","log","fetchState","myUser","fetch","then","response","ok","json","Error","statusText","fetchedState","myState","appMode","data","currUserId","fetchedUsers","filteredUser","filter","point","id","catch","err","error","person","fetchedAccesses","filteredAccesses","userId","handleSignInReturn","username","password","checkedSignedIn","user","length","myId","updatedState","method","body","JSON","stringify","headers","Headers","Accept","finished","handleSignOutReturn","handleAccountCreation","personCredentials","newUser","receivedPerson","info","teamDataReturn","team","returnedAccess","baseballImage","Message","ButtonContainer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport classes from './App.css';\nimport bbLogo from './assets/images/baseball.png';\n\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nimport TeamAccessHolder from \"./components/TeamAccessHolder\";\nimport LoginScreen from \"./components/LoginScreen\";\nimport TeamList from \"./components/TeamList\";\nimport TeamPage from \"./components/TeamPage\";\n\n\nconst Header = styled.h1`\n  background-color: green;\n  text-align: center;\n  padding: 1rem;\n  color: white;\n`;\nconst ButtonDisplay = styled.div`\n  background-color: red;\n  padding: 0.5rem 0;\n  margin-bottom: 0.5rem;\n`;\n\nconst App = () => {\n  const [state, setState] = React.useState(null);\n\n  const [currUser, setUser] = React.useState(null);\n  const [access, setAccess] = React.useState(null);\n  const [signinError, setError] = React.useState(\"\");\n\n  const [mode, setMode] = React.useState(\"Home\");\n  const [selectedTeam, setTeam] = React.useState(null);\n  const [desiredAccess, setDesired] = React.useState(null);\n\n  console.log(currUser);\n\n  useEffect(() => {\n\n      const fetchState = () => {\n        const myUser = fetch(\"/api/states\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          }).then((fetchedState) => {\n            // Create a copy of the collections, replacing the current article if this is an edit\n            const myState = fetchedState[0];\n            setState(myState);\n            setMode(myState.appMode);\n            return myState;\n          })\n          .then((data) => {\n            if (data.currUserId == 0) {\n              setUser(null);\n              setAccess(null);\n              setTeam(null);\n              setDesired(null);\n            }\n            else {\n              const myUser = fetch(`/api/users`)\n                .then((response) => {\n                  if (response.ok) {\n                    return response.json();\n                  }\n                  throw new Error(response.statusText);\n                })\n                .then((fetchedUsers) => {\n                    const filteredUser = fetchedUsers.filter(point => point.id == data.currUserId);\n                    setUser(filteredUser[0]);\n                  // Create a copy of the collections, replacing the current article if this is an edit\n                  })\n                .catch((err) => console.error(err)); // eslint-disable-line no-console\n\n                myUser.then((person) => {\n                  fetch(`/api/teamaccess`)\n                    .then((response) => {\n                      if (response.ok) {\n                        return response.json();\n                      }\n                      throw new Error(response.statusText);\n                    })\n                    .then((fetchedAccesses) => {\n                        const filteredAccesses = fetchedAccesses.filter(access => access.userId == person.id);\n                        setAccess(filteredAccesses);\n                      // Create a copy of the collections, replacing the current article if this is an edit\n                      })\n                    .catch((err) => console.error(err)); // eslint-disable-line no-console\n\n\n\n                })\n            }\n\n          })\n      }\n\n      /* const fetchUser = () => {\n        fetch(\"/api/users\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedUsers) => {\n            // Create a copy of the collections, replacing the current article if this is an edit\n            const checkedSignedIn = fetchedUsers.filter(user => user.signedIn == 1);\n            if (checkedSignedIn.length != 0) {\n              setUser(checkedSignedIn[0]);\n              const myID = checkedSignedIn[0].id;\n              console.log(\"ID HERE\");\n              console.log(myID);\n              return myID;\n            }\n          }).then((thatID) => {\n            if (thatID != null) {\n              fetch(`/api/teamaccess`)\n                .then((response) => {\n                  if (response.ok) {\n                    return response.json();\n                  }\n                  throw new Error(response.statusText);\n                })\n                .then((fetchedAccesses) => {\n\n                    const filteredAccess = fetchedAccesses.filter(point => point.userId == thatID);\n\n                  // Create a copy of the collections, replacing the current article if this is an edit\n                    setAccess(filteredAccess);\n                  })\n                .catch((err) => console.error(err)); // eslint-disable-line no-console\n            }\n          })\n          .catch((err) => console.error(err)); // eslint-disable-line no-console\n      };\n      console.log(\"WE OUT HERE\"); */\n      fetchState();\n//add back CurrUser\n}, []);\n\n  console.log(access);\n\n  const handleSignInReturn = (username, password) => {\n    fetch(\"/api/users\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then((fetchedUsers) => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const checkedSignedIn = fetchedUsers.filter(user => user.username == username && user.password == password);\n        if (checkedSignedIn.length != 0) {\n          const myId = checkedSignedIn[0].id;\n\n\n          const updatedState = {...state, currUserId: myId};\n\n          fetch(`/api/states/${1}`, {\n            method: \"PUT\",\n            body: JSON.stringify(updatedState),\n            headers: new Headers({\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            })\n          })\n            .then(response => {\n              if (response.ok) {\n                return response.json();\n              }\n              console.log(response);\n              throw new Error(response.statusText);\n\n            })\n            //Add the newly created order to local orders and update order state\n            .then((finished) => {\n              setState(finished);\n              setError(\"\");\n\n            })\n            .catch(err => {\n              console.error(err);\n            });\n        }\n        else {\n          setError(\"Your username/password combination do not match the ones found in our database\");\n        }\n      })\n      .catch((err) => console.error(err)); // eslint-disable-line no-console\n\n    /*\n    fetch(\"/api/users\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then((fetchedUsers) => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const checkedSignedIn = fetchedUsers.filter(user => user.username == username && user.password == password);\n        if (checkedSignedIn.length != 0) {\n\n          const newPerson = {\n            id: checkedSignedIn[0].id,\n            username: checkedSignedIn[0].username,\n            password: checkedSignedIn[0].password,\n            signedIn: 1\n          }\n\n          const updatedPerson = {...checkedSignedIn[0], ...newPerson};\n\n          fetch(`/api/users/${updatedPerson.id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(updatedPerson),\n            headers: new Headers({\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            })\n          })\n            .then(response => {\n              if (response.ok) {\n                return response.json();\n              }\n              console.log(response);\n              throw new Error(response.statusText);\n\n            })\n            //Add the newly created order to local orders and update order state\n            .then((finished) => {\n              setUser(finished);\n              setError(\"\");\n\n            })\n            .catch(err => {\n              console.error(err);\n            });\n        }\n        else {\n          setError(\"Your username/password combination do not match the ones found in our database\");\n        }\n      })\n      .catch((err) => console.error(err)); // eslint-disable-line no-console\n\n      */\n  };\n\n  const handleSignOutReturn = () => {\n\n    const updatedState = {...state, currUserId: 0};\n\n    fetch(`/api/states/${1}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedState),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        console.log(response);\n        throw new Error(response.statusText);\n\n      })\n      //Add the newly created order to local orders and update order state\n      .then((finished) => {\n        setState(finished);\n        setTeam(null);\n        setDesired(null);\n        setError(\"\");\n        setMode(\"Home\");\n\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n\n  }\n\n  const handleAccountCreation = (personCredentials) =>\n    {\n      fetch(\"/api/users\")\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then((fetchedUsers) => {\n          // Create a copy of the collections, replacing the current article if this is an edit\n          const checkedSignedIn = fetchedUsers.filter(user => user.username == personCredentials.username);\n          if (checkedSignedIn.length != 0) {\n            setError(\"Someone with this username already exists! Either sign-in to your other account or try a new username\");\n          }\n          else {\n            const newUser = fetch(\"/api/users\", {\n              method: \"POST\",\n              body: JSON.stringify(personCredentials),\n              headers: new Headers({\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              })\n            })\n              .then(response => {\n                if (response.ok) {\n                  return response.json();\n                }\n                throw new Error(response.statusText);\n              })\n              //Add the newly created order to local orders and update order state\n              .then(receivedPerson => {\n                return receivedPerson;\n              })\n              .catch(err => {\n                console.error(err);\n              });\n\n\n              newUser.then((info) => {\n                const updatedState = {...state, currUserId: info.id};\n                fetch(`/api/states/${1}`, {\n                  method: \"PUT\",\n                  body: JSON.stringify(updatedState),\n                  headers: new Headers({\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  })\n                })\n                  .then(response => {\n                    if (response.ok) {\n                      return response.json();\n                    }\n                    console.log(response);\n                    throw new Error(response.statusText);\n\n                  })\n                  //Add the newly created order to local orders and update order state\n                  .then((finished) => {\n                    setState(finished);\n\n                  })\n                  .catch(err => {\n                    console.error(err);\n                  });\n\n\n              })\n          }\n        })\n        .catch((err) => console.error(err));  // eslint-disable-line no-console\n    };\n\n  const teamDataReturn = (team, returnedAccess) => {\n    setTeam(team);\n    setDesired(returnedAccess);\n    setMode(\"Team\");\n  };\n\n  const baseballImage = (\n    <div>\n      <img src={bbLogo} alt=\"BBLogo\" class=\"center\" />\n    </div>\n  );\n\n\n  if (currUser == null && mode == \"Home\") {\n    return (\n      <div>\n        <Row>\n          {baseballImage}\n        </Row>\n        <Row>\n          <Header>Voice-Activated Baseball Scoring</Header>\n        </Row>\n        <Container>\n          <LoginScreen signIn={handleSignInReturn} createAccount={handleAccountCreation} errorMessage={signinError}></LoginScreen>\n        </Container>\n      </div>\n    );\n  }\n\n  else if (currUser != null && mode == \"Home\") {\n    return (\n      <div>\n        <Header>Voice-Activated Baseball Scoring</Header>\n        <div className={classes.Message}>Thanks for signing-in! Please select one of your teams below to get started.</div>\n        <TeamList access={access} dataReturn={teamDataReturn}></TeamList>\n        <div className={classes.ButtonContainer}>\n          <Button onClick={handleSignOutReturn}>Sign Out!</Button>\n        </div>\n      </div>\n    );\n  }\n\n  else {\n    return (\n      <div>\n        <Header>Voice-Activated Baseball Scoring</Header>\n        <TeamPage team={selectedTeam} access={desiredAccess} returnHome={() => setMode(\"Home\")}></TeamPage>\n      </div>\n    );\n  }\n\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}