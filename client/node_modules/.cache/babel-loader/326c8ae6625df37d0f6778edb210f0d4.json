{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/App.js\";\n\n/* styling and react components */\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row } from \"reactstrap\";\n/*components called from app*/\n\nimport LoginScreen from \"./components/LoginScreen\";\nimport TeamList from \"./components/TeamList\";\nimport TeamPage from \"./components/TeamPage\";\n/*css and graphics*/\n\nimport classes from './App.css';\nimport bbLogo from './assets/images/baseball.png';\nconst Header = styled.h1`\n  background-color: green;\n  text-align: center;\n  padding: 1rem;\n  color: white;\n`;\n\nconst App = () => {\n  /*hooks*/\n  const [currUser, setUser] = React.useState(null);\n  const [access, setAccess] = React.useState(null);\n  const [signinError, setError] = React.useState(\"\");\n  const [mode, setMode] = React.useState(\"Home\");\n  const [selectedTeam, setTeam] = React.useState(null);\n  const [desiredAccess, setDesired] = React.useState(null);\n  useEffect(() => {\n    /*Finds if a user is signed in already, returning their accesses if so*/\n    const fetchUser = () => {\n      fetch(\"/api/users\").then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedUsers => {\n        const checkedSignedIn = fetchedUsers.filter(user => user.signedIn === 1);\n\n        if (checkedSignedIn.length !== 0) {\n          setUser(checkedSignedIn[0]);\n          const myID = checkedSignedIn[0].id;\n          console.log(\"ID HERE\");\n          console.log(myID);\n          return myID;\n        }\n      }).then(thatID => {\n        /*calls for the teamaccess of a signed-in user*/\n        if (thatID !== null) {\n          fetch(`/api/teamaccess`).then(response => {\n            if (response.ok) {\n              return response.json();\n            }\n\n            throw new Error(response.statusText);\n          }).then(fetchedAccesses => {\n            /*Finds the accesses that connect to the given user*/\n            const filteredAccess = fetchedAccesses.filter(point => point.userId === thatID);\n            setAccess(filteredAccess);\n          }).catch(err => console.error(err)); // eslint-disable-line no-console\n        }\n      }).catch(err => console.error(err)); // eslint-disable-line no-console\n    };\n\n    fetchUser();\n  }, [currUser]);\n\n  const handleSignInReturn = (username, password) => {\n    //Puts user into the database with 1 in the signed in field\n    fetch(\"/api/users\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedUsers => {\n      // Create a copy of the collections, replacing the current article if this is an edit\n      const checkedSignedIn = fetchedUsers.filter(user => user.username === username && user.password === password);\n\n      if (checkedSignedIn.length !== 0) {\n        const newPerson = {\n          id: checkedSignedIn[0].id,\n          username: checkedSignedIn[0].username,\n          password: checkedSignedIn[0].password,\n          signedIn: 1\n        };\n        const updatedPerson = { ...checkedSignedIn[0],\n          ...newPerson\n        };\n        fetch(`/api/users/${updatedPerson.id}`, {\n          method: \"PUT\",\n          body: JSON.stringify(updatedPerson),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          console.log(response);\n          throw new Error(response.statusText);\n        }) //Add the newly created order to local orders and update order state\n        .then(finished => {\n          setUser(finished);\n          setError(\"\");\n        }).catch(err => {\n          console.error(err);\n        });\n      } else {\n        setError(\"Your username/password combination do not match the ones found in our database\");\n      }\n    }).catch(err => console.error(err)); // eslint-disable-line no-console\n  };\n\n  const handleSignOutReturn = () => {\n    const updatedPerson = { ...currUser,\n      signedIn: 0\n    };\n    fetch(`/api/users/${currUser.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedPerson),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      console.log(response);\n      throw new Error(response.statusText);\n    }) //Add the newly created order to local orders and update order state\n    .then(finished => {\n      setUser(null);\n      setMode(\"Home\");\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const handleAccountCreation = personCredentials => {\n    fetch(\"/api/users\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedUsers => {\n      // Create a copy of the collections, replacing the current article if this is an edit\n      const checkedSignedIn = fetchedUsers.filter(user => user.username === personCredentials.username);\n\n      if (checkedSignedIn.length !== 0) {\n        setError(\"Someone with this username already exists! Either sign-in to your other account or try a new username\");\n      } else {\n        fetch(\"/api/users\", {\n          method: \"POST\",\n          body: JSON.stringify(personCredentials),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }) //Add the newly created order to local orders and update order state\n        .then(receivedPerson => {\n          setUser(receivedPerson);\n        }).catch(err => {\n          console.error(err);\n        });\n      }\n    }).catch(err => console.error(err)); // eslint-disable-line no-console\n  };\n\n  const teamDataReturn = (team, returnedAccess) => {\n    setTeam(team);\n    setDesired(returnedAccess);\n    setMode(\"Team\");\n  };\n\n  const baseballImage = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: bbLogo,\n    alt: \"BBLogo\",\n    class: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }));\n\n  if (currUser === null && mode === \"Home\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, baseballImage), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, \"Voice-Activated Baseball Scoring\")), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LoginScreen, {\n      signIn: handleSignInReturn,\n      createAccount: handleAccountCreation,\n      errorMessage: signinError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    })));\n  } else if (currUser !== null && mode === \"Home\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }, \"Voice-Activated Baseball Scoring\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }, \"Thanks for signing-in! Please select one of your teams below to get started.\"), /*#__PURE__*/React.createElement(TeamList, {\n      access: access,\n      dataReturn: teamDataReturn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.ButtonContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleSignOutReturn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, \"Sign Out!\")));\n  } else {\n    console.log(\"SHOW ME\");\n    console.log(selectedTeam);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }, \"Voice-Activated Baseball Scoring\"), /*#__PURE__*/React.createElement(TeamPage, {\n      team: selectedTeam,\n      access: desiredAccess,\n      returnHome: () => setMode(\"Home\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/App.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","LoginScreen","TeamList","TeamPage","classes","bbLogo","Header","h1","App","currUser","setUser","access","setAccess","signinError","setError","mode","setMode","selectedTeam","setTeam","desiredAccess","setDesired","fetchUser","fetch","then","response","ok","json","Error","statusText","fetchedUsers","checkedSignedIn","filter","user","signedIn","length","myID","id","console","log","thatID","fetchedAccesses","filteredAccess","point","userId","catch","err","error","handleSignInReturn","username","password","newPerson","updatedPerson","method","body","JSON","stringify","headers","Headers","Accept","finished","handleSignOutReturn","handleAccountCreation","personCredentials","receivedPerson","teamDataReturn","team","returnedAccess","baseballImage","Message","ButtonContainer"],"mappings":"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","sourcesContent":["/* styling and react components */\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row} from \"reactstrap\";\n\n/*components called from app*/\nimport LoginScreen from \"./components/LoginScreen\";\nimport TeamList from \"./components/TeamList\";\nimport TeamPage from \"./components/TeamPage\";\n\n/*css and graphics*/\nimport classes from './App.css';\nimport bbLogo from './assets/images/baseball.png';\n\nconst Header = styled.h1`\n  background-color: green;\n  text-align: center;\n  padding: 1rem;\n  color: white;\n`;\n\nconst App = () => {\n  /*hooks*/\n  const [currUser, setUser] = React.useState(null);\n  const [access, setAccess] = React.useState(null);\n  const [signinError, setError] = React.useState(\"\");\n\n  const [mode, setMode] = React.useState(\"Home\");\n  const [selectedTeam, setTeam] = React.useState(null);\n  const [desiredAccess, setDesired] = React.useState(null);\n\n  useEffect(() => {\n    /*Finds if a user is signed in already, returning their accesses if so*/\n      const fetchUser = () => {\n        fetch(\"/api/users\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedUsers) => {\n            const checkedSignedIn = fetchedUsers.filter(user => user.signedIn ===1);\n            if (checkedSignedIn.length !==0) {\n              setUser(checkedSignedIn[0]);\n              const myID = checkedSignedIn[0].id;\n              console.log(\"ID HERE\");\n              console.log(myID);\n              return myID;\n            }\n          }).then((thatID) => {\n            /*calls for the teamaccess of a signed-in user*/\n            if (thatID !==null) {\n              fetch(`/api/teamaccess`)\n                .then((response) => {\n                  if (response.ok) {\n                    return response.json();\n                  }\n                  throw new Error(response.statusText);\n                })\n                .then((fetchedAccesses) => {\n                  /*Finds the accesses that connect to the given user*/\n                    const filteredAccess = fetchedAccesses.filter(point => point.userId ===thatID);\n                    setAccess(filteredAccess);\n                  })\n                .catch((err) => console.error(err)); // eslint-disable-line no-console\n            }\n          })\n          .catch((err) => console.error(err)); // eslint-disable-line no-console\n      };\n      fetchUser();\n}, [currUser]);\n\n\n  const handleSignInReturn = (username, password) => {\n    //Puts user into the database with 1 in the signed in field\n    fetch(\"/api/users\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then((fetchedUsers) => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const checkedSignedIn = fetchedUsers.filter(user => user.username ===username && user.password ===password);\n        if (checkedSignedIn.length !==0) {\n\n          const newPerson = {\n            id: checkedSignedIn[0].id,\n            username: checkedSignedIn[0].username,\n            password: checkedSignedIn[0].password,\n            signedIn: 1\n          }\n\n          const updatedPerson = {...checkedSignedIn[0], ...newPerson};\n\n          fetch(`/api/users/${updatedPerson.id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(updatedPerson),\n            headers: new Headers({\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            })\n          })\n            .then(response => {\n              if (response.ok) {\n                return response.json();\n              }\n              console.log(response);\n              throw new Error(response.statusText);\n\n            })\n            //Add the newly created order to local orders and update order state\n            .then((finished) => {\n              setUser(finished);\n              setError(\"\");\n\n            })\n            .catch(err => {\n              console.error(err);\n            });\n        }\n        else {\n          setError(\"Your username/password combination do not match the ones found in our database\");\n        }\n      })\n      .catch((err) => console.error(err)); // eslint-disable-line no-console\n\n  };\n\n  const handleSignOutReturn = () => {\n\n    const updatedPerson = {...currUser, signedIn: 0};\n\n    fetch(`/api/users/${currUser.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedPerson),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        console.log(response);\n        throw new Error(response.statusText);\n\n      })\n      //Add the newly created order to local orders and update order state\n      .then((finished) => {\n        setUser(null);\n        setMode(\"Home\");\n\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n\n  }\n\n  const handleAccountCreation = (personCredentials) =>\n    {\n      fetch(\"/api/users\")\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then((fetchedUsers) => {\n          // Create a copy of the collections, replacing the current article if this is an edit\n          const checkedSignedIn = fetchedUsers.filter(user => user.username ===personCredentials.username);\n          if (checkedSignedIn.length !== 0) {\n            setError(\"Someone with this username already exists! Either sign-in to your other account or try a new username\");\n          }\n          else {\n            fetch(\"/api/users\", {\n              method: \"POST\",\n              body: JSON.stringify(personCredentials),\n              headers: new Headers({\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              })\n            })\n              .then(response => {\n                if (response.ok) {\n                  return response.json();\n                }\n                throw new Error(response.statusText);\n              })\n              //Add the newly created order to local orders and update order state\n              .then(receivedPerson => {\n                setUser(receivedPerson);\n              })\n              .catch(err => {\n                console.error(err);\n              });\n          }\n        })\n        .catch((err) => console.error(err));  // eslint-disable-line no-console\n    };\n\n  const teamDataReturn = (team, returnedAccess) => {\n    setTeam(team);\n    setDesired(returnedAccess);\n    setMode(\"Team\");\n  };\n\n  const baseballImage = (\n    <div>\n      <img src={bbLogo} alt=\"BBLogo\" class=\"center\" />\n    </div>\n  );\n\n  if (currUser ===null && mode ===\"Home\") {\n    return (\n      <div>\n        <Row>\n          {baseballImage}\n        </Row>\n        <Row>\n          <Header>Voice-Activated Baseball Scoring</Header>\n        </Row>\n        <Container>\n          <LoginScreen signIn={handleSignInReturn} createAccount={handleAccountCreation} errorMessage={signinError}></LoginScreen>\n        </Container>\n      </div>\n    );\n  }\n\n  else if (currUser !==null && mode ===\"Home\") {\n    return (\n      <div>\n        <Header>Voice-Activated Baseball Scoring</Header>\n        <div className={classes.Message}>Thanks for signing-in! Please select one of your teams below to get started.</div>\n        <TeamList access={access} dataReturn={teamDataReturn}></TeamList>\n        <div className={classes.ButtonContainer}>\n          <Button onClick={handleSignOutReturn}>Sign Out!</Button>\n        </div>\n      </div>\n    );\n  }\n\n  else {\n    console.log(\"SHOW ME\");\n    console.log(selectedTeam);\n    return (\n      <div>\n        <Header>Voice-Activated Baseball Scoring</Header>\n        <TeamPage team={selectedTeam} access={desiredAccess} returnHome={() => setMode(\"Home\")}></TeamPage>\n      </div>\n    );\n  }\n\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}