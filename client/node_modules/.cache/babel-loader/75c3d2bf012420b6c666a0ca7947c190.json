{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/GameDisplay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nimport LineupPlayer from \"./LineupPlayer\";\nimport InningReader from \"./InningReader\";\nimport classes from \"./GameDisplay.module.css\";\n\nconst LineupHolder = ({\n  game,\n  teamId\n}) => {\n  const [lineup, setLineup] = React.useState(null);\n  const [bench, setBench] = React.useState(null);\n  const [bullpen, setBullpen] = React.useState(null);\n\n  function checkIn(playerId, lineup) {\n    if (lineup.firstId == playerId || lineup.secondId == playerId || lineup.thirdId == playerId || lineup.fourthId == playerId || lineup.fifthId == playerId || lineup.sixthId == playerId || lineup.seventhId == playerId || lineup.eighthId == playerId || lineup.ninthId == playerId || lineup.pitcher == playerId) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function makeArray(lineupObj) {\n    return [lineupObj.firstId, lineupObj.secondId, lineupObj.thirdId, lineupObj.fourthId, lineupObj.fifthId, lineupObj.sixthId, lineupObj.seventhId, lineupObj.eighthId, lineupObj.ninthId, lineupObj.pitcher];\n  }\n\n  useEffect(() => {\n    const theLineup = fetch(`api/players/${teamId}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedPlayers => {\n      return fetchedPlayers;\n    }).catch(err => {\n      console.error(err);\n    });\n    theLineup.then(data => {\n      fetch(`api/lineups/${game.id}`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedLineups => {\n        const trueLineList = fetchedLineups.filter(lineup => teamId == lineup.teamId);\n        const trueLine = trueLineList[0];\n        const myBullpen = [];\n        const myBench = [];\n        data.forEach(player => {\n          if (player.position != 1) {\n            if (!checkIn(player.id, trueLine)) {\n              myBench.push(player);\n            }\n          } else {\n            if (!checkIn(player.id, trueLine)) {\n              myBullpen.push(player);\n            }\n          }\n        });\n        setLineup(trueLine);\n        setBench(myBench);\n        setBullpen(myBullpen);\n      }).catch(err => {\n        console.error(err);\n      });\n    });\n  }, []);\n\n  if (lineup == null || bullpen == null || bench == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  const madeList = makeArray(lineup);\n  const lineupMap = madeList.map(playerId => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(LineupPlayer, {\n    playerId: playerId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 53\n    }\n  })));\n  const bullpenMap = bullpen.map(pitcher => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 47\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 52\n    }\n  }, pitcher.name)));\n  const benchMap = bench.map(hitter => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 47\n    }\n  }, hitter.name)));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.LineupHolder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.TeamTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, teamId, \"'s Lineup\"), lineupMap, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.SmallSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.TeamTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Bullpen\"), bullpenMap), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.SmallSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.TeamTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Bench\"), benchMap));\n};\n\nconst GameTitleAndBox = ({\n  game\n}) => {\n  const [homeTeam, setHome] = React.useState(null);\n  const [roadTeam, setRoad] = React.useState(null);\n  const [innings, setInnings] = React.useState([]);\n  useEffect(() => {\n    const setTeams = () => {\n      fetch(`api/teams`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedTeams => {\n        const filteredTeams = fetchedTeams.filter(team => team.id == game.awayId || team.id == game.homeId);\n\n        if (filteredTeams[0].id == game.homeId) {\n          setHome(filteredTeams[0]);\n          setRoad(filteredTeams[1]);\n        } else {\n          setHome(filteredTeams[1]);\n          setRoad(filteredTeams[0]);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n\n    const getdaInnings = () => {\n      fetch(`api/innings/${game.id}`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedInnings => {\n        setInnings(fetchedInnings);\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n\n    setTeams();\n    getdaInnings();\n  }, []);\n  const awayOpps = [];\n  const homeOpps = [];\n  let homeHits = 0;\n  let awayHits = 0;\n  let homeRuns = 0;\n  let awayRuns = 0;\n  innings.forEach((inning, index) => {\n    if (index % 2 == 0) {\n      awayOpps.push(inning.runs);\n      awayHits = awayHits + inning.hits;\n      awayRuns = awayRuns + inning.runs;\n    } else {\n      homeOpps.push(inning.runs);\n      homeHits = homeHits + inning.hits;\n      homeRuns = homeRuns + inning.runs;\n    }\n  });\n  let loopCounter = innings.length;\n\n  while (loopCounter != 18) {\n    if (loopCounter % 2 == 0) {\n      homeOpps.push(\"-\");\n    } else {\n      awayOpps.push(\"-\");\n    }\n\n    loopCounter += 1;\n  }\n\n  const awayMapping = awayOpps.map(opp => /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 44\n    }\n  }, opp));\n  const homeMapping = homeOpps.map(opp => /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 45\n    }\n  }, opp));\n\n  if (homeTeam == null || roadTeam == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.Title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, roadTeam.name, \" at \", homeTeam.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"Team\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"4\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \"5\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, \"6\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, \"7\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, \"8\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, \"9\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, \"R\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, \"H\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, roadTeam.name), awayMapping, /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, awayRuns), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, awayHits)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, homeTeam.name), homeMapping, /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, homeRuns), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.LineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, homeHits)));\n};\n\nconst GameDisplay = ({\n  gameId,\n  back\n}) => {\n  const [myGame, setGame] = React.useState(null);\n  const [currInn, setCurrInn] = React.useState(null);\n  const [whoHitting, setHittingId] = React.useState(\"Away\");\n  const [awayOrder, setAwayOrder] = React.useState(0);\n  const [homeOrder, setHomeOrder] = React.useState(0);\n  console.log(\"THIS IS THE CURRENT INNING\");\n  console.log(currInn);\n  useEffect(() => {\n    const setUP = fetch(\"api/games\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedGames => {\n      const filteredGames = fetchedGames.filter(game => game.id == gameId);\n      setGame(filteredGames[0]);\n      return filteredGames[0];\n    }).catch(err => {\n      console.error(err);\n    });\n    setUP.then(data => {\n      fetch(`api/innings/${data.id}`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedInnings => {\n        if (fetchedInnings.length == 0) {\n          const myInning = {\n            gameId: data.id,\n            pitchingId: data.homeId,\n            hittingId: data.awayId,\n            number: 1,\n            runs: 0,\n            hits: 0,\n            balls: 0,\n            strikes: 0,\n            outs: 0,\n            firstRunnerId: 0,\n            secondRunnerId: 0,\n            thirdRunnerId: 0\n          };\n          fetch(\"/api/innings\", {\n            method: \"POST\",\n            body: JSON.stringify(myInning),\n            headers: new Headers({\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            })\n          }).then(response => {\n            if (response.ok) {\n              return response.json();\n            }\n\n            throw new Error(response.statusText);\n          }).then(returnedInning => {\n            setCurrInn(returnedInning);\n            setHittingId(\"Away\");\n          }).catch(err => {\n            console.error(err);\n          });\n        } else {\n          if (fetchedInnings.length % 2 == 0) {\n            setHittingId(\"Home\");\n          } else {\n            setHittingId(\"Away\");\n          }\n\n          setCurrInn(fetchedInnings[fetchedInnings.length - 1]);\n        }\n      });\n    });\n  }, []);\n\n  const startNewInning = loc => {\n    console.log(\"Im here\");\n    const findInnings = fetch(`api/innings/${myGame.id}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedInnings => {\n      return fetchedInnings;\n    }).catch(err => {\n      console.error(err);\n    });\n    findInnings.then(data => {\n      console.log(data);\n\n      if (data.length % 2 == 0) {\n        const myInning = {\n          gameId: myGame.id,\n          pitchingId: myGame.homeId,\n          hittingId: myGame.awayId,\n          number: data[data.length - 1].number + 1,\n          runs: 0,\n          hits: 0,\n          balls: 0,\n          strikes: 0,\n          outs: 0,\n          firstRunnerId: 0,\n          secondRunnerId: 0,\n          thirdRunnerId: 0\n        };\n        console.log(\"NEW INNING\");\n        console.log(myInning);\n        fetch(\"/api/innings\", {\n          method: \"POST\",\n          body: JSON.stringify(myInning),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(returnedInning => {\n          setCurrInn(returnedInning);\n\n          if (whoHitting == \"Away\") {\n            setAwayOrder(loc);\n          } else {\n            setHomeOrder(loc);\n          }\n\n          setHittingId(\"Away\");\n        }).catch(err => {\n          console.error(err);\n        });\n      } else {\n        const myInning = {\n          gameId: myGame.id,\n          pitchingId: myGame.awayId,\n          hittingId: myGame.homeId,\n          number: data[data.length - 1].number,\n          runs: 0,\n          hits: 0,\n          balls: 0,\n          strikes: 0,\n          outs: 0,\n          firstRunnerId: 0,\n          secondRunnerId: 0,\n          thirdRunnerId: 0\n        };\n        console.log(\"NEW INNING\");\n        console.log(myInning);\n        fetch(\"/api/innings\", {\n          method: \"POST\",\n          body: JSON.stringify(myInning),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(returnedInning => {\n          setCurrInn(returnedInning);\n\n          if (whoHitting == \"Away\") {\n            setAwayOrder(loc);\n          } else {\n            setHomeOrder(loc);\n          }\n\n          setHittingId(\"Home\");\n        }).catch(err => {\n          console.error(err);\n        });\n      }\n    });\n  };\n\n  const handleEndInning = (changedInning, atWhere) => {\n    console.log(\"Here\");\n    fetch(`/api/innings/${changedInning.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(changedInning),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      console.log(response);\n      throw new Error(response.statusText);\n    }) //Add the newly created order to local orders and update order state\n    .then(finished => {\n      console.log(\"Flip\");\n    }).catch(err => {\n      console.error(err);\n    });\n    startNewInning(atWhere);\n  };\n\n  if (myGame == null || currInn == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 7\n      }\n    }, \"Loading...\");\n  }\n\n  if (whoHitting == \"Away\") {\n    console.log(\"INNING BEING PASSED\");\n    console.log(currInn);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GameTitleAndBox, {\n      game: myGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.LeanLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LineupHolder, {\n      game: myGame,\n      teamId: myGame.awayId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.LeanRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InningReader, {\n      currInning: currInn,\n      hitOrder: awayOrder,\n      endInn: handleEndInning,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.LeanLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LineupHolder, {\n      game: myGame,\n      teamId: myGame.homeId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Instructions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }\n    }, \"Each pitch is taken into the database as an individual play. When entering a play, say the following: \\\"Pitch (pitch type) (pitch speed) (pitch location) hit (result) end\\\" Pitch Types: Any! (Fastball, Changeup, Curveball, etc.) Pitch Speeds: Any! Pitch Locations: 1- up and in, 2 up and middle, 3 up and out, 4 middle and in, 5 middle middle, 6 middle and out, 7 low and in, 8 low and middle, 9 low and out. Results: Either a hit, Fly Out, Ground Out, Ball/Strike Looking/Swinging, Strikeout, or Foul.\"));\n  }\n\n  console.log(\"INNING BEING PASSED\");\n  console.log(currInn);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GameTitleAndBox, {\n    game: myGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.LeanLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LineupHolder, {\n    game: myGame,\n    teamId: myGame.awayId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.LeanRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InningReader, {\n    currInning: currInn,\n    hitOrder: homeOrder,\n    endInn: handleEndInning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.LeanLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LineupHolder, {\n    game: myGame,\n    teamId: myGame.homeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }\n  }, \"Each pitch is taken into the database as an individual play. When entering a play, say the following: \\\"Pitch (pitch type) (pitch speed) (pitch location) hit (result) end\\\" Pitch Types: Any! (Fastball, Changeup, Curveball, etc.) Pitch Speeds: Any! Pitch Locations: 1- up and in, 2 up and middle, 3 up and out, 4 middle and in, 5 middle middle, 6 middle and out, 7 low and in, 8 low and middle, 9 low and out. Results: Either a hit, Fly Out, Ground Out, Ball/Strike Looking/Swinging, Strikeout, or Foul.\"));\n};\n\nexport default GameDisplay;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/GameDisplay.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","LineupPlayer","InningReader","classes","LineupHolder","game","teamId","lineup","setLineup","bench","setBench","bullpen","setBullpen","checkIn","playerId","firstId","secondId","thirdId","fourthId","fifthId","sixthId","seventhId","eighthId","ninthId","pitcher","makeArray","lineupObj","theLineup","fetch","then","response","ok","json","Error","statusText","fetchedPlayers","catch","err","console","error","data","id","fetchedLineups","trueLineList","filter","trueLine","myBullpen","myBench","forEach","player","position","push","madeList","lineupMap","map","bullpenMap","name","benchMap","hitter","TeamTitle","SmallSection","GameTitleAndBox","homeTeam","setHome","roadTeam","setRoad","innings","setInnings","setTeams","fetchedTeams","filteredTeams","team","awayId","homeId","getdaInnings","fetchedInnings","awayOpps","homeOpps","homeHits","awayHits","homeRuns","awayRuns","inning","index","runs","hits","loopCounter","length","awayMapping","opp","LineItem","homeMapping","Title","Line","GameDisplay","gameId","back","myGame","setGame","currInn","setCurrInn","whoHitting","setHittingId","awayOrder","setAwayOrder","homeOrder","setHomeOrder","log","setUP","fetchedGames","filteredGames","myInning","pitchingId","hittingId","number","balls","strikes","outs","firstRunnerId","secondRunnerId","thirdRunnerId","method","body","JSON","stringify","headers","Headers","Accept","returnedInning","startNewInning","loc","findInnings","handleEndInning","changedInning","atWhere","finished","LeanLeft","LeanRight","Instructions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nimport LineupPlayer from \"./LineupPlayer\";\nimport InningReader from \"./InningReader\";\n\nimport classes from \"./GameDisplay.module.css\";\n\nconst LineupHolder = ({ game, teamId }) => {\n  const [lineup, setLineup] = React.useState(null);\n  const [bench, setBench] = React.useState(null);\n  const [bullpen, setBullpen] = React.useState(null);\n\n  function checkIn(playerId, lineup) {\n    if (lineup.firstId == playerId || lineup.secondId == playerId || lineup.thirdId == playerId || lineup.fourthId == playerId || lineup.fifthId == playerId || lineup.sixthId == playerId || lineup.seventhId == playerId || lineup.eighthId == playerId || lineup.ninthId == playerId || lineup.pitcher == playerId) {\n      return true;\n    }\n    return false;\n  }\n\n  function makeArray(lineupObj) {\n    return [lineupObj.firstId, lineupObj.secondId, lineupObj.thirdId, lineupObj.fourthId, lineupObj.fifthId, lineupObj.sixthId, lineupObj.seventhId, lineupObj.eighthId, lineupObj.ninthId, lineupObj.pitcher];\n  }\n\n  useEffect(() => {\n      const theLineup = fetch(`api/players/${teamId}`)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then((fetchedPlayers) => {\n          return fetchedPlayers;\n        }).catch(err => {\n          console.error(err);\n        });\n\n        theLineup.then(data => {\n          fetch(`api/lineups/${game.id}`)\n            .then((response) => {\n              if (response.ok) {\n                return response.json();\n              }\n              throw new Error(response.statusText);\n            })\n            .then((fetchedLineups) => {\n              const trueLineList = fetchedLineups.filter(lineup => teamId == lineup.teamId);\n              const trueLine = trueLineList[0];\n              const myBullpen = [];\n              const myBench = [];\n              data.forEach(player => {\n                if (player.position != 1) {\n                  if (!checkIn(player.id, trueLine)) {\n                    myBench.push(player);\n                  }\n                }\n                else {\n                  if (!checkIn(player.id, trueLine)) {\n                    myBullpen.push(player);\n                  }\n                }\n              });\n\n              setLineup(trueLine);\n              setBench(myBench);\n              setBullpen(myBullpen);\n            }).catch(err => {\n              console.error(err);\n            });\n        })\n    }, []);\n\n\n\n    if (lineup == null || bullpen == null || bench == null) {\n      return (<div>Loading...</div>);\n    }\n\n    const madeList = makeArray(lineup);\n\n    const lineupMap = madeList.map(playerId => <div><LineupPlayer playerId={playerId}></LineupPlayer></div>);\n    const bullpenMap = bullpen.map(pitcher => <div><small>{pitcher.name}</small></div>);\n    const benchMap = bench.map(hitter => <div><small>{hitter.name}</small></div>);\n\n    return (\n      <div className={classes.LineupHolder}>\n        <strong className={classes.TeamTitle}>{teamId}'s Lineup</strong>\n        {lineupMap}\n        <div className={classes.SmallSection}>\n          <small className={classes.TeamTitle}>Bullpen</small>\n          {bullpenMap}\n        </div>\n        <div className={classes.SmallSection}>\n          <small className={classes.TeamTitle}>Bench</small>\n          {benchMap}\n        </div>\n      </div>\n    );\n}\n\nconst GameTitleAndBox = ({ game }) => {\n  const [homeTeam, setHome] = React.useState(null);\n  const [roadTeam, setRoad] = React.useState(null);\n  const [innings, setInnings] = React.useState([]);\n\n  useEffect(() => {\n      const setTeams = () => {\n        fetch(`api/teams`)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedTeams) => {\n            const filteredTeams = fetchedTeams.filter(team => team.id == game.awayId || team.id == game.homeId);\n            if (filteredTeams[0].id == game.homeId) {\n              setHome(filteredTeams[0]);\n              setRoad(filteredTeams[1]);\n            }\n            else {\n              setHome(filteredTeams[1]);\n              setRoad(filteredTeams[0]);\n            }\n          }).catch(err => {\n            console.error(err);\n          });\n      }\n      const getdaInnings = () => {\n        fetch(`api/innings/${game.id}`)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedInnings) => {\n            setInnings(fetchedInnings);\n          }).catch(err => {\n            console.error(err);\n          });\n      }\n      setTeams();\n      getdaInnings();\n    }, []);\n\n    const awayOpps = [];\n    const homeOpps = [];\n    let homeHits = 0;\n    let awayHits = 0;\n    let homeRuns = 0;\n    let awayRuns = 0;\n    innings.forEach((inning, index) => {\n      if (index % 2 == 0) {\n        awayOpps.push(inning.runs);\n        awayHits = awayHits + inning.hits;\n        awayRuns = awayRuns + inning.runs;\n      }\n      else {\n        homeOpps.push(inning.runs);\n        homeHits = homeHits + inning.hits;\n        homeRuns = homeRuns + inning.runs;\n      }\n    });\n\n    let loopCounter = innings.length;\n    while (loopCounter != 18) {\n      if (loopCounter %2 == 0) {\n        homeOpps.push(\"-\");\n      }\n      else {\n        awayOpps.push(\"-\");\n      }\n\n      loopCounter += 1;\n    }\n\n    const awayMapping = awayOpps.map(opp =><small className={classes.LineItem}>{opp}</small>);\n    const homeMapping = homeOpps.map(opp => <small className={classes.LineItem}>{opp}</small>);\n\n    if (homeTeam == null || roadTeam == null) {\n      return (<div>Loading...</div>);\n    }\n\n    return (\n      <div>\n        <h1 className={classes.Title}>{roadTeam.name} at {homeTeam.name}</h1>\n        <div className={classes.Line}>\n          <small className={classes.LineItem}>Team</small>\n          <small className={classes.LineItem}>1</small>\n          <small className={classes.LineItem}>2</small>\n          <small className={classes.LineItem}>3</small>\n          <small className={classes.LineItem}>4</small>\n          <small className={classes.LineItem}>5</small>\n          <small className={classes.LineItem}>6</small>\n          <small className={classes.LineItem}>7</small>\n          <small className={classes.LineItem}>8</small>\n          <small className={classes.LineItem}>9</small>\n          <small className={classes.LineItem}>R</small>\n          <small className={classes.LineItem}>H</small>\n        </div>\n        <div className={classes.Line}>\n          <small className={classes.LineItem}>{roadTeam.name}</small>\n          {awayMapping}\n          <small className={classes.LineItem}>{awayRuns}</small>\n          <small className={classes.LineItem}>{awayHits}</small>\n        </div>\n        <div className={classes.Line}>\n          <small className={classes.LineItem}>{homeTeam.name}</small>\n          {homeMapping}\n          <small className={classes.LineItem}>{homeRuns}</small>\n          <small className={classes.LineItem}>{homeHits}</small>\n        </div>\n      </div>\n    );\n\n\n}\n\nconst GameDisplay = ({ gameId, back }) => {\n  const [myGame, setGame] = React.useState(null);\n  const [currInn, setCurrInn] = React.useState(null);\n  const [whoHitting, setHittingId] = React.useState(\"Away\");\n  const [awayOrder, setAwayOrder] = React.useState(0);\n  const [homeOrder, setHomeOrder] = React.useState(0);\n\n  console.log(\"THIS IS THE CURRENT INNING\");\n  console.log(currInn);\n\n  useEffect(() => {\n      const setUP = fetch(\"api/games\")\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then((fetchedGames) => {\n          const filteredGames = fetchedGames.filter(game => game.id == gameId);\n          setGame(filteredGames[0]);\n          return filteredGames[0];\n        }).catch(err => {\n          console.error(err);\n        });\n\n        setUP.then((data) => {\n          fetch(`api/innings/${data.id}`)\n            .then((response) => {\n              if (response.ok) {\n                return response.json();\n              }\n              throw new Error(response.statusText);\n            })\n            .then((fetchedInnings) => {\n              if (fetchedInnings.length == 0) {\n                const myInning = ({\n                  gameId: data.id,\n                  pitchingId: data.homeId,\n                  hittingId: data.awayId,\n                  number: 1,\n                  runs: 0,\n                  hits: 0,\n                  balls: 0,\n                  strikes: 0,\n                  outs: 0,\n                  firstRunnerId: 0,\n                  secondRunnerId: 0,\n                  thirdRunnerId: 0\n                });\n                fetch(\"/api/innings\", {\n                  method: \"POST\",\n                  body: JSON.stringify(myInning),\n                  headers: new Headers({\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  })\n                })\n                  .then(response => {\n                    if (response.ok) {\n                      return response.json();\n                    }\n                    throw new Error(response.statusText);\n                  })\n                  .then((returnedInning) => {\n                    setCurrInn(returnedInning);\n                    setHittingId(\"Away\");\n                  }).catch(err => {\n                    console.error(err);\n                  });\n              }\n              else {\n                if (fetchedInnings.length % 2 == 0) {\n                  setHittingId(\"Home\");\n                }\n                else {\n                  setHittingId(\"Away\");\n                }\n                setCurrInn(fetchedInnings[fetchedInnings.length - 1]);\n              }\n            })\n\n        })\n\n    }, []);\n\n  const startNewInning = (loc) => {\n    console.log(\"Im here\");\n    const findInnings = fetch(`api/innings/${myGame.id}`)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then((fetchedInnings) => {\n        return fetchedInnings;\n      }).catch(err => {\n        console.error(err);\n      });\n\n      findInnings.then((data) => {\n        console.log(data);\n        if (data.length % 2 == 0) {\n          const myInning = ({\n            gameId: myGame.id,\n            pitchingId: myGame.homeId,\n            hittingId: myGame.awayId,\n            number: data[data.length - 1].number + 1,\n            runs: 0,\n            hits: 0,\n            balls: 0,\n            strikes: 0,\n            outs: 0,\n            firstRunnerId: 0,\n            secondRunnerId: 0,\n            thirdRunnerId: 0\n          });\n          console.log(\"NEW INNING\");\n          console.log(myInning);\n          fetch(\"/api/innings\", {\n            method: \"POST\",\n            body: JSON.stringify(myInning),\n            headers: new Headers({\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            })\n          })\n            .then(response => {\n              if (response.ok) {\n                return response.json();\n              }\n              throw new Error(response.statusText);\n            })\n            .then((returnedInning) => {\n              setCurrInn(returnedInning);\n              if (whoHitting == \"Away\") {\n                setAwayOrder(loc);\n              }\n              else {\n                setHomeOrder(loc);\n              }\n              setHittingId(\"Away\");\n            }).catch(err => {\n              console.error(err);\n            });\n\n        }\n        else {\n\n          const myInning = ({\n            gameId: myGame.id,\n            pitchingId: myGame.awayId,\n            hittingId: myGame.homeId,\n            number: data[data.length - 1].number,\n            runs: 0,\n            hits: 0,\n            balls: 0,\n            strikes: 0,\n            outs: 0,\n            firstRunnerId: 0,\n            secondRunnerId: 0,\n            thirdRunnerId: 0\n          });\n          console.log(\"NEW INNING\");\n          console.log(myInning);\n          fetch(\"/api/innings\", {\n            method: \"POST\",\n            body: JSON.stringify(myInning),\n            headers: new Headers({\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            })\n          })\n            .then(response => {\n              if (response.ok) {\n                return response.json();\n              }\n              throw new Error(response.statusText);\n            })\n            .then((returnedInning) => {\n              setCurrInn(returnedInning);\n              if (whoHitting == \"Away\") {\n                setAwayOrder(loc);\n              }\n              else {\n                setHomeOrder(loc);\n              }\n              setHittingId(\"Home\");\n            }).catch(err => {\n              console.error(err);\n            });\n        }\n      });\n\n\n\n\n\n\n  }\n\n  const handleEndInning = (changedInning, atWhere) => {\n    console.log(\"Here\");\n    fetch(`/api/innings/${changedInning.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(changedInning),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        console.log(response);\n        throw new Error(response.statusText);\n\n      })\n      //Add the newly created order to local orders and update order state\n      .then((finished) => {\n        console.log(\"Flip\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n      startNewInning(atWhere);\n  };\n\n  if (myGame == null || currInn == null) {\n    return (\n      <div>Loading...</div>\n    );\n  }\n\n  if (whoHitting == \"Away\") {\n    console.log(\"INNING BEING PASSED\");\n    console.log(currInn);\n    return (\n      <div>\n        <div>\n          <GameTitleAndBox game={myGame}></GameTitleAndBox>\n        </div>\n        <div className={classes.LeanLeft}>\n          <LineupHolder game={myGame} teamId={myGame.awayId}></LineupHolder>\n        </div>\n        <div className={classes.LeanRight}>\n          <InningReader currInning={currInn} hitOrder={awayOrder} endInn={handleEndInning}></InningReader>\n        </div>\n        <div className={classes.LeanLeft}>\n          <LineupHolder game={myGame} teamId={myGame.homeId}></LineupHolder>\n        </div>\n        <div className={classes.Instructions}>\n          Each pitch is taken into the database as an individual play. When entering a play, say the following:\n          \"Pitch (pitch type) (pitch speed) (pitch location) hit (result) end\"\n          Pitch Types: Any! (Fastball, Changeup, Curveball, etc.)\n          Pitch Speeds: Any!\n          Pitch Locations: 1- up and in, 2 up and middle, 3 up and out, 4 middle and in, 5 middle middle, 6 middle and out, 7 low and in, 8 low and middle, 9 low and out.\n          Results: Either a hit, Fly Out, Ground Out, Ball/Strike Looking/Swinging, Strikeout, or Foul.\n        </div>\n      </div>\n    );\n  }\n  console.log(\"INNING BEING PASSED\");\n  console.log(currInn);\n  return (\n    <div>\n      <div>\n        <GameTitleAndBox game={myGame}></GameTitleAndBox>\n      </div>\n      <div className={classes.LeanLeft}>\n        <LineupHolder game={myGame} teamId={myGame.awayId}></LineupHolder>\n      </div>\n      <div className={classes.LeanRight}>\n        <InningReader currInning={currInn} hitOrder={homeOrder} endInn={handleEndInning}></InningReader>\n      </div>\n      <div className={classes.LeanLeft}>\n        <LineupHolder game={myGame} teamId={myGame.homeId}></LineupHolder>\n      </div>\n      <div className={classes.Instructions}>\n        Each pitch is taken into the database as an individual play. When entering a play, say the following:\n        \"Pitch (pitch type) (pitch speed) (pitch location) hit (result) end\"\n        Pitch Types: Any! (Fastball, Changeup, Curveball, etc.)\n        Pitch Speeds: Any!\n        Pitch Locations: 1- up and in, 2 up and middle, 3 up and out, 4 middle and in, 5 middle middle, 6 middle and out, 7 low and in, 8 low and middle, 9 low and out.\n        Results: Either a hit, Fly Out, Ground Out, Ball/Strike Looking/Swinging, Strikeout, or Foul.\n      </div>\n    </div>\n  );\n\n\n\n}\n\nexport default GameDisplay;\n"]},"metadata":{},"sourceType":"module"}