{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nconst Header = styled.h1`\n  background-color: blue;\n  text-align: center;\n  padding: 1rem;\n  color: white;\n`;\nconst ButtonDisplay = styled.div`\n  background-color: red;\n  padding: 0.5rem 0;\n  margin-bottom: 0.5rem;\n`;\n\nconst App = () => {\n  const [currUser, setUser] = React.useState(null);\n  const [access, setAccess] = React.useState(null);\n  const [personNew, setStat] = React.useState(0);\n  const [signinError, setError] = React.useState(\"\");\n  const [mode, setMode] = React.useState(\"Home\");\n  useEffect(() => {\n    const fetchUser = () => {\n      fetch(\"/api/users\").then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedUsers => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const checkedSignedIn = fetchedUsers.filter(user => user.signedIn == 1);\n\n        if (checkedSignedIn.length != 0) {\n          setUser(checkedSignedIn[0]);\n        }\n      }).catch(err => console.error(err)); // eslint-disable-line no-console\n    };\n\n    fetchUser();\n  }, []);\n\n  const handleSignInReturn = (username, password) => {\n    fetch(\"/api/users\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedUsers => {\n      // Create a copy of the collections, replacing the current article if this is an edit\n      const checkedSignedIn = fetchedUsers.filter(user => user.username == username && user.password == password);\n\n      if (checkedSignedIn.length != 0) {\n        setUser(checkedSignedIn[0]);\n        setStat(0);\n      } else {\n        setStat(1);\n      }\n    }).catch(err => console.error(err)); // eslint-disable-line no-console\n  };\n\n  const handleSignOutReturn = username => {};\n\n  const handleAccountCreation = personCredentials => {\n    fetch(\"/api/users\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedUsers => {\n      // Create a copy of the collections, replacing the current article if this is an edit\n      const checkedSignedIn = fetchedUsers.filter(user => user.username == personCredentials.username);\n\n      if (checkedSignedIn.length != 0) {\n        setStat(2);\n      } else {\n        fetch(\"/api/users\", {\n          method: \"POST\",\n          body: JSON.stringify(personCredentials),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }) //Add the newly created order to local orders and update order state\n        .then(receivedPerson => {\n          setUser(receivedPerson);\n        }).catch(err => {\n          console.error(err);\n        });\n      }\n    }).catch(err => console.error(err)); // eslint-disable-line no-console\n  };\n\n  if (currUser != null) {\n    fetch(\"/api/teamaccess\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedAccesses => {\n      // Create a copy of the collections, replacing the current article if this is an edit\n      const checkedAcc = fetchedAccesses.filter(access => access.userId == currUser.id);\n      setAccess(checkedAcc);\n    }).catch(err => console.error(err)); // eslint-disable-line no-console\n  }\n\n  const teamDisplay = access.map(individual => /*#__PURE__*/React.createElement(TeamAccessHolder, {\n    teamaccess: individual,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 50\n    }\n  }));\n\n  if (currUser == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, \"Voice-Activated Baseball Scoring\"), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LoginScreen, {\n      signIn: handleSignInReturn,\n      createAccount: handleAccountCreation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"Voice-Activated Baseball Scoring\"), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, teamDisplay)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/App.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","Header","h1","ButtonDisplay","div","App","currUser","setUser","access","setAccess","personNew","setStat","signinError","setError","mode","setMode","fetchUser","fetch","then","response","ok","json","Error","statusText","fetchedUsers","checkedSignedIn","filter","user","signedIn","length","catch","err","console","error","handleSignInReturn","username","password","handleSignOutReturn","handleAccountCreation","personCredentials","method","body","JSON","stringify","headers","Headers","Accept","receivedPerson","fetchedAccesses","checkedAcc","userId","id","teamDisplay","map","individual"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\n\nconst Header = styled.h1`\n  background-color: blue;\n  text-align: center;\n  padding: 1rem;\n  color: white;\n`;\nconst ButtonDisplay = styled.div`\n  background-color: red;\n  padding: 0.5rem 0;\n  margin-bottom: 0.5rem;\n`;\n\nconst App = () => {\n  const [currUser, setUser] = React.useState(null);\n  const [access, setAccess] = React.useState(null);\n  const [personNew, setStat] = React.useState(0);\n  const [signinError, setError] = React.useState(\"\");\n\n  const [mode, setMode] = React.useState(\"Home\");\n\n  useEffect(() => {\n      const fetchUser = () => {\n        fetch(\"/api/users\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedUsers) => {\n            // Create a copy of the collections, replacing the current article if this is an edit\n            const checkedSignedIn = fetchedUsers.filter(user => user.signedIn == 1);\n            if (checkedSignedIn.length != 0) {\n              setUser(checkedSignedIn[0]);\n            }\n          })\n          .catch((err) => console.error(err)); // eslint-disable-line no-console\n      };\n\n      fetchUser();\n\n    }, []);\n\n  const handleSignInReturn = (username, password) => {\n    fetch(\"/api/users\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then((fetchedUsers) => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const checkedSignedIn = fetchedUsers.filter(user => user.username == username && user.password == password);\n        if (checkedSignedIn.length != 0) {\n          setUser(checkedSignedIn[0]);\n          setStat(0);\n        }\n        else {\n          setStat(1)\n        }\n      })\n      .catch((err) => console.error(err)); // eslint-disable-line no-console\n  };\n  const handleSignOutReturn = (username) => {\n\n  }\n\n  const handleAccountCreation = (personCredentials) =>\n    {\n      fetch(\"/api/users\")\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then((fetchedUsers) => {\n          // Create a copy of the collections, replacing the current article if this is an edit\n          const checkedSignedIn = fetchedUsers.filter(user => user.username == personCredentials.username);\n          if (checkedSignedIn.length != 0) {\n            setStat(2);\n          }\n          else {\n            fetch(\"/api/users\", {\n              method: \"POST\",\n              body: JSON.stringify(personCredentials),\n              headers: new Headers({\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              })\n            })\n              .then(response => {\n                if (response.ok) {\n                  return response.json();\n                }\n                throw new Error(response.statusText);\n              })\n              //Add the newly created order to local orders and update order state\n              .then(receivedPerson => {\n                setUser(receivedPerson);\n              })\n              .catch(err => {\n                console.error(err);\n              });\n          }\n        })\n        .catch((err) => console.error(err)); // eslint-disable-line no-console\n    };\n\n\n\n  if (currUser != null) {\n    fetch(\"/api/teamaccess\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then((fetchedAccesses) => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const checkedAcc = fetchedAccesses.filter(access => access.userId == currUser.id);\n        setAccess(checkedAcc)\n      })\n      .catch((err) => console.error(err)); // eslint-disable-line no-console\n  }\n\n  const teamDisplay = access.map((individual) => <TeamAccessHolder teamaccess={individual}></TeamAccessHolder>);\n\n  if (currUser == null) {\n    return (\n      <div>\n        <Header>Voice-Activated Baseball Scoring</Header>\n        <Container>\n          <LoginScreen signIn={handleSignInReturn} createAccount={handleAccountCreation}></LoginScreen>\n        </Container>\n      </div>\n    );\n  }\n\n\n  return (\n    <div>\n      <Header>Voice-Activated Baseball Scoring</Header>\n      <Container>\n        <ul>{teamDisplay}</ul>\n      </Container>\n    </div>\n  );\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}