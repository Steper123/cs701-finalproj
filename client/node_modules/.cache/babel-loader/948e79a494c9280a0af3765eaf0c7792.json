{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/TeamPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nimport ButtonArea from \"./ButtonArea\";\nimport AddDeletePerson from \"./AddDeletePerson\";\nimport EventHolder from \"./EventHolder\";\nimport StatsSection from \"./StatsSection\";\nimport classes from \"./TeamPage.module.css\";\n\nconst TeamPage = ({\n  state,\n  teamID,\n  access,\n  returnHome\n}) => {\n  const [teamMode, setTeamMode] = React.useState(\"Home\"); //SET USE EFFECT TO GET PRIMARY TEAM AND SET TEAM MODE;\n\n  useEffect(() => {\n    const fetchTeam = () => {\n      fetch(\"/api/teams\").then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedTeams => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const myTeam = fetchedTeams.filter(team => team.id == teamID);\n        setState(myState);\n        setMode(myState.appMode);\n        return myState;\n      });\n    };\n\n    const fetchState = () => {\n      const myUser = fetch(\"/api/states\").then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedState => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const myState = fetchedState[0];\n        setState(myState);\n        setMode(myState.appMode);\n        return myState;\n      }).then(data => {\n        if (data.currUserId == 0) {\n          setUser(null);\n          setAccess(null);\n          setTeam(0);\n          setDesired(null);\n        } else {\n          const myUser = fetch(`/api/users`).then(response => {\n            if (response.ok) {\n              return response.json();\n            }\n\n            throw new Error(response.statusText);\n          }).then(fetchedUsers => {\n            const filteredUser = fetchedUsers.filter(point => point.id == data.currUserId);\n            setUser(filteredUser[0]); // Create a copy of the collections, replacing the current article if this is an edit\n          }).catch(err => console.error(err)); // eslint-disable-line no-console\n\n          myUser.then(person => {\n            fetch(`/api/teamaccess`).then(response => {\n              if (response.ok) {\n                return response.json();\n              }\n\n              throw new Error(response.statusText);\n            }).then(fetchedAccesses => {\n              console.log(\"OMGGGGG\");\n              const filteredAccesses = fetchedAccesses.filter(access => access.userId == data.currUserId);\n              console.log(filteredAccesses); //STARTING HERE FINDING A WAY TO SAVE ACCESS POINTS THAT ARE SELECTED\n\n              setAccess(filteredAccesses);\n\n              if (data.selectedAccess != 0) {\n                const grabAccess = filteredAccesses.filter(theacc => theacc.id == data.selectedAccess);\n                setDesired(grabAccess[0]);\n                setTeam(grabAccess[0].teamId);\n              } // Create a copy of the collections, replacing the current article if this is an edit\n\n            }).catch(err => console.error(err)); // eslint-disable-line no-console\n          });\n        }\n      });\n    };\n    /* const fetchUser = () => {\n      fetch(\"/api/users\")\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then((fetchedUsers) => {\n          // Create a copy of the collections, replacing the current article if this is an edit\n          const checkedSignedIn = fetchedUsers.filter(user => user.signedIn == 1);\n          if (checkedSignedIn.length != 0) {\n            setUser(checkedSignedIn[0]);\n            const myID = checkedSignedIn[0].id;\n            console.log(\"ID HERE\");\n            console.log(myID);\n            return myID;\n          }\n        }).then((thatID) => {\n          if (thatID != null) {\n            fetch(`/api/teamaccess`)\n              .then((response) => {\n                if (response.ok) {\n                  return response.json();\n                }\n                throw new Error(response.statusText);\n              })\n              .then((fetchedAccesses) => {\n                   const filteredAccess = fetchedAccesses.filter(point => point.userId == thatID);\n                 // Create a copy of the collections, replacing the current article if this is an edit\n                  setAccess(filteredAccess);\n                })\n              .catch((err) => console.error(err)); // eslint-disable-line no-console\n          }\n        })\n        .catch((err) => console.error(err)); // eslint-disable-line no-console\n    };\n    console.log(\"WE OUT HERE\"); */\n\n\n    fetchState(); //add back CurrUser\n  }, [state]);\n  console.log(team.name.toLowerCase());\n  const teamLogo = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(`../assets/images/${team.name.toLowerCase()}.png`),\n    alt: \"MyLogo\",\n    class: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }));\n\n  const typeChecker = num => {\n    if (num == 3) {\n      return \"Fan\";\n    } else if (num == 2) {\n      return \"Scorer\";\n    } else if (num == 1) {\n      return \"Admin/Coach\";\n    }\n  };\n\n  if (teamMode == \"Home\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.AccessLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, \"Access level: \", typeChecker(access.type)), /*#__PURE__*/React.createElement(ButtonArea, {\n      access: access,\n      team: team,\n      back: setTeamMode,\n      returnHome: returnHome,\n      setTeamState: setTeamMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }), teamLogo);\n  } else if (teamMode == \"Game\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(EventHolder, {\n      team: team,\n      back: setTeamMode,\n      userId: access.userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }));\n  } else if (teamMode == \"Stat\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StatsSection, {\n      team: team,\n      back: () => setTeamMode(\"Home\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AddDeletePerson, {\n      team: team,\n      type: teamMode,\n      back: () => setTeamMode(\"Home\"),\n      returnHome: returnHome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default TeamPage;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/TeamPage.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","ButtonArea","AddDeletePerson","EventHolder","StatsSection","classes","TeamPage","state","teamID","access","returnHome","teamMode","setTeamMode","fetchTeam","fetch","then","response","ok","json","Error","statusText","fetchedTeams","myTeam","filter","team","id","setState","myState","setMode","appMode","fetchState","myUser","fetchedState","data","currUserId","setUser","setAccess","setTeam","setDesired","fetchedUsers","filteredUser","point","catch","err","console","error","person","fetchedAccesses","log","filteredAccesses","userId","selectedAccess","grabAccess","theacc","teamId","name","toLowerCase","teamLogo","require","typeChecker","num","AccessLevel","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nimport ButtonArea from \"./ButtonArea\";\nimport AddDeletePerson from \"./AddDeletePerson\";\nimport EventHolder from \"./EventHolder\";\nimport StatsSection from \"./StatsSection\";\nimport classes from \"./TeamPage.module.css\";\n\n\n\nconst TeamPage = ({ state, teamID, access, returnHome }) => {\n  const [teamMode, setTeamMode] = React.useState(\"Home\");\n  //SET USE EFFECT TO GET PRIMARY TEAM AND SET TEAM MODE;\n  useEffect(() => {\n    const fetchTeam = () => {\n      fetch(\"/api/teams\")\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        }).then((fetchedTeams) => {\n          // Create a copy of the collections, replacing the current article if this is an edit\n          const myTeam = fetchedTeams.filter(team => team.id == teamID);\n          setState(myState);\n          setMode(myState.appMode);\n          return myState;\n        })\n    }\n      const fetchState = () => {\n        const myUser = fetch(\"/api/states\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          }).then((fetchedState) => {\n            // Create a copy of the collections, replacing the current article if this is an edit\n            const myState = fetchedState[0];\n            setState(myState);\n            setMode(myState.appMode);\n            return myState;\n          })\n          .then((data) => {\n            if (data.currUserId == 0) {\n              setUser(null);\n              setAccess(null);\n              setTeam(0);\n              setDesired(null);\n            }\n            else {\n              const myUser = fetch(`/api/users`)\n                .then((response) => {\n                  if (response.ok) {\n                    return response.json();\n                  }\n                  throw new Error(response.statusText);\n                })\n                .then((fetchedUsers) => {\n                    const filteredUser = fetchedUsers.filter(point => point.id == data.currUserId);\n                    setUser(filteredUser[0]);\n                  // Create a copy of the collections, replacing the current article if this is an edit\n                  })\n                .catch((err) => console.error(err)); // eslint-disable-line no-console\n\n                myUser.then((person) => {\n                  fetch(`/api/teamaccess`)\n                    .then((response) => {\n                      if (response.ok) {\n                        return response.json();\n                      }\n                      throw new Error(response.statusText);\n                    })\n                    .then((fetchedAccesses) => {\n                        console.log(\"OMGGGGG\");\n                        const filteredAccesses = fetchedAccesses.filter(access => access.userId == data.currUserId);\n                        console.log(filteredAccesses)\n                        //STARTING HERE FINDING A WAY TO SAVE ACCESS POINTS THAT ARE SELECTED\n                        setAccess(filteredAccesses);\n                        if (data.selectedAccess != 0) {\n                          const grabAccess = filteredAccesses.filter(theacc => theacc.id == data.selectedAccess);\n                          setDesired(grabAccess[0]);\n                          setTeam(grabAccess[0].teamId);\n                        }\n                      // Create a copy of the collections, replacing the current article if this is an edit\n                      })\n                    .catch((err) => console.error(err)); // eslint-disable-line no-console\n\n\n\n                })\n            }\n\n          })\n      }\n\n      /* const fetchUser = () => {\n        fetch(\"/api/users\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedUsers) => {\n            // Create a copy of the collections, replacing the current article if this is an edit\n            const checkedSignedIn = fetchedUsers.filter(user => user.signedIn == 1);\n            if (checkedSignedIn.length != 0) {\n              setUser(checkedSignedIn[0]);\n              const myID = checkedSignedIn[0].id;\n              console.log(\"ID HERE\");\n              console.log(myID);\n              return myID;\n            }\n          }).then((thatID) => {\n            if (thatID != null) {\n              fetch(`/api/teamaccess`)\n                .then((response) => {\n                  if (response.ok) {\n                    return response.json();\n                  }\n                  throw new Error(response.statusText);\n                })\n                .then((fetchedAccesses) => {\n\n                    const filteredAccess = fetchedAccesses.filter(point => point.userId == thatID);\n\n                  // Create a copy of the collections, replacing the current article if this is an edit\n                    setAccess(filteredAccess);\n                  })\n                .catch((err) => console.error(err)); // eslint-disable-line no-console\n            }\n          })\n          .catch((err) => console.error(err)); // eslint-disable-line no-console\n      };\n      console.log(\"WE OUT HERE\"); */\n      fetchState();\n//add back CurrUser\n}, [state]);\n\n  console.log(team.name.toLowerCase());\n\n  const teamLogo = (\n    <div>\n      <img src={require(`../assets/images/${team.name.toLowerCase()}.png`)} alt=\"MyLogo\" class=\"center\" />\n    </div>\n  );\n\n  const typeChecker = (num) => {\n    if (num == 3) {\n      return \"Fan\";\n    }\n    else if (num == 2) {\n      return \"Scorer\";\n    }\n    else if (num == 1) {\n      return \"Admin/Coach\"\n    }\n  }\n\n  if (teamMode == \"Home\") {\n    return (\n      <div>\n        <strong className={classes.AccessLevel}>Access level: {typeChecker(access.type)}</strong>\n        <ButtonArea access={access} team={team} back={setTeamMode} returnHome={returnHome} setTeamState={setTeamMode}></ButtonArea>\n        {teamLogo}\n      </div>\n    );\n  }\n  else if (teamMode == \"Game\") {\n    return (\n      <div>\n        <EventHolder team={team} back={setTeamMode} userId={access.userId}></EventHolder>\n      </div>\n    );\n  }\n  else if (teamMode == \"Stat\") {\n    return (\n      <div>\n        <StatsSection team={team} back={() => setTeamMode(\"Home\")}></StatsSection>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div>\n        <AddDeletePerson team={team} type={teamMode} back={() => setTeamMode(\"Home\")} returnHome={returnHome}></AddDeletePerson>\n      </div>\n    );\n  }\n\n\n\n\n};\n\nexport default TeamPage;\n"]},"metadata":{},"sourceType":"module"}