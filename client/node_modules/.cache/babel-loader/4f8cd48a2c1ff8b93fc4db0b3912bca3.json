{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/InningReader.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nconst RunAndHitHold = ({\n  playerId,\n  pos\n}) => {\n  const [player, setPlayer] = React.useState(null);\n  console.log(playerId);\n  useEffect(() => {\n    const grabPerson = () => fetch(`api/players`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedPlayers => {\n      const personInList = fetchedPlayers.filter(player => player.id == playerId);\n      setPlayer(personInList[0]);\n    });\n\n    grabPerson();\n  }, [playerId, pos]);\n\n  if (player != null) {\n    if (pos == null) {\n      return /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, player.name));\n    }\n\n    return /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, player.name), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, pos));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Loading...\");\n};\n\nconst InningReader = ({\n  currInning,\n  hitOrder,\n  endInn\n}) => {\n  const [balls, setBalls] = React.useState(currInning ? currInning.balls : 0);\n  const [strikes, setStrikes] = React.useState(currInning ? currInning.strikes : 0);\n  const [outs, setOuts] = React.useState(currInning ? currInning.outs : 0);\n  const [hits, setHits] = React.useState(currInning ? currInning.hits : 0);\n  const [runs, setRuns] = React.useState(currInning ? currInning.runs : 0);\n  const [frID, setFirstRunner] = React.useState(currInning ? currInning.firstRunnerId : 0);\n  const [srID, setSecondRunner] = React.useState(currInning ? currInning.secondRunnerId : 0);\n  const [trID, setThirdRunner] = React.useState(currInning ? currInning.thirdRunnerId : 0);\n  const [whatHitter, setNumber] = React.useState(hitOrder);\n  const [hitterInfo, setHitterInfo] = React.useState([]);\n  const [pitcher, setPitcher] = React.useState(0); //Recording Hooks\n\n  const [buttonText, setButtonText] = React.useState(\"Not Listening...\");\n  const [buttonColor, setButtonColor] = React.useState(\"#eb020e\");\n  const [lastPlay, setLastPlay] = React.useState(\"Game Started\");\n  const [speakingError, setMessage] = React.useState(\"\");\n  console.log(currInning);\n\n  function noOneOn(number) {\n    if (number == 0) {\n      return false;\n    }\n\n    console.log(\"Why???\");\n    return true;\n  }\n\n  function grabHitter(lineupObj, number) {\n    if (number == 0) {\n      return [lineupObj.firstId, lineupObj.firstPos];\n    } else if (number == 1) {\n      return [lineupObj.secondId, lineupObj.secondPos];\n    } else if (number == 2) {\n      return [lineupObj.thirdId, lineupObj.thirdPos];\n    } else if (number == 3) {\n      return [lineupObj.fourthId, lineupObj.fourthPos];\n    } else if (number == 4) {\n      return [lineupObj.fifthId, lineupObj.fifthPos];\n    } else if (number == 5) {\n      return [lineupObj.sixthId, lineupObj.sixthPos];\n    } else if (number == 6) {\n      return [lineupObj.seventhId, lineupObj.seventhPos];\n    } else if (number == 7) {\n      return [lineupObj.eighthId, lineupObj.eighthPos];\n    } else if (number == 8) {\n      return [lineupObj.ninthId, lineupObj.ninthPos];\n    } else {\n      setNumber(0);\n      return [lineupObj.firstId, lineupObj.firstPos];\n    }\n  }\n\n  function changetoInt(string) {\n    if (string == \"one\") {\n      return 1;\n    } else if (string == \"two\") {\n      return 2;\n    } else if (string == \"three\") {\n      return 3;\n    } else if (string == \"four\") {\n      return 4;\n    } else if (string == \"five\") {\n      return 5;\n    } else if (string == \"six\") {\n      return 6;\n    } else if (string == \"seven\") {\n      return 7;\n    } else if (string == \"eight\") {\n      return 8;\n    } else if (string == \"nine\") {\n      return 9;\n    } else {\n      return parseInt(string);\n    }\n  }\n\n  function MoveUp(bases, hitter, first, second, third) {\n    const finalBases = [];\n\n    if (bases == 1) {\n      finalBases.push(hitter);\n\n      if (first != 0) {\n        finalBases.push(first);\n      } else {\n        finalBases.push(0);\n      }\n\n      if (second != 0) {\n        finalBases.push(second);\n      } else {\n        finalBases.push(0);\n      }\n\n      if (third != 0) {\n        finalBases.push(third);\n      } else {\n        finalBases.push(0);\n      }\n    } else if (bases == 2) {\n      var runs = 0;\n      finalBases.push(0);\n      finalBases.push(hitter);\n\n      if (first != 0) {\n        finalBases.push(first);\n      } else {\n        finalBases.push(0);\n      }\n\n      if (second != 0) {\n        runs = runs + 1;\n      }\n\n      if (third != 0) {\n        runs = runs + 1;\n      }\n\n      finalBases.push(runs);\n    } else if (bases == 3) {\n      var runs = 0;\n      finalBases.push(0);\n      finalBases.push(0);\n      finalBases.push(hitter);\n\n      if (first != 0) {\n        runs = runs + 1;\n      }\n\n      if (second != 0) {\n        runs = runs + 1;\n      }\n\n      if (third != 0) {\n        runs = runs + 1;\n      }\n\n      finalBases.push(runs);\n    } else {\n      finalBases.push(0);\n      finalBases.push(0);\n      finalBases.push(0);\n      finalBases.push(4);\n    }\n\n    return finalBases;\n  }\n\n  function Deviate(string) {\n    if (string == \"hitch\") {\n      return \"pitch\";\n    } else if (string == \"and\") {\n      return \"end\";\n    } else if (string == \"which\") {\n      return \"pitch\";\n    } else {\n      return string;\n    }\n  }\n\n  function Cleaner(string) {\n    if (string.includes(\":\")) {\n      return string.replace(\":\", \" \");\n    } else if (string.includes(\"/\")) {\n      return string.replace(\"/\", \" \");\n    } else if (string.includes(\"-\")) {\n      return string.replace(\"-\", \" \");\n    } else {\n      return string;\n    }\n  }\n\n  function resetStats() {\n    setOuts(0);\n    setBalls(0);\n    setStrikes(0);\n    setRuns(0);\n    setHits(0);\n    setFirstRunner(0);\n    setSecondRunner(0);\n    setThirdRunner(0);\n  }\n\n  useEffect(() => {\n    console.log(currInning);\n\n    const firstStep = () => {\n      if (outs == 3) {\n        console.log(\"BITCHHHHH\");\n        const returningInning = {\n          id: currInning.id,\n          gameId: currInning.gameId,\n          pitchingId: currInning.pitchingId,\n          hittingId: currInning.hittingId,\n          number: currInning.number,\n          runs: runs,\n          hits: hits,\n          balls: 0,\n          strikes: 0,\n          outs: 3,\n          firstRunnerId: 0,\n          secondRunnerId: 0,\n          thirdRunnerId: 0\n        };\n        endInn(returningInning, whatHitter);\n        resetStats();\n      } else {\n        console.log(\"No coming\");\n        fetch(`api/lineups/${currInning.gameId}`).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(fetchedLineups => {\n          const hittersLineup = fetchedLineups.filter(lineup => currInning.hittingId == lineup.teamId);\n          const pitchersLineup = fetchedLineups.filter(lineup => currInning.pitchingId == lineup.teamId);\n          console.log(hittersLineup);\n          console.log(pitchersLineup);\n          setPitcher(pitchersLineup[0].pitcher);\n          const plaposHold = grabHitter(hittersLineup[0], hitOrder);\n          setHitterInfo(plaposHold);\n        });\n      }\n    };\n\n    firstStep();\n  }, [currInning, whatHitter]);\n\n  const addNewPlay = newPlay => {\n    console.log(\"we here\");\n    const theFeed = fetch(\"/api/plays\", {\n      method: \"POST\",\n      body: JSON.stringify(newPlay),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }) //Add the newly created order to local orders and update order state\n    .then(receivedPlay => {\n      console.log(receivedPlay);\n      setLastPlay(receivedPlay.hitterResult);\n      console.log(receivedPlay.hitterResult);\n      return receivedPlay.hitterResult;\n    }).catch(err => {\n      console.error(err);\n    });\n    theFeed.then(data => {\n      if (typeof data == 'undefined') {\n        setMessage(\"Please repeat message. Play did not process\");\n        console.log(\"Exception reached\");\n      } else {\n        console.log(data);\n        const collectionPlay = data.split(\" \");\n\n        if (!collectionPlay.includes(\"ball\") && !collectionPlay.includes(\"strike\")) {\n          if (!collectionPlay.includes(\"walk\")) {\n            if (collectionPlay.includes(\"single\")) {\n              const runnerResults = MoveUp(1, hitterInfo[0], frID, srID, trID);\n              setFirstRunner(runnerResults[0]);\n              setSecondRunner(runnerResults[1]);\n              setThirdRunner(runnerResults[2]);\n              setHits(hits + 1);\n            } else if (collectionPlay.includes(\"double\")) {\n              const runnerResults = MoveUp(2, hitterInfo[0], frID, srID, trID);\n              setFirstRunner(runnerResults[0]);\n              setSecondRunner(runnerResults[1]);\n              setThirdRunner(runnerResults[2]);\n              setHits(hits + 1);\n            } else if (collectionPlay.includes(\"triple\")) {\n              const runnerResults = MoveUp(3, hitterInfo[0], frID, srID, trID);\n              setFirstRunner(runnerResults[0]);\n              setSecondRunner(runnerResults[1]);\n              setThirdRunner(runnerResults[2]);\n              setHits(hits + 1);\n            } else if (collectionPlay.includes(\"homerun\")) {\n              const runnerResults = MoveUp(4, hitterInfo[0], frID, srID, trID);\n              setFirstRunner(runnerResults[0]);\n              setSecondRunner(runnerResults[1]);\n              setThirdRunner(runnerResults[2]);\n              setHits(hits + 1);\n            } else {\n              setOuts(outs + 1);\n            }\n          } else {\n            const runnerResults = MoveUp(1, hitterInfo[0], frID, srID, trID);\n            setFirstRunner(runnerResults[0]);\n            setSecondRunner(runnerResults[1]);\n            setThirdRunner(runnerResults[2]);\n          }\n\n          if (collectionPlay.includes(\"run\") || collectionPlay.includes(\"runs\")) {\n            if (collectionPlay.includes(\"one\")) {\n              setRuns(runs + 1);\n            } else if (collectionPlay.includes(\"two\")) {\n              setRuns(runs + 2);\n            } else if (collectionPlay.includes(\"three\")) {\n              setRuns(runs + 3);\n            } else {\n              setRuns(runs + 4);\n            }\n          }\n\n          setNumber(whatHitter + 1);\n        } else {\n          if (collectionPlay.includes(\"ball\")) {\n            setBalls(balls + 1);\n          } else {\n            setStrikes(strikes + 1);\n          }\n        }\n      }\n    });\n  }; //Speech Packaging\n\n\n  var indexSpeech = 0;\n  var SpeechRecognition = window.webkitSpeechRecognition;\n  var recognition = new SpeechRecognition();\n  recognition.continuous = true;\n\n  recognition.onstart = function () {\n    console.log(\"We are listening. Try speaking into the microphone.\");\n  };\n\n  recognition.onend = function () {\n    recognition.abort();\n  };\n\n  recognition.onerror = function () {\n    console.log(\"Error\");\n  };\n\n  recognition.onresult = function (event) {\n    var transcript = Cleaner(event.results[indexSpeech][0].transcript);\n    var confidence = parseFloat(event.results[indexSpeech][0].confidence);\n    const breakDown = transcript.split(\" \");\n    console.log(breakDown);\n    console.log(typeof breakDown[0]);\n    console.log(confidence > 0.65);\n    console.log(breakDown[0] == \"pitch\");\n    console.log(breakDown[breakDown.length - 1] == \"end\");\n    console.log(breakDown.includes(\"hit\"));\n\n    if (confidence > 0.6 && Deviate(breakDown[0].toLowerCase()) == \"pitch\" && Deviate(breakDown[breakDown.length - 1].toLowerCase()) == \"end\" && breakDown.includes(\"hit\")) {\n      console.log(\"In\");\n      const pitchType = breakDown[1];\n      const pitchSpeed = changetoInt(breakDown[2]);\n      const pitchLocation = changetoInt(breakDown[3]);\n      const hittingInfo = breakDown.slice(5);\n      let loopIndex = 0;\n      let hittingData = \"\";\n\n      while (Deviate(hittingInfo[loopIndex].toLowerCase()) != \"end\") {\n        console.log(\"LOOOP\");\n        console.log(hittingData);\n\n        if (loopIndex == 0) {\n          hittingData = hittingData + hittingInfo[loopIndex];\n        } else {\n          hittingData = hittingData + \" \" + hittingInfo[loopIndex];\n        }\n\n        loopIndex = loopIndex + 1;\n      }\n\n      const myPlay = {\n        inningId: currInning.id,\n        pitcherId: pitcher,\n        hitterId: hitterInfo[0],\n        pitchType: pitchType,\n        pitchSpeed: pitchSpeed,\n        pitchLocation: pitchLocation,\n        hitterResult: hittingData\n      };\n      console.log(\"Made it\");\n      addNewPlay(myPlay);\n    } else {//Fails\n    }\n\n    indexSpeech += 1;\n    console.log(transcript);\n    console.log(confidence);\n  };\n\n  const listeningButton = /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: buttonColor\n    },\n    onClick: () => {\n      if (buttonText == \"Not Listening...\") {\n        recognition.start();\n        setButtonText(\"Listening!\");\n        setButtonColor(\"#5ef266\");\n      } else {\n        recognition.abort();\n        setButtonText(\"Not Listening...\");\n        setButtonColor(\"#eb020e\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 5\n    }\n  }, buttonText); //End of Speech Packaging\n\n  if (currInning == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  console.log(\"Examine\");\n  console.log(currInning);\n  console.log(whatHitter);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }\n  }, \"Balls:\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }\n  }, balls), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 13\n    }\n  }, \"Strikes:\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 13\n    }\n  }, strikes), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 13\n    }\n  }, \"Outs:\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 13\n    }\n  }, outs), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }\n  }, \"Pitcher\"), /*#__PURE__*/React.createElement(RunAndHitHold, {\n    playerId: pitcher,\n    pos: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 13\n    }\n  }, \"Hitter\"), /*#__PURE__*/React.createElement(RunAndHitHold, {\n    playerId: hitterInfo[0],\n    pos: hitterInfo[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 13\n    }\n  }), noOneOn(frID) && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(RunAndHitHold, {\n    playerId: frID,\n    pos: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 37\n    }\n  })), \";\", listeningButton, \"Last Play: \", lastPlay);\n};\n\nexport default InningReader;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/InningReader.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","RunAndHitHold","playerId","pos","player","setPlayer","console","log","grabPerson","fetch","then","response","ok","json","Error","statusText","fetchedPlayers","personInList","filter","id","name","InningReader","currInning","hitOrder","endInn","balls","setBalls","strikes","setStrikes","outs","setOuts","hits","setHits","runs","setRuns","frID","setFirstRunner","firstRunnerId","srID","setSecondRunner","secondRunnerId","trID","setThirdRunner","thirdRunnerId","whatHitter","setNumber","hitterInfo","setHitterInfo","pitcher","setPitcher","buttonText","setButtonText","buttonColor","setButtonColor","lastPlay","setLastPlay","speakingError","setMessage","noOneOn","number","grabHitter","lineupObj","firstId","firstPos","secondId","secondPos","thirdId","thirdPos","fourthId","fourthPos","fifthId","fifthPos","sixthId","sixthPos","seventhId","seventhPos","eighthId","eighthPos","ninthId","ninthPos","changetoInt","string","parseInt","MoveUp","bases","hitter","first","second","third","finalBases","push","Deviate","Cleaner","includes","replace","resetStats","firstStep","returningInning","gameId","pitchingId","hittingId","fetchedLineups","hittersLineup","lineup","teamId","pitchersLineup","plaposHold","addNewPlay","newPlay","theFeed","method","body","JSON","stringify","headers","Headers","Accept","receivedPlay","hitterResult","catch","err","error","data","collectionPlay","split","runnerResults","indexSpeech","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","onstart","onend","abort","onerror","onresult","event","transcript","results","confidence","parseFloat","breakDown","length","toLowerCase","pitchType","pitchSpeed","pitchLocation","hittingInfo","slice","loopIndex","hittingData","myPlay","inningId","pitcherId","hitterId","listeningButton","backgroundColor","start"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nconst RunAndHitHold = ({ playerId, pos }) => {\n  const [player, setPlayer] = React.useState(null);\n\n  console.log(playerId);\n\n  useEffect(() => {\n    const grabPerson = () =>\n    fetch(`api/players`)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then((fetchedPlayers) => {\n        const personInList = fetchedPlayers.filter(player => player.id == playerId);\n        setPlayer(personInList[0]);\n      })\n\n      grabPerson();\n\n    }, [playerId, pos]);\n  if (player != null) {\n    if (pos == null) {\n      return (\n        <Col>\n          <strong>{player.name}</strong>\n        </Col>\n      );\n    }\n    return (\n      <Col>\n        <strong>{player.name}</strong>\n        <small>{pos}</small>\n      </Col>\n\n    );\n  }\n  return (<div>Loading...</div>);\n\n}\n\nconst InningReader = ({ currInning, hitOrder, endInn }) => {\n  const [balls, setBalls] = React.useState(currInning ? currInning.balls : 0);\n  const [strikes, setStrikes] = React.useState(currInning ? currInning.strikes : 0);\n  const [outs, setOuts] = React.useState(currInning ? currInning.outs : 0);\n  const [hits, setHits] = React.useState(currInning ? currInning.hits : 0);\n  const [runs, setRuns] = React.useState(currInning ? currInning.runs : 0);\n  const [frID, setFirstRunner] = React.useState(currInning ? currInning.firstRunnerId : 0);\n  const [srID, setSecondRunner] = React.useState(currInning ? currInning.secondRunnerId : 0);\n  const [trID, setThirdRunner] = React.useState(currInning ? currInning.thirdRunnerId : 0);\n\n  const [whatHitter, setNumber] = React.useState(hitOrder);\n\n  const [hitterInfo, setHitterInfo] = React.useState([]);\n  const [pitcher, setPitcher] = React.useState(0);\n\n  //Recording Hooks\n  const [buttonText, setButtonText] = React.useState(\"Not Listening...\");\n  const [buttonColor, setButtonColor] = React.useState(\"#eb020e\");\n  const [lastPlay, setLastPlay] = React.useState(\"Game Started\");\n  const [speakingError, setMessage] = React.useState(\"\");\n\n  console.log(currInning);\n\n  function noOneOn(number) {\n    if (number == 0) {\n      return false;\n    }\n    console.log(\"Why???\");\n    return true;\n  }\n\n  function grabHitter(lineupObj, number) {\n    if (number == 0) {\n      return [lineupObj.firstId, lineupObj.firstPos];\n    }\n    else if (number == 1) {\n      return [lineupObj.secondId, lineupObj.secondPos];\n    }\n    else if (number == 2) {\n      return [lineupObj.thirdId, lineupObj.thirdPos];\n    }\n    else if (number == 3) {\n      return [lineupObj.fourthId, lineupObj.fourthPos];\n    }\n    else if (number == 4) {\n      return [lineupObj.fifthId, lineupObj.fifthPos];\n    }\n    else if (number == 5) {\n      return [lineupObj.sixthId, lineupObj.sixthPos];\n    }\n    else if (number == 6) {\n      return [lineupObj.seventhId, lineupObj.seventhPos];\n    }\n    else if (number == 7) {\n      return [lineupObj.eighthId, lineupObj.eighthPos];\n    }\n    else if (number == 8) {\n      return [lineupObj.ninthId, lineupObj.ninthPos];\n    }\n    else {\n      setNumber(0);\n      return [lineupObj.firstId, lineupObj.firstPos];\n    }\n\n  }\n\n  function changetoInt(string) {\n    if (string == \"one\") {\n      return 1;\n    }\n    else if (string == \"two\") {\n      return 2;\n    }\n    else if (string == \"three\") {\n      return 3;\n    }\n    else if (string == \"four\") {\n      return 4;\n    }\n    else if (string == \"five\") {\n      return 5;\n    }\n    else if (string == \"six\") {\n      return 6;\n    }\n    else if (string == \"seven\") {\n      return 7;\n    }\n    else if (string == \"eight\") {\n      return 8;\n    }\n    else if (string == \"nine\") {\n      return 9;\n    }\n    else {\n      return parseInt(string);\n    }\n\n  }\n\n  function MoveUp(bases, hitter, first, second, third) {\n    const finalBases = [];\n    if (bases == 1) {\n      finalBases.push(hitter);\n      if (first != 0) {\n        finalBases.push(first);\n      }\n      else {\n        finalBases.push(0);\n      }\n      if (second != 0) {\n        finalBases.push(second);\n      }\n      else {\n        finalBases.push(0);\n      }\n      if (third != 0) {\n        finalBases.push(third);\n      }\n      else {\n        finalBases.push(0);\n      }\n    }\n\n    else if (bases == 2) {\n      var runs = 0;\n      finalBases.push(0);\n      finalBases.push(hitter);\n      if (first != 0) {\n        finalBases.push(first);\n      }\n      else {\n        finalBases.push(0);\n      }\n      if (second != 0) {\n        runs = runs + 1;\n      }\n      if (third != 0) {\n        runs = runs + 1;\n      }\n      finalBases.push(runs);\n    }\n\n    else if (bases == 3) {\n      var runs = 0;\n      finalBases.push(0);\n      finalBases.push(0);\n      finalBases.push(hitter);\n      if (first != 0) {\n        runs = runs + 1;\n      }\n      if (second != 0) {\n        runs = runs + 1;\n      }\n      if (third != 0) {\n        runs = runs + 1;\n      }\n      finalBases.push(runs);\n    }\n\n    else {\n      finalBases.push(0);\n      finalBases.push(0);\n      finalBases.push(0);\n      finalBases.push(4);\n    }\n\n    return finalBases;\n  }\n\n  function Deviate(string) {\n    if (string == \"hitch\") {\n      return \"pitch\";\n    }\n    else if (string == \"and\") {\n      return \"end\";\n    }\n    else if (string == \"which\") {\n      return \"pitch\";\n    }\n    else {\n      return string;\n    }\n  }\n\n  function Cleaner(string) {\n    if (string.includes(\":\")) {\n      return string.replace(\":\", \" \");\n    }\n    else if (string.includes(\"/\")) {\n      return string.replace(\"/\", \" \");\n    }\n    else if (string.includes(\"-\")) {\n      return string.replace(\"-\", \" \");\n    }\n    else {\n      return string;\n    }\n  }\n\n  function resetStats() {\n    setOuts(0);\n    setBalls(0);\n    setStrikes(0);\n    setRuns(0);\n    setHits(0);\n    setFirstRunner(0);\n    setSecondRunner(0);\n    setThirdRunner(0);\n  }\n\n  useEffect(() => {\n    console.log(currInning);\n    const firstStep = () => {\n      if (outs == 3) {\n        console.log(\"BITCHHHHH\");\n        const returningInning = ({\n          id: currInning.id,\n          gameId: currInning.gameId,\n          pitchingId: currInning.pitchingId,\n          hittingId: currInning.hittingId,\n          number: currInning.number,\n          runs: runs,\n          hits: hits,\n          balls: 0,\n          strikes: 0,\n          outs: 3,\n          firstRunnerId: 0,\n          secondRunnerId: 0,\n          thirdRunnerId: 0\n        });\n\n        endInn(returningInning, whatHitter);\n        resetStats();\n\n      }\n      else {\n        console.log(\"No coming\");\n        fetch(`api/lineups/${currInning.gameId}`)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedLineups) => {\n            const hittersLineup = fetchedLineups.filter(lineup => currInning.hittingId == lineup.teamId);\n            const pitchersLineup = fetchedLineups.filter(lineup => currInning.pitchingId == lineup.teamId);\n            console.log(hittersLineup);\n            console.log(pitchersLineup);\n            setPitcher(pitchersLineup[0].pitcher);\n            const plaposHold = grabHitter(hittersLineup[0], hitOrder);\n            setHitterInfo(plaposHold);\n          })\n      }\n    }\n\n\n      firstStep();\n\n    }, [currInning, whatHitter]);\n\n  const addNewPlay = (newPlay) => {\n    console.log(\"we here\");\n    const theFeed = fetch(\"/api/plays\", {\n      method: \"POST\",\n      body: JSON.stringify(newPlay),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      //Add the newly created order to local orders and update order state\n      .then(receivedPlay => {\n        console.log(receivedPlay);\n        setLastPlay(receivedPlay.hitterResult);\n        console.log(receivedPlay.hitterResult);\n        return receivedPlay.hitterResult;\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n      theFeed.then((data) => {\n        if (typeof data == 'undefined') {\n          setMessage(\"Please repeat message. Play did not process\");\n          console.log(\"Exception reached\");\n        }\n        else {\n          console.log(data);\n          const collectionPlay = data.split(\" \");\n          if (!collectionPlay.includes(\"ball\") && !collectionPlay.includes(\"strike\")) {\n            if (!collectionPlay.includes(\"walk\")) {\n              if (collectionPlay.includes(\"single\")) {\n                const runnerResults = MoveUp(1, hitterInfo[0], frID, srID, trID);\n                setFirstRunner(runnerResults[0]);\n                setSecondRunner(runnerResults[1]);\n                setThirdRunner(runnerResults[2]);\n                setHits(hits + 1);\n              }\n              else if (collectionPlay.includes(\"double\")) {\n                const runnerResults = MoveUp(2, hitterInfo[0], frID, srID, trID);\n                setFirstRunner(runnerResults[0]);\n                setSecondRunner(runnerResults[1]);\n                setThirdRunner(runnerResults[2]);\n                setHits(hits + 1);\n              }\n              else if (collectionPlay.includes(\"triple\")) {\n                const runnerResults = MoveUp(3, hitterInfo[0], frID, srID, trID);\n                setFirstRunner(runnerResults[0]);\n                setSecondRunner(runnerResults[1]);\n                setThirdRunner(runnerResults[2]);\n                setHits(hits + 1);\n              }\n              else if (collectionPlay.includes(\"homerun\")) {\n                const runnerResults = MoveUp(4, hitterInfo[0], frID, srID, trID);\n                setFirstRunner(runnerResults[0]);\n                setSecondRunner(runnerResults[1]);\n                setThirdRunner(runnerResults[2]);\n                setHits(hits + 1);\n              }\n              else {\n                setOuts(outs + 1);\n              }\n            }\n            else {\n              const runnerResults = MoveUp(1, hitterInfo[0], frID, srID, trID);\n              setFirstRunner(runnerResults[0]);\n              setSecondRunner(runnerResults[1]);\n              setThirdRunner(runnerResults[2]);\n            }\n\n            if (collectionPlay.includes(\"run\") || collectionPlay.includes(\"runs\")) {\n              if (collectionPlay.includes(\"one\")) {\n                setRuns(runs + 1);\n              }\n              else if (collectionPlay.includes(\"two\")) {\n                setRuns(runs + 2);\n              }\n              else if (collectionPlay.includes(\"three\")) {\n                setRuns(runs + 3);\n              }\n              else {\n                setRuns(runs + 4);\n              }\n            }\n\n            setNumber(whatHitter + 1);\n          }\n          else {\n            if (collectionPlay.includes(\"ball\")) {\n              setBalls(balls + 1);\n            }\n            else {\n              setStrikes(strikes + 1);\n            }\n          }\n        }\n\n\n\n      })\n\n  }\n\n  //Speech Packaging\n  var indexSpeech = 0;\n  var SpeechRecognition = window.webkitSpeechRecognition;\n  var recognition = new SpeechRecognition();\n  recognition.continuous = true;\n  recognition.onstart = function() {\n    console.log(\"We are listening. Try speaking into the microphone.\");\n  };\n  recognition.onend = function() {\n    recognition.abort();\n  }\n  recognition.onerror = function() {\n    console.log(\"Error\");\n  }\n\n  recognition.onresult = function(event) {\n    var transcript = Cleaner(event.results[indexSpeech][0].transcript);\n    var confidence = parseFloat(event.results[indexSpeech][0].confidence);\n    const breakDown = transcript.split(\" \");\n    console.log(breakDown);\n    console.log(typeof breakDown[0]);\n    console.log(confidence > 0.65);\n    console.log(breakDown[0] == \"pitch\");\n    console.log(breakDown[breakDown.length - 1] == \"end\");\n    console.log(breakDown.includes(\"hit\"));\n    if (confidence > 0.6 && Deviate(breakDown[0].toLowerCase()) == \"pitch\" && Deviate(breakDown[breakDown.length - 1].toLowerCase()) == \"end\" && breakDown.includes(\"hit\")) {\n      console.log(\"In\");\n      const pitchType = breakDown[1];\n      const pitchSpeed = changetoInt(breakDown[2]);\n      const pitchLocation = changetoInt(breakDown[3]);\n      const hittingInfo = breakDown.slice(5);\n      let loopIndex = 0;\n      let hittingData = \"\";\n      while (Deviate(hittingInfo[loopIndex].toLowerCase()) != \"end\") {\n        console.log(\"LOOOP\");\n        console.log(hittingData);\n        if (loopIndex == 0) {\n          hittingData = hittingData + hittingInfo[loopIndex];\n        }\n        else {\n          hittingData = hittingData + \" \" + hittingInfo[loopIndex]\n        }\n        loopIndex = loopIndex + 1;\n      }\n\n      const myPlay = ({\n        inningId: currInning.id,\n        pitcherId: pitcher,\n        hitterId: hitterInfo[0],\n        pitchType: pitchType,\n        pitchSpeed: pitchSpeed,\n        pitchLocation: pitchLocation,\n        hitterResult: hittingData\n\n      });\n      console.log(\"Made it\");\n      addNewPlay(myPlay);\n\n    }\n    else {\n      //Fails\n\n    }\n\n\n\n    indexSpeech += 1;\n    console.log(transcript);\n    console.log(confidence);\n};\n\n  const listeningButton = (\n    <Button\n      style = {{ backgroundColor: buttonColor }}\n      onClick={() => {\n      if (buttonText == \"Not Listening...\") {\n        recognition.start();\n        setButtonText(\"Listening!\");\n        setButtonColor(\"#5ef266\");\n      }\n      else {\n        recognition.abort();\n        setButtonText(\"Not Listening...\");\n        setButtonColor(\"#eb020e\");\n      }\n    }}>{buttonText}</Button>\n  );\n  //End of Speech Packaging\n\n  if (currInning == null) {\n    return(<div>Loading...</div>);\n  }\n\n  console.log(\"Examine\");\n  console.log(currInning);\n  console.log(whatHitter);\n  return (\n    <div>\n      <strong>Balls:</strong>\n      <small>{balls}</small>\n            <strong>Strikes:</strong>\n            <small>{strikes}</small>\n            <strong>Outs:</strong>\n            <small>{outs}</small>\n            <div>Pitcher</div>\n            <RunAndHitHold playerId={pitcher} pos={null}></RunAndHitHold>\n            <div>Hitter</div>\n            <RunAndHitHold playerId={hitterInfo[0]} pos={hitterInfo[1]}></RunAndHitHold>\n            {noOneOn(frID) && (<div><RunAndHitHold playerId={frID} pos={null}></RunAndHitHold></div>)};\n            \n\n            {listeningButton}\n\n            Last Play: {lastPlay}\n    </div>\n  );\n\n}\n\nexport default InningReader;\n"]},"metadata":{},"sourceType":"module"}