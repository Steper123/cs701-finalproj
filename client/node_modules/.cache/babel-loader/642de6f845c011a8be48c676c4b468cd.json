{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/EventHolder.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nconst EventHolder = ({\n  team\n}) => {\n  const [escucha, setEscucha] = React.useState(false);\n  var recognition = new webkitSpeechRecognition();\n\n  recognition.onstart = function () {\n    console.log(\"We are listening. Try speaking into the microphone.\");\n  };\n\n  recognition.onresult = function (event) {\n    var transcript = event.results[0][0].transcript;\n    var confidence = event.results[0][0].confidence;\n    console.log(transcript);\n    console.log(confidence);\n  };\n\n  const listeningButton = /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (escucha == true) {\n        recognition.start();\n        setEscucha(true);\n      } else {\n        recognition.end();\n        setEscucha(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"Test\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, listeningButton);\n};\n\nexport default EventHolder;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/EventHolder.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","EventHolder","team","escucha","setEscucha","recognition","webkitSpeechRecognition","onstart","console","log","onresult","event","transcript","results","confidence","listeningButton","start","end"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,GAAjC,QAA4C,YAA5C;;AAIA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9B;AAEA,MAAIW,WAAW,GAAG,IAAIC,uBAAJ,EAAlB;;AAEAD,EAAAA,WAAW,CAACE,OAAZ,GAAsB,YAAW;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACD,GAFD;;AAIAJ,EAAAA,WAAW,CAACK,QAAZ,GAAuB,UAASC,KAAT,EAAgB;AACrC,QAAIC,UAAU,GAAGD,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoBD,UAArC;AACA,QAAIE,UAAU,GAAGH,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,UAArC;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYK,UAAZ;AACH,GALC;;AAOA,QAAMC,eAAe,gBACnB,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM;AACrB,UAAIZ,OAAO,IAAI,IAAf,EAAqB;AACnBE,QAAAA,WAAW,CAACW,KAAZ;AACAZ,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAHD,MAIK;AACHC,QAAAA,WAAW,CAACY,GAAZ;AACAb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACA,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,eADH,CADF;AASD,CAxCD;;AA0CA,eAAed,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\n\n\nconst EventHolder = ({ team }) => {\n  const [escucha, setEscucha] = React.useState(false);\n\n  var recognition = new webkitSpeechRecognition();\n\n  recognition.onstart = function() {\n    console.log(\"We are listening. Try speaking into the microphone.\");\n  };\n\n  recognition.onresult = function(event) {\n    var transcript = event.results[0][0].transcript;\n    var confidence = event.results[0][0].confidence;\n    console.log(transcript);\n    console.log(confidence);\n};\n\n  const listeningButton = (\n    <Button onClick={() => {\n      if (escucha == true) {\n        recognition.start();\n        setEscucha(true);\n      }\n      else {\n        recognition.end();\n        setEscucha(false);\n      }\n      }}>Test</Button>\n  );\n\n\n\n  return (\n    <div>\n      {listeningButton}\n    </div>\n  );\n\n\n\n\n}\n\nexport default EventHolder;\n"]},"metadata":{},"sourceType":"module"}