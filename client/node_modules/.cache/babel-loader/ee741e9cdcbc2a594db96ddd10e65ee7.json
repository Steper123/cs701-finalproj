{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/InningReader.js\";\n//styling and react components\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"reactstrap\"; //css\n\nimport classes from \"./InningReader.module.css\"; //component that holds the runner and hitter below the strikes, balls, and outs\n\nconst RunAndHitHold = ({\n  playerId,\n  pos\n}) => {\n  const [player, setPlayer] = React.useState(null); //grabs player using ID\n\n  useEffect(() => {\n    const grabPerson = () => fetch(`api/players`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedPlayers => {\n      const personInList = fetchedPlayers.filter(player => player.id === playerId);\n      setPlayer(personInList[0]);\n    });\n\n    grabPerson();\n  }, [playerId, pos]);\n\n  if (player !== null) {\n    if (pos === null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, player.name));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, player.name), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, pos));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Loading...\");\n}; //major component that keeps the state of the given inning\n//transitions into endInning and startNewInning as needed\n\n\nconst InningReader = ({\n  currInning,\n  hitOrder,\n  endInn,\n  pauseInn\n}) => {\n  const [balls, setBalls] = React.useState(currInning ? currInning.balls : 0);\n  const [strikes, setStrikes] = React.useState(currInning ? currInning.strikes : 0);\n  const [outs, setOuts] = React.useState(currInning ? currInning.outs : 0);\n  const [hits, setHits] = React.useState(currInning ? currInning.hits : 0);\n  const [runs, setRuns] = React.useState(currInning ? currInning.runs : 0);\n  const [frID, setFirstRunner] = React.useState(currInning ? currInning.firstRunnerId : 0);\n  const [srID, setSecondRunner] = React.useState(currInning ? currInning.secondRunnerId : 0);\n  const [trID, setThirdRunner] = React.useState(currInning ? currInning.thirdRunnerId : 0);\n  const [whatHitter, setNumber] = React.useState(currInning ? currInning.ifPaused : hitOrder);\n  const [hitterInfo, setHitterInfo] = React.useState([]);\n  const [pitcher, setPitcher] = React.useState(0); //Recording Hooks\n\n  const [buttonText, setButtonText] = React.useState(\"Not Listening...\");\n  const [buttonColor, setButtonColor] = React.useState(\"#eb020e\");\n  const [lastPlay, setLastPlay] = React.useState(\"Game Started\");\n  const [speakingError, setMessage] = React.useState(\"\");\n\n  function noOneOn(number) {\n    if (number === 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function grabHitter(lineupObj, number) {\n    if (number === 0) {\n      return [lineupObj.firstId, lineupObj.firstPos];\n    } else if (number === 1) {\n      return [lineupObj.secondId, lineupObj.secondPos];\n    } else if (number === 2) {\n      return [lineupObj.thirdId, lineupObj.thirdPos];\n    } else if (number === 3) {\n      return [lineupObj.fourthId, lineupObj.fourthPos];\n    } else if (number === 4) {\n      return [lineupObj.fifthId, lineupObj.fifthPos];\n    } else if (number === 5) {\n      return [lineupObj.sixthId, lineupObj.sixthPos];\n    } else if (number === 6) {\n      return [lineupObj.seventhId, lineupObj.seventhPos];\n    } else if (number === 7) {\n      return [lineupObj.eighthId, lineupObj.eighthPos];\n    } else if (number === 8) {\n      return [lineupObj.ninthId, lineupObj.ninthPos];\n    } else {\n      setNumber(0);\n      return [lineupObj.firstId, lineupObj.firstPos];\n    }\n  }\n\n  function changetoInt(string) {\n    if (string === \"one\") {\n      return 1;\n    } else if (string === \"two\") {\n      return 2;\n    } else if (string === \"three\") {\n      return 3;\n    } else if (string === \"four\") {\n      return 4;\n    } else if (string === \"five\") {\n      return 5;\n    } else if (string === \"six\") {\n      return 6;\n    } else if (string === \"seven\") {\n      return 7;\n    } else if (string === \"eight\") {\n      return 8;\n    } else if (string === \"nine\") {\n      return 9;\n    } else {\n      return parseInt(string);\n    }\n  }\n\n  function MoveUp(bases, outJust, hitter, first, second, third) {\n    const finalBases = [];\n\n    if (bases === 0) {\n      if (outJust === \"F\") {\n        if (first !== 0) {\n          finalBases.push(first);\n        } else {\n          finalBases.push(0);\n        }\n\n        if (second !== 0) {\n          finalBases.push(second);\n        } else {\n          finalBases.push(0);\n        }\n\n        if (third !== 0) {\n          finalBases.push(third);\n        } else {\n          finalBases.push(0);\n        }\n\n        finalBases.push(0);\n      } else {\n        if (first !== 0) {\n          finalBases.push(hitter);\n        } else {\n          finalBases.push(0);\n        }\n\n        if (second !== 0) {\n          finalBases.push(second);\n        } else {\n          finalBases.push(0);\n        }\n\n        if (third !== 0) {\n          finalBases.push(third);\n        } else {\n          finalBases.push(0);\n        }\n\n        finalBases.push(0);\n      }\n    } else if (bases === 1) {\n      finalBases.push(hitter);\n\n      if (first !== 0) {\n        finalBases.push(first);\n      } else {\n        finalBases.push(0);\n      }\n\n      if (second !== 0) {\n        finalBases.push(second);\n      } else {\n        finalBases.push(0);\n      }\n\n      if (third !== 0) {\n        finalBases.push(third);\n      } else {\n        finalBases.push(0);\n      }\n    } else if (bases === 2) {\n      var runs = 0;\n      finalBases.push(0);\n      finalBases.push(hitter);\n\n      if (first !== 0) {\n        finalBases.push(first);\n      } else {\n        finalBases.push(0);\n      }\n\n      if (second !== 0) {\n        runs = runs + 1;\n      }\n\n      if (third !== 0) {\n        runs = runs + 1;\n      }\n\n      finalBases.push(runs);\n    } else if (bases === 3) {\n      var runs = 0;\n      finalBases.push(0);\n      finalBases.push(0);\n      finalBases.push(hitter);\n\n      if (first !== 0) {\n        runs = runs + 1;\n      }\n\n      if (second !== 0) {\n        runs = runs + 1;\n      }\n\n      if (third !== 0) {\n        runs = runs + 1;\n      }\n\n      finalBases.push(runs);\n    } else {\n      finalBases.push(0);\n      finalBases.push(0);\n      finalBases.push(0);\n      finalBases.push(4);\n    }\n\n    return finalBases;\n  }\n\n  function Deviate(string) {\n    if (string === \"hitch\") {\n      return \"pitch\";\n    } else if (string === \"and\") {\n      return \"end\";\n    } else if (string === \"thich\") {\n      return \"pitch\";\n    } else if (string === \"which\") {\n      return \"pitch\";\n    } else if (string === \"to\") {\n      return \"two\";\n    } else if (string === \"for\") {\n      return \"four\";\n    } else {\n      return string;\n    }\n  }\n\n  function firstWordCheck(string) {\n    const acceptableDev = [\"hitch\", \"thich\", \"which\", \"pitch\"];\n\n    if (acceptableDev.includes(string)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function speedCheck(stringOne, stringTwo) {\n    if (stringOne === \"a\") {\n      const speed = \"8\" + stringTwo[1];\n      const loc = stringTwo[2];\n      return [parseInt(speed), parseInt(loc)];\n    } else {\n      if (stringTwo === \"for\") {\n        return [parseInt(stringOne), 4];\n      } else if (stringTwo === \"to\") {\n        return [parseInt(stringOne), 2];\n      } else if (stringTwo === \"three\") {\n        return [parseInt(stringOne), 3];\n      } else if (stringTwo === \"one\") {\n        return [parseInt(stringOne), 1];\n      } else {\n        return [parseInt(stringOne), parseInt(stringTwo)];\n      }\n    }\n  }\n\n  function splitterCheck(string) {\n    const acceptableDev = [\"hid\", \"hit\"];\n\n    if (acceptableDev.includes(string)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function terminateCheck(string) {\n    const acceptableDev = [\"and\", \"end\", \"And\", \"End\"];\n\n    if (acceptableDev.includes(string)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function runCheck(stringList) {\n    if (stringList.includes(\"run\")) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function Cleaner(string) {\n    let realResult = \"\";\n\n    if (string.includes(\":\")) {\n      realResult = string.replace(\":\", \" \");\n    } else if (string.includes(\"/\")) {\n      realResult = string.replace(\"/\", \" \");\n    } else if (string.includes(\"-\")) {\n      realResult = string.replace(\"-\", \" \");\n    } else {\n      realResult = string;\n    }\n\n    const myBreak = realResult.split(\" \");\n    const openingTF = firstWordCheck(myBreak[0]);\n    const hitTF = splitterCheck(myBreak[4]);\n    const endTF = terminateCheck(myBreak[myBreak.length - 1]);\n\n    if (openingTF && hitTF && endTF) {\n      const speedList = speedCheck(myBreak[2], myBreak[3]);\n      let loopDex = 5;\n      let hitResult = \"\";\n\n      while (loopDex !== myBreak.length - 1) {\n        if (loopDex === 5) {\n          hitResult = myBreak[loopDex];\n        } else {\n          hitResult = hitResult + \" \" + myBreak[loopDex];\n        }\n\n        loopDex = loopDex + 1;\n      }\n\n      return [myBreak[1], speedList[0], speedList[1], hitResult];\n    } else {\n      return [\"Invalid\"];\n    }\n    /*\n     */\n\n  }\n\n  function resetStats() {\n    setOuts(0);\n    setBalls(0);\n    setStrikes(0);\n    setRuns(0);\n    setHits(0);\n    setFirstRunner(0);\n    setSecondRunner(0);\n    setThirdRunner(0);\n  }\n\n  useEffect(() => {\n    const firstStep = () => {\n      if (outs === 3) {\n        const returningInning = {\n          id: currInning.id,\n          gameId: currInning.gameId,\n          pitchingId: currInning.pitchingId,\n          hittingId: currInning.hittingId,\n          number: currInning.number,\n          runs: runs,\n          hits: hits,\n          balls: 0,\n          strikes: 0,\n          outs: 3,\n          firstRunnerId: 0,\n          secondRunnerId: 0,\n          thirdRunnerId: 0,\n          ifPaused: 0\n        };\n        endInn(returningInning, whatHitter);\n        resetStats();\n      } else {\n        fetch(`api/lineups/${currInning.gameId}`).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(fetchedLineups => {\n          const hittersLineup = fetchedLineups.filter(lineup => currInning.hittingId === lineup.teamId);\n          const pitchersLineup = fetchedLineups.filter(lineup => currInning.pitchingId === lineup.teamId);\n          setPitcher(pitchersLineup[0].pitcher);\n          const plaposHold = grabHitter(hittersLineup[0], whatHitter);\n          setHitterInfo(plaposHold);\n        });\n      }\n    };\n\n    firstStep();\n  }, [currInning, whatHitter]);\n\n  window.onbeforeunload = function (event) {\n    const pastInning = {\n      id: currInning.id,\n      gameId: currInning.gameId,\n      pitchingId: currInning.pitchingId,\n      hittingId: currInning.hittingId,\n      number: currInning.number,\n      runs: runs,\n      hits: hits,\n      balls: balls,\n      strikes: strikes,\n      outs: outs,\n      firstRunnerId: frID,\n      secondRunnerId: srID,\n      thirdRunnerId: trID,\n      ifPaused: whatHitter\n    };\n    fetch(`/api/innings/${pastInning.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(pastInning),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }) //Add the newly created order to local orders and update order state\n    .catch(err => {\n      console.error(err);\n    });\n  };\n\n  const addNewPlay = newPlay => {\n    const theFeed = fetch(\"/api/plays\", {\n      method: \"POST\",\n      body: JSON.stringify(newPlay),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }) //Add the newly created order to local orders and update order state\n    .then(receivedPlay => {\n      setLastPlay(receivedPlay.hitterResult);\n      return receivedPlay.hitterResult;\n    }).catch(err => {\n      console.error(err);\n    });\n    theFeed.then(data => {\n      if (typeof data === 'undefined') {\n        setMessage(\"Please repeat message. Play did not process\");\n      } else {\n        const collectionPlay = data.split(\" \");\n        const loweredPlay = collectionPlay.map(word => word.toLowerCase());\n        let newRUNS = 0;\n\n        if (loweredPlay.includes(\"single\")) {\n          const runnerResults = MoveUp(1, \"\", hitterInfo[0], frID, srID, trID);\n          setFirstRunner(runnerResults[0]);\n          setSecondRunner(runnerResults[1]);\n          setThirdRunner(runnerResults[2]);\n          newRUNS = runnerResults[3];\n          setHits(hits + 1);\n\n          if (runCheck(loweredPlay)) {\n            setThirdRunner(0);\n            setRuns(runs + 1);\n          }\n\n          setRuns(runs + newRUNS);\n          setNumber(whatHitter + 1);\n          setLastPlay(\"Single\");\n        } else if (loweredPlay.includes(\"double\")) {\n          const runnerResults = MoveUp(2, \"\", hitterInfo[0], frID, srID, trID);\n          setFirstRunner(runnerResults[0]);\n          setSecondRunner(runnerResults[1]);\n          setThirdRunner(runnerResults[2]);\n          newRUNS = runnerResults[3];\n          setHits(hits + 1);\n\n          if (runCheck(loweredPlay)) {\n            setThirdRunner(0);\n            setRuns(runs + 1);\n          }\n\n          setRuns(runs + newRUNS);\n          setNumber(whatHitter + 1);\n          setLastPlay(\"Double\");\n        } else if (loweredPlay.includes(\"triple\")) {\n          const runnerResults = MoveUp(3, \"\", hitterInfo[0], frID, srID, trID);\n          setFirstRunner(runnerResults[0]);\n          setSecondRunner(runnerResults[1]);\n          setThirdRunner(runnerResults[2]);\n          newRUNS = runnerResults[3];\n          setHits(hits + 1);\n          setRuns(runs + newRUNS);\n          setNumber(whatHitter + 1);\n          setLastPlay(\"Triple\");\n        } else if (loweredPlay.includes(\"homerun\")) {\n          const runnerResults = MoveUp(4, \"\", hitterInfo[0], frID, srID, trID);\n          setFirstRunner(runnerResults[0]);\n          setSecondRunner(runnerResults[1]);\n          setThirdRunner(runnerResults[2]);\n          newRUNS = runnerResults[3];\n          setHits(hits + 1);\n          setRuns(runs + newRUNS);\n          setNumber(whatHitter + 1);\n          setLastPlay(\"Home Run\");\n        } else if (loweredPlay.includes(\"fly\") || loweredPlay.includes(\"flyout\")) {\n          const runnerResults = MoveUp(0, \"F\", hitterInfo[0], frID, srID, trID);\n          setFirstRunner(runnerResults[0]);\n          setSecondRunner(runnerResults[1]);\n          setThirdRunner(runnerResults[2]);\n          newRUNS = runnerResults[3];\n\n          if (runCheck(loweredPlay)) {\n            setThirdRunner(0);\n            setRuns(runs + 1);\n          }\n\n          setOuts(outs + 1);\n          setBalls(0);\n          setStrikes(0);\n          setNumber(whatHitter + 1);\n          setLastPlay(\"Fly Out\");\n        } else if (loweredPlay.includes(\"ground\") || loweredPlay.includes(\"groundout\")) {\n          const runnerResults = MoveUp(0, \"G\", hitterInfo[0], frID, srID, trID);\n          setFirstRunner(runnerResults[0]);\n          setSecondRunner(runnerResults[1]);\n          setThirdRunner(runnerResults[2]);\n          newRUNS = runnerResults[3];\n\n          if (runCheck(loweredPlay)) {\n            setThirdRunner(0);\n            setRuns(runs + 1);\n          }\n\n          setOuts(outs + 1);\n          setBalls(0);\n          setStrikes(0);\n          setNumber(whatHitter + 1);\n          setLastPlay(\"Ground Out\");\n        } else if (loweredPlay.includes(\"strike\")) {\n          if (strikes === 2) {\n            setOuts(outs + 1);\n            setBalls(0);\n            setStrikes(0);\n            setLastPlay(\"Strikeout\");\n          } else {\n            setStrikes(strikes + 1);\n          }\n        } else if (loweredPlay.includes(\"ball\")) {\n          if (balls === 3) {\n            setBalls(0);\n            setStrikes(0);\n            setFirstRunner(hitterInfo[0]);\n            setLastPlay(\"Walk\");\n          } else {\n            setBalls(balls + 1);\n          }\n        } else if (loweredPlay.includes(\"foul\")) {\n          if (strikes === 2) {\n            setLastPlay(\"Foul Ball\");\n          } else {\n            setStrikes(strikes + 1);\n            setLastPlay(\"Foul Ball\");\n          }\n        } else {\n          setLastPlay(\"Please try again.\");\n        }\n      }\n    });\n  }; //Speech Packaging\n\n\n  var indexSpeech = 0;\n  var SpeechRecognition = window.webkitSpeechRecognition;\n  var recognition = new SpeechRecognition();\n  recognition.continuous = true;\n\n  recognition.onstart = function () {\n    console.log(\"Listening.\");\n  };\n\n  recognition.onend = function () {\n    recognition.abort();\n  };\n\n  recognition.onerror = function () {\n    console.log(\"Error\");\n  };\n\n  recognition.onresult = function (event) {\n    var transcript = event.results[indexSpeech][0].transcript;\n    var confidence = parseFloat(event.results[indexSpeech][0].confidence);\n    var breakDown = Cleaner(transcript);\n\n    if (breakDown.length !== 1 && confidence > 0.6) {\n      const myPlay = {\n        inningId: currInning.id,\n        pitcherId: pitcher,\n        hitterId: hitterInfo[0],\n        pitchType: breakDown[0],\n        pitchSpeed: breakDown[1],\n        pitchLocation: breakDown[2],\n        hitterResult: breakDown[3]\n      };\n      addNewPlay(myPlay);\n    } else {\n      setLastPlay(\"Please try again.\");\n    }\n\n    indexSpeech += 1;\n  };\n\n  const listeningButton = /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: buttonColor\n    },\n    onClick: () => {\n      if (buttonText === \"Not Listening...\") {\n        recognition.start();\n        setButtonText(\"Listening!\");\n        setButtonColor(\"#5ef266\");\n      } else {\n        recognition.abort();\n        setButtonText(\"Not Listening...\");\n        setButtonColor(\"#eb020e\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 5\n    }\n  }, buttonText); //End of Speech Packaging\n\n  if (currInning === null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.InningReader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.BallStrikeCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 7\n    }\n  }, \"Balls:\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.BallStrikeCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 7\n    }\n  }, balls), /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.BallStrikeCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 7\n    }\n  }, \"Strikes:\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.BallStrikeCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 7\n    }\n  }, strikes), /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.BallStrikeCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 7\n    }\n  }, \"Outs:\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.BallStrikeCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 7\n    }\n  }, outs), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 7\n    }\n  }, \"Pitcher\"), /*#__PURE__*/React.createElement(RunAndHitHold, {\n    playerId: pitcher,\n    pos: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 7\n    }\n  }, \"Hitter\"), /*#__PURE__*/React.createElement(RunAndHitHold, {\n    playerId: hitterInfo[0],\n    pos: hitterInfo[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 7\n    }\n  }), noOneOn(frID) && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 9\n    }\n  }, \"On first...\"), /*#__PURE__*/React.createElement(RunAndHitHold, {\n    playerId: frID,\n    pos: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 9\n    }\n  })), noOneOn(srID) && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 27\n    }\n  }, \"On second...\"), /*#__PURE__*/React.createElement(RunAndHitHold, {\n    playerId: srID,\n    pos: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 27\n    }\n  })), noOneOn(trID) && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 11\n    }\n  }, \"on third...\"), /*#__PURE__*/React.createElement(RunAndHitHold, {\n    playerId: trID,\n    pos: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 9\n    }\n  })), listeningButton, \"Last Play: \", lastPlay);\n};\n\nexport default InningReader;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/InningReader.js"],"names":["React","useState","useEffect","Button","classes","RunAndHitHold","playerId","pos","player","setPlayer","grabPerson","fetch","then","response","ok","json","Error","statusText","fetchedPlayers","personInList","filter","id","name","InningReader","currInning","hitOrder","endInn","pauseInn","balls","setBalls","strikes","setStrikes","outs","setOuts","hits","setHits","runs","setRuns","frID","setFirstRunner","firstRunnerId","srID","setSecondRunner","secondRunnerId","trID","setThirdRunner","thirdRunnerId","whatHitter","setNumber","ifPaused","hitterInfo","setHitterInfo","pitcher","setPitcher","buttonText","setButtonText","buttonColor","setButtonColor","lastPlay","setLastPlay","speakingError","setMessage","noOneOn","number","grabHitter","lineupObj","firstId","firstPos","secondId","secondPos","thirdId","thirdPos","fourthId","fourthPos","fifthId","fifthPos","sixthId","sixthPos","seventhId","seventhPos","eighthId","eighthPos","ninthId","ninthPos","changetoInt","string","parseInt","MoveUp","bases","outJust","hitter","first","second","third","finalBases","push","Deviate","firstWordCheck","acceptableDev","includes","speedCheck","stringOne","stringTwo","speed","loc","splitterCheck","terminateCheck","runCheck","stringList","Cleaner","realResult","replace","myBreak","split","openingTF","hitTF","endTF","length","speedList","loopDex","hitResult","resetStats","firstStep","returningInning","gameId","pitchingId","hittingId","fetchedLineups","hittersLineup","lineup","teamId","pitchersLineup","plaposHold","window","onbeforeunload","event","pastInning","method","body","JSON","stringify","headers","Headers","Accept","catch","err","console","error","addNewPlay","newPlay","theFeed","receivedPlay","hitterResult","data","collectionPlay","loweredPlay","map","word","toLowerCase","newRUNS","runnerResults","indexSpeech","SpeechRecognition","webkitSpeechRecognition","recognition","continuous","onstart","log","onend","abort","onerror","onresult","transcript","results","confidence","parseFloat","breakDown","myPlay","inningId","pitcherId","hitterId","pitchType","pitchSpeed","pitchLocation","listeningButton","backgroundColor","start","BallStrikeCounter"],"mappings":"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","sourcesContent":["//styling and react components\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"reactstrap\";\n\n//css\nimport classes from \"./InningReader.module.css\"\n\n//component that holds the runner and hitter below the strikes, balls, and outs\nconst RunAndHitHold = ({ playerId, pos }) => {\n  const [player, setPlayer] = React.useState(null);\n\n//grabs player using ID\n  useEffect(() => {\n    const grabPerson = () =>\n    fetch(`api/players`)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then((fetchedPlayers) => {\n        const personInList = fetchedPlayers.filter(player => player.id === playerId);\n        setPlayer(personInList[0]);\n      })\n\n      grabPerson();\n\n    }, [playerId, pos]);\n  if (player !== null) {\n    if (pos === null) {\n      return (\n        <div>\n          <strong>{player.name}</strong>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <strong>{player.name}</strong>\n        <small>{pos}</small>\n      </div>\n    );\n  }\n  return (<div>Loading...</div>);\n\n}\n\n//major component that keeps the state of the given inning\n//transitions into endInning and startNewInning as needed\nconst InningReader = ({ currInning, hitOrder, endInn, pauseInn }) => {\n  const [balls, setBalls] = React.useState(currInning ? currInning.balls : 0);\n  const [strikes, setStrikes] = React.useState(currInning ? currInning.strikes : 0);\n  const [outs, setOuts] = React.useState(currInning ? currInning.outs : 0);\n  const [hits, setHits] = React.useState(currInning ? currInning.hits : 0);\n  const [runs, setRuns] = React.useState(currInning ? currInning.runs : 0);\n  const [frID, setFirstRunner] = React.useState(currInning ? currInning.firstRunnerId : 0);\n  const [srID, setSecondRunner] = React.useState(currInning ? currInning.secondRunnerId : 0);\n  const [trID, setThirdRunner] = React.useState(currInning ? currInning.thirdRunnerId : 0);\n\n  const [whatHitter, setNumber] = React.useState(currInning ? currInning.ifPaused : hitOrder);\n\n  const [hitterInfo, setHitterInfo] = React.useState([]);\n  const [pitcher, setPitcher] = React.useState(0);\n\n  //Recording Hooks\n  const [buttonText, setButtonText] = React.useState(\"Not Listening...\");\n  const [buttonColor, setButtonColor] = React.useState(\"#eb020e\");\n  const [lastPlay, setLastPlay] = React.useState(\"Game Started\");\n  const [speakingError, setMessage] = React.useState(\"\");\n\n  function noOneOn(number) {\n    if (number === 0) {\n      return false;\n    }\n    return true;\n  }\n\n  function grabHitter(lineupObj, number) {\n    if (number === 0) {\n      return [lineupObj.firstId, lineupObj.firstPos];\n    }\n    else if (number === 1) {\n      return [lineupObj.secondId, lineupObj.secondPos];\n    }\n    else if (number === 2) {\n      return [lineupObj.thirdId, lineupObj.thirdPos];\n    }\n    else if (number === 3) {\n      return [lineupObj.fourthId, lineupObj.fourthPos];\n    }\n    else if (number === 4) {\n      return [lineupObj.fifthId, lineupObj.fifthPos];\n    }\n    else if (number === 5) {\n      return [lineupObj.sixthId, lineupObj.sixthPos];\n    }\n    else if (number === 6) {\n      return [lineupObj.seventhId, lineupObj.seventhPos];\n    }\n    else if (number === 7) {\n      return [lineupObj.eighthId, lineupObj.eighthPos];\n    }\n    else if (number === 8) {\n      return [lineupObj.ninthId, lineupObj.ninthPos];\n    }\n    else {\n      setNumber(0);\n      return [lineupObj.firstId, lineupObj.firstPos];\n    }\n\n  }\n\n  function changetoInt(string) {\n    if (string === \"one\") {\n      return 1;\n    }\n    else if (string === \"two\") {\n      return 2;\n    }\n    else if (string === \"three\") {\n      return 3;\n    }\n    else if (string === \"four\") {\n      return 4;\n    }\n    else if (string === \"five\") {\n      return 5;\n    }\n    else if (string === \"six\") {\n      return 6;\n    }\n    else if (string === \"seven\") {\n      return 7;\n    }\n    else if (string === \"eight\") {\n      return 8;\n    }\n    else if (string === \"nine\") {\n      return 9;\n    }\n    else {\n      return parseInt(string);\n    }\n\n  }\n\n  function MoveUp(bases, outJust, hitter, first, second, third) {\n    const finalBases = [];\n    if (bases === 0) {\n      if (outJust === \"F\") {\n        if (first !== 0) {\n          finalBases.push(first);\n        }\n        else {\n          finalBases.push(0);\n        }\n        if (second !== 0) {\n          finalBases.push(second);\n        }\n        else {\n          finalBases.push(0);\n        }\n        if (third !== 0) {\n          finalBases.push(third);\n        }\n        else {\n          finalBases.push(0);\n        }\n\n        finalBases.push(0);\n      }\n      else {\n        if (first !== 0) {\n          finalBases.push(hitter);\n        }\n        else {\n          finalBases.push(0);\n        }\n        if (second !== 0) {\n          finalBases.push(second);\n        }\n        else {\n          finalBases.push(0);\n        }\n        if (third !== 0) {\n          finalBases.push(third);\n        }\n        else {\n          finalBases.push(0);\n        }\n\n        finalBases.push(0);\n      }\n    }\n    else if (bases === 1) {\n      finalBases.push(hitter);\n      if (first !== 0) {\n        finalBases.push(first);\n      }\n      else {\n        finalBases.push(0);\n      }\n      if (second !== 0) {\n        finalBases.push(second);\n      }\n      else {\n        finalBases.push(0);\n      }\n      if (third !== 0) {\n        finalBases.push(third);\n      }\n      else {\n        finalBases.push(0);\n      }\n    }\n\n    else if (bases === 2) {\n      var runs = 0;\n      finalBases.push(0);\n      finalBases.push(hitter);\n      if (first !== 0) {\n        finalBases.push(first);\n      }\n      else {\n        finalBases.push(0);\n      }\n      if (second !== 0) {\n        runs = runs + 1;\n      }\n      if (third !== 0) {\n        runs = runs + 1;\n      }\n      finalBases.push(runs);\n    }\n\n    else if (bases === 3) {\n      var runs = 0;\n      finalBases.push(0);\n      finalBases.push(0);\n      finalBases.push(hitter);\n      if (first !== 0) {\n        runs = runs + 1;\n      }\n      if (second !== 0) {\n        runs = runs + 1;\n      }\n      if (third !== 0) {\n        runs = runs + 1;\n      }\n      finalBases.push(runs);\n    }\n\n    else {\n      finalBases.push(0);\n      finalBases.push(0);\n      finalBases.push(0);\n      finalBases.push(4);\n    }\n\n    return finalBases;\n  }\n\n  function Deviate(string) {\n    if (string === \"hitch\") {\n      return \"pitch\";\n    }\n    else if (string === \"and\") {\n      return \"end\";\n    }\n    else if (string === \"thich\") {\n      return \"pitch\";\n    }\n    else if (string === \"which\") {\n      return \"pitch\";\n    }\n    else if (string === \"to\") {\n      return \"two\";\n    }\n    else if (string === \"for\") {\n      return \"four\";\n    }\n    else {\n      return string;\n    }\n  }\n\n  function firstWordCheck(string) {\n    const acceptableDev = [\"hitch\", \"thich\", \"which\", \"pitch\"];\n    if (acceptableDev.includes(string)) {\n      return true;\n    }\n    return false;\n  }\n\n  function speedCheck(stringOne, stringTwo) {\n    if (stringOne === \"a\") {\n      const speed = \"8\" + stringTwo[1];\n      const loc = stringTwo[2];\n      return [parseInt(speed), parseInt(loc)];\n    }\n    else {\n      if (stringTwo === \"for\") {\n        return [parseInt(stringOne), 4];\n      }\n      else if (stringTwo === \"to\") {\n        return [parseInt(stringOne), 2];\n      }\n      else if (stringTwo === \"three\") {\n        return [parseInt(stringOne), 3];\n      }\n      else if (stringTwo === \"one\") {\n        return [parseInt(stringOne), 1];\n      }\n      else {\n        return [parseInt(stringOne), parseInt(stringTwo)];\n      }\n    }\n  }\n\n  function splitterCheck(string) {\n    const acceptableDev = [\"hid\", \"hit\"];\n    if (acceptableDev.includes(string)) {\n      return true;\n    }\n    return false;\n  }\n\n  function terminateCheck(string) {\n    const acceptableDev = [\"and\", \"end\", \"And\", \"End\"];\n    if (acceptableDev.includes(string)) {\n      return true;\n    }\n    return false;\n  }\n\n  function runCheck(stringList) {\n    if (stringList.includes(\"run\")) {\n      return true;\n    }\n    return false;\n  }\n\n  function Cleaner(string) {\n    let realResult = \"\";\n    if (string.includes(\":\")) {\n      realResult = string.replace(\":\", \" \");\n    }\n    else if (string.includes(\"/\")) {\n      realResult = string.replace(\"/\", \" \");\n    }\n    else if (string.includes(\"-\")) {\n      realResult = string.replace(\"-\", \" \");\n    }\n    else {\n      realResult = string;\n    }\n\n    const myBreak = realResult.split(\" \");\n    const openingTF = firstWordCheck(myBreak[0]);\n    const hitTF = splitterCheck(myBreak[4]);\n    const endTF = terminateCheck(myBreak[myBreak.length - 1]);\n    if (openingTF && hitTF && endTF) {\n      const speedList = speedCheck(myBreak[2], myBreak[3]);\n      let loopDex = 5;\n      let hitResult = \"\";\n      while (loopDex !== myBreak.length -1) {\n        if (loopDex === 5) {\n          hitResult = myBreak[loopDex];\n        }\n        else {\n          hitResult = hitResult + \" \" + myBreak[loopDex]\n        }\n        loopDex = loopDex + 1;\n      }\n\n      return [myBreak[1], speedList[0], speedList[1], hitResult];\n    }\n    else {\n      return [\"Invalid\"];\n    }\n\n\n\n    /*\n\n    */\n  }\n\n  function resetStats() {\n    setOuts(0);\n    setBalls(0);\n    setStrikes(0);\n    setRuns(0);\n    setHits(0);\n    setFirstRunner(0);\n    setSecondRunner(0);\n    setThirdRunner(0);\n  }\n\n  useEffect(() => {\n    const firstStep = () => {\n      if (outs === 3) {\n        const returningInning = ({\n          id: currInning.id,\n          gameId: currInning.gameId,\n          pitchingId: currInning.pitchingId,\n          hittingId: currInning.hittingId,\n          number: currInning.number,\n          runs: runs,\n          hits: hits,\n          balls: 0,\n          strikes: 0,\n          outs: 3,\n          firstRunnerId: 0,\n          secondRunnerId: 0,\n          thirdRunnerId: 0,\n          ifPaused: 0\n        });\n\n        endInn(returningInning, whatHitter, );\n        resetStats();\n\n      }\n      else {\n        fetch(`api/lineups/${currInning.gameId}`)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedLineups) => {\n            const hittersLineup = fetchedLineups.filter(lineup => currInning.hittingId === lineup.teamId);\n            const pitchersLineup = fetchedLineups.filter(lineup => currInning.pitchingId === lineup.teamId);\n            setPitcher(pitchersLineup[0].pitcher);\n            const plaposHold = grabHitter(hittersLineup[0], whatHitter);\n            setHitterInfo(plaposHold);\n          })\n      }\n    }\n\n\n      firstStep();\n\n    }, [currInning, whatHitter]);\n\n  window.onbeforeunload = function(event)\n  {\n    const pastInning = ({\n      id: currInning.id,\n      gameId: currInning.gameId,\n      pitchingId: currInning.pitchingId,\n      hittingId: currInning.hittingId,\n      number: currInning.number,\n      runs: runs,\n      hits: hits,\n      balls: balls,\n      strikes: strikes,\n      outs: outs,\n      firstRunnerId: frID,\n      secondRunnerId: srID,\n      thirdRunnerId: trID,\n      ifPaused: whatHitter\n    });\n\n    fetch(`/api/innings/${pastInning.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(pastInning),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n\n      })\n      //Add the newly created order to local orders and update order state\n      .catch(err => {\n        console.error(err);\n      });\n\n  };\n\n  const addNewPlay = (newPlay) => {\n    const theFeed = fetch(\"/api/plays\", {\n      method: \"POST\",\n      body: JSON.stringify(newPlay),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      //Add the newly created order to local orders and update order state\n      .then(receivedPlay => {\n        setLastPlay(receivedPlay.hitterResult);\n        return receivedPlay.hitterResult;\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n      theFeed.then((data) => {\n        if (typeof data === 'undefined') {\n          setMessage(\"Please repeat message. Play did not process\");\n        }\n        else {\n          const collectionPlay = data.split(\" \");\n          const loweredPlay = collectionPlay.map(word => word.toLowerCase());\n          let newRUNS = 0;\n          if (loweredPlay.includes(\"single\")) {\n            const runnerResults = MoveUp(1, \"\", hitterInfo[0], frID, srID, trID);\n            setFirstRunner(runnerResults[0]);\n            setSecondRunner(runnerResults[1]);\n            setThirdRunner(runnerResults[2]);\n            newRUNS = runnerResults[3];\n            setHits(hits + 1);\n            if (runCheck(loweredPlay)) {\n              setThirdRunner(0);\n              setRuns(runs + 1);\n            }\n            setRuns(runs + newRUNS);\n            setNumber(whatHitter + 1);\n            setLastPlay(\"Single\");\n          }\n          else if (loweredPlay.includes(\"double\")) {\n            const runnerResults = MoveUp(2, \"\", hitterInfo[0], frID, srID, trID);\n            setFirstRunner(runnerResults[0]);\n            setSecondRunner(runnerResults[1]);\n            setThirdRunner(runnerResults[2]);\n            newRUNS = runnerResults[3];\n            setHits(hits + 1);\n            if (runCheck(loweredPlay)) {\n              setThirdRunner(0);\n              setRuns(runs + 1);\n            }\n            setRuns(runs + newRUNS);\n            setNumber(whatHitter + 1);\n            setLastPlay(\"Double\");\n          }\n          else if (loweredPlay.includes(\"triple\")) {\n            const runnerResults = MoveUp(3, \"\", hitterInfo[0], frID, srID, trID);\n            setFirstRunner(runnerResults[0]);\n            setSecondRunner(runnerResults[1]);\n            setThirdRunner(runnerResults[2]);\n            newRUNS = runnerResults[3];\n            setHits(hits + 1);\n            setRuns(runs + newRUNS);\n            setNumber(whatHitter + 1);\n            setLastPlay(\"Triple\");\n          }\n          else if (loweredPlay.includes(\"homerun\")) {\n            const runnerResults = MoveUp(4, \"\", hitterInfo[0], frID, srID, trID);\n            setFirstRunner(runnerResults[0]);\n            setSecondRunner(runnerResults[1]);\n            setThirdRunner(runnerResults[2]);\n            newRUNS = runnerResults[3];\n            setHits(hits + 1);\n            setRuns(runs + newRUNS);\n            setNumber(whatHitter + 1);\n            setLastPlay(\"Home Run\");\n          }\n          else if (loweredPlay.includes(\"fly\") || loweredPlay.includes(\"flyout\")) {\n            const runnerResults = MoveUp(0, \"F\", hitterInfo[0], frID, srID, trID);\n            setFirstRunner(runnerResults[0]);\n            setSecondRunner(runnerResults[1]);\n            setThirdRunner(runnerResults[2]);\n            newRUNS = runnerResults[3];\n            if (runCheck(loweredPlay)) {\n              setThirdRunner(0);\n              setRuns(runs + 1);\n            }\n            setOuts(outs + 1);\n            setBalls(0);\n            setStrikes(0);\n            setNumber(whatHitter + 1);\n            setLastPlay(\"Fly Out\");\n          }\n          else if (loweredPlay.includes(\"ground\") || loweredPlay.includes(\"groundout\")) {\n            const runnerResults = MoveUp(0, \"G\", hitterInfo[0], frID, srID, trID);\n            setFirstRunner(runnerResults[0]);\n            setSecondRunner(runnerResults[1]);\n            setThirdRunner(runnerResults[2]);\n            newRUNS = runnerResults[3];\n            if (runCheck(loweredPlay)) {\n              setThirdRunner(0);\n              setRuns(runs + 1);\n            }\n            setOuts(outs + 1);\n            setBalls(0);\n            setStrikes(0);\n            setNumber(whatHitter + 1);\n            setLastPlay(\"Ground Out\");\n          }\n          else if (loweredPlay.includes(\"strike\")) {\n            if (strikes === 2) {\n              setOuts(outs + 1);\n              setBalls(0);\n              setStrikes(0);\n              setLastPlay(\"Strikeout\");\n            }\n            else {\n              setStrikes(strikes + 1);\n            }\n          }\n          else if (loweredPlay.includes(\"ball\")) {\n            if (balls === 3) {\n              setBalls(0);\n              setStrikes(0);\n              setFirstRunner(hitterInfo[0]);\n              setLastPlay(\"Walk\");\n            }\n            else {\n              setBalls(balls + 1);\n            }\n          }\n          else if (loweredPlay.includes(\"foul\")) {\n            if (strikes === 2) {\n              setLastPlay(\"Foul Ball\");\n            }\n            else {\n              setStrikes(strikes + 1);\n              setLastPlay(\"Foul Ball\");\n            }\n\n          }\n          else {\n            setLastPlay(\"Please try again.\")\n          }\n\n        }\n\n\n\n      })\n\n  }\n\n  //Speech Packaging\n  var indexSpeech = 0;\n  var SpeechRecognition = window.webkitSpeechRecognition;\n  var recognition = new SpeechRecognition();\n  recognition.continuous = true;\n  recognition.onstart = function() {\n    console.log(\"Listening.\");\n  };\n  recognition.onend = function() {\n    recognition.abort();\n  }\n  recognition.onerror = function() {\n    console.log(\"Error\");\n  }\n\n  recognition.onresult = function(event) {\n    var transcript = event.results[indexSpeech][0].transcript;\n    var confidence = parseFloat(event.results[indexSpeech][0].confidence);\n    var breakDown = Cleaner(transcript);\n\n    if (breakDown.length !== 1 && confidence > 0.6) {\n      const myPlay = ({\n        inningId: currInning.id,\n        pitcherId: pitcher,\n        hitterId: hitterInfo[0],\n        pitchType: breakDown[0],\n        pitchSpeed: breakDown[1],\n        pitchLocation: breakDown[2],\n        hitterResult: breakDown[3]\n\n      });\n      addNewPlay(myPlay);\n    }\n    else {\n      setLastPlay(\"Please try again.\")\n\n    }\n\n\n\n    indexSpeech += 1;\n\n};\n\n  const listeningButton = (\n    <Button\n      style = {{ backgroundColor: buttonColor }}\n      onClick={() => {\n      if (buttonText === \"Not Listening...\") {\n        recognition.start();\n        setButtonText(\"Listening!\");\n        setButtonColor(\"#5ef266\");\n      }\n      else {\n        recognition.abort();\n        setButtonText(\"Not Listening...\");\n        setButtonColor(\"#eb020e\");\n      }\n    }}>{buttonText}</Button>\n  );\n  //End of Speech Packaging\n\n  if (currInning === null) {\n    return(<div>Loading...</div>);\n  }\n\n  return (\n    <div className={classes.InningReader}>\n      <strong className={classes.BallStrikeCounter}>Balls:</strong>\n      <small className={classes.BallStrikeCounter}>{balls}</small>\n      <strong className={classes.BallStrikeCounter}>Strikes:</strong>\n      <small className={classes.BallStrikeCounter}>{strikes}</small>\n      <strong className={classes.BallStrikeCounter}>Outs:</strong>\n      <small className={classes.BallStrikeCounter}>{outs}</small>\n      <div>Pitcher</div>\n      <RunAndHitHold playerId={pitcher} pos={null}></RunAndHitHold>\n      <div>Hitter</div>\n      <RunAndHitHold playerId={hitterInfo[0]} pos={hitterInfo[1]}></RunAndHitHold>\n      {noOneOn(frID) && (<div>\n        <div>On first...</div>\n        <RunAndHitHold playerId={frID} pos={null}></RunAndHitHold></div>)}\n      {noOneOn(srID) && (<div>\n                          <div>On second...</div>\n                          <RunAndHitHold playerId={srID} pos={null}></RunAndHitHold></div>)}\n      {noOneOn(trID) && (<div>\n          <div>on third...</div>\n        <RunAndHitHold playerId={trID} pos={null}></RunAndHitHold></div>)}\n\n      {listeningButton}\n\n      Last Play: {lastPlay}\n    </div>\n  );\n\n}\n\nexport default InningReader;\n"]},"metadata":{},"sourceType":"module"}