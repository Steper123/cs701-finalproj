{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/AddDeletePerson.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nimport PlayerHolder from \"./PlayerHolder\";\nimport FanHolder from \"./FanHolder\";\n\nconst AddDeletePerson = ({\n  team,\n  type\n}) => {\n  const [list, setList] = React.useState([]);\n  useEffect(() => {\n    const buildList = () => {\n      if (type == \"Players\") {\n        fetch(\"/api/players\").then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(fetchedPlayers => {\n          const actualList = fetchedPlayers.filter(player => player.teamId == team.id);\n          setList(actualList);\n        }).catch(err => console.error(err)); // eslint-disable-line no-console\n      } else if (type == \"Scorers\") {\n        const allAccess = fetch(`/api/teamaccess`).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(info => {\n          const returnedInfo = info.filter(access => access.teamId == team.id && access.type == 2);\n          return returnedInfo;\n        }).catch(error => {\n          console.log(error);\n        });\n        allAccess.then(data => {\n          const users = fetch(`/api/users`).then(response => {\n            if (!response.ok) {\n              throw new Error(response.status_text);\n            }\n\n            return response.json();\n          }).then(data => {\n            const trueList = data.filter(user => allAccess.includes(user.id));\n            setList(trueList);\n          }).catch(error => {\n            console.log(error);\n          });\n        });\n      } else if (type == \"Fans\") {\n        const allAccess = fetch(`/api/teamaccess`).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(info => {\n          const returnedInfo = info.filter(access => access.teamId == team.id);\n          return returnedInfo;\n        }).catch(error => {\n          console.log(error);\n        });\n        allAccess.then(data => {\n          const users = fetch(`/api/users`).then(response => {\n            if (!response.ok) {\n              throw new Error(response.status_text);\n            }\n\n            return response.json();\n          }).then(data => {\n            const trueList = data.filter(user => allAccess.includes(user.id));\n            setList(trueList);\n          }).catch(error => {\n            console.log(error);\n          });\n        });\n      }\n    };\n\n    buildList();\n  }, []); //const handleDeletePerson = (person) => {\n  //};\n\n  const handleAddPlayer = player => {\n    fetch(\"/api/players\", {\n      method: \"POST\",\n      body: JSON.stringify(player),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }) //Add the newly created order to local orders and update order state\n    .then(receivedPerson => {\n      const newList = list.push(receivedPerson);\n      setList(newList);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const handleAddUser = accessSelected => {\n    fetch(\"/api/teamaccess\", {\n      method: \"POST\",\n      body: JSON.stringify(accessSelected),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  if (list != null && type == \"Players\") {\n    const trueMapping = list.map(person => /*#__PURE__*/React.createElement(PlayerHolder, {\n      player: person,\n      teamLoc: team.location,\n      teamName: team.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 46\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, \" \", trueMapping, \" \"), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, trueMapping.length));\n  } else if (list != null) {\n    const trueMapping = list.map(person => /*#__PURE__*/React.createElement(FanHolder, {\n      person: person,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 46\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, \" \", trueMapping, \" \"), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, trueMapping.length));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    });\n  }\n};\n\nexport default AddDeletePerson;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/AddDeletePerson.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","PlayerHolder","FanHolder","AddDeletePerson","team","type","list","setList","buildList","fetch","then","response","ok","json","Error","statusText","fetchedPlayers","actualList","filter","player","teamId","id","catch","err","console","error","allAccess","info","returnedInfo","access","log","data","users","status_text","trueList","user","includes","handleAddPlayer","method","body","JSON","stringify","headers","Headers","Accept","receivedPerson","newList","push","handleAddUser","accessSelected","trueMapping","map","person","location","name","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nimport PlayerHolder from \"./PlayerHolder\";\nimport FanHolder from \"./FanHolder\";\n\nconst AddDeletePerson = ({ team, type }) => {\n  const [list, setList] = React.useState([]);\n\n  useEffect(() => {\n    const buildList = () => {\n      if (type == \"Players\") {\n        fetch(\"/api/players\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedPlayers) => {\n            const actualList = fetchedPlayers.filter(player => player.teamId == team.id);\n            setList(actualList);\n          }).catch((err) => console.error(err)); // eslint-disable-line no-console\n      }\n      else if (type == \"Scorers\") {\n        const allAccess = fetch(`/api/teamaccess`)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          }).then((info) => {\n              const returnedInfo = info.filter(access => access.teamId == team.id && access.type == 2);\n              return returnedInfo;\n\n            }\n          ).catch(error => {\n            console.log(error);\n          });\n\n          allAccess.then(data => {\n            const users = fetch(`/api/users`)\n              .then(response => {\n                if (!response.ok) {\n                  throw new Error(response.status_text);\n                }\n                return response.json();\n              })\n              .then(data => {\n                const trueList = data.filter(user => allAccess.includes(user.id));\n                setList(trueList);\n              })\n              .catch(error => {\n                console.log(error);\n              });\n\n\n          })\n      }\n\n      else if (type == \"Fans\") {\n        const allAccess = fetch(`/api/teamaccess`)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          }).then((info) => {\n              const returnedInfo = info.filter(access => access.teamId == team.id);\n              return returnedInfo;\n            }\n          ).catch(error => {\n            console.log(error);\n          });\n\n          allAccess.then(data => {\n            const users = fetch(`/api/users`)\n              .then(response => {\n                if (!response.ok) {\n                  throw new Error(response.status_text);\n                }\n                return response.json();\n              })\n              .then(data => {\n                const trueList = data.filter(user => allAccess.includes(user.id));\n                setList(trueList);\n              })\n              .catch(error => {\n                console.log(error);\n              });\n\n\n          })\n      }\n    }\n    buildList();\n    }, []);\n\n    //const handleDeletePerson = (person) => {\n\n\n    //};\n\n    const handleAddPlayer = (player) => {\n        fetch(\"/api/players\", {\n          method: \"POST\",\n          body: JSON.stringify(player),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        })\n          .then(response => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          //Add the newly created order to local orders and update order state\n          .then(receivedPerson => {\n            const newList = list.push(receivedPerson);\n            setList(newList);\n          })\n          .catch(err => {\n            console.error(err);\n          });\n    }\n\n    const handleAddUser = (accessSelected) => {\n      fetch(\"/api/teamaccess\", {\n        method: \"POST\",\n        body: JSON.stringify(accessSelected),\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        })\n      })\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n\n    if (list != null && type == \"Players\") {\n      const trueMapping = list.map(person => <PlayerHolder player={person} teamLoc={team.location} teamName={team.name}></PlayerHolder>)\n      return (\n        <div>\n          <ul> {trueMapping} </ul>\n          <strong>{trueMapping.length}</strong>\n        </div>\n      );\n\n    }\n    else if (list != null) {\n      const trueMapping = list.map(person => <FanHolder person={person}></FanHolder>)\n      return (\n        <div>\n          <ul> {trueMapping} </ul>\n          <strong>{trueMapping.length}</strong>\n        </div>\n      );\n    }\n    else {\n      return (<div></div>);\n    }\n\n}\n\nexport default AddDeletePerson;\n"]},"metadata":{},"sourceType":"module"}