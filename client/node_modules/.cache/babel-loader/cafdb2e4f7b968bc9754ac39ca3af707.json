{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/LineupPlayer.js\";\n//styling and react components\nimport React, { useState, useEffect } from \"react\"; //returns name of playerID\n\nconst LineupPlayer = ({\n  playerId\n}) => {\n  const [actualPlayer, setActualPlayer] = React.useState(null);\n  useEffect(() => {\n    const fetchPlayer = fetch(`api/players`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedPlayers => {\n      const myGuy = fetchedPlayers.filter(player => player.id === playerId);\n      setActualPlayer(myGuy[0]);\n    }).catch(err => {\n      console.error(err);\n    });\n    fetchPlayer();\n  }, [playerId]);\n\n  if (actualPlayer !== null) {\n    return /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, actualPlayer.name);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Loading...\");\n};\n\nexport default LineupPlayer;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/LineupPlayer.js"],"names":["React","useState","useEffect","LineupPlayer","playerId","actualPlayer","setActualPlayer","fetchPlayer","fetch","then","response","ok","json","Error","statusText","fetchedPlayers","myGuy","filter","player","id","catch","err","console","error","name"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,KAAK,CAACC,QAAN,CAAe,IAAf,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,WAAW,GAAGC,KAAK,CAAE,aAAF,CAAL,CACjBC,IADiB,CACXC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,YAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;AACD,KANiB,EAOjBL,IAPiB,CAOXM,cAAD,IAAoB;AACxB,YAAMC,KAAK,GAAGD,cAAc,CAACE,MAAf,CAAsBC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcf,QAA9C,CAAd;AACAE,MAAAA,eAAe,CAACU,KAAK,CAAC,CAAD,CAAN,CAAf;AACD,KAViB,EAUfI,KAVe,CAUTC,GAAG,IAAI;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAZiB,CAApB;AAcAd,IAAAA,WAAW;AACZ,GAhBM,EAgBJ,CAACH,QAAD,CAhBI,CAAT;;AAkBA,MAAIC,YAAY,KAAK,IAArB,EAA2B;AACvB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,YAAY,CAACmB,IAAtB,CADF;AAGH;;AAED,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AAKD,CAhCD;;AAkCA,eAAerB,YAAf","sourcesContent":["//styling and react components\nimport React, { useState, useEffect } from \"react\";\n\n//returns name of playerID\nconst LineupPlayer = ({ playerId }) => {\n  const [actualPlayer, setActualPlayer] = React.useState(null);\n\n  useEffect(() => {\n      const fetchPlayer = fetch(`api/players`)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then((fetchedPlayers) => {\n          const myGuy = fetchedPlayers.filter(player => player.id === playerId);\n          setActualPlayer(myGuy[0]);\n        }).catch(err => {\n          console.error(err);\n        });\n\n      fetchPlayer();\n    }, [playerId]);\n\n  if (actualPlayer !== null) {\n      return (\n        <strong>{actualPlayer.name}</strong>\n      );\n  }\n\n  return (<div>Loading...</div>);\n\n\n\n\n}\n\nexport default LineupPlayer;\n"]},"metadata":{},"sourceType":"module"}