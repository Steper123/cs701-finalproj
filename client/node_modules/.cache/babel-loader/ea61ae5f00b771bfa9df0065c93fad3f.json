{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nimport TeamAccessHolder from \"./components/TeamAccessHolder\";\nimport LoginScreen from \"./components/LoginScreen\";\nimport TeamList from \"./components/TeamList\";\nconst Header = styled.h1`\n  background-color: blue;\n  text-align: center;\n  padding: 1rem;\n  color: white;\n`;\nconst ButtonDisplay = styled.div`\n  background-color: red;\n  padding: 0.5rem 0;\n  margin-bottom: 0.5rem;\n`;\nconst Message = styled.div`\n  background-color: white;\n  padding: 70px 0;\n  text-align: center;\n  color: black;\n  /*background-image: url('Jefferson.png')*/\n`;\n\nconst App = () => {\n  const [currUser, setUser] = React.useState(null);\n  const [access, setAccess] = React.useState(null);\n  const [signinError, setError] = React.useState(\"\");\n  const [mode, setMode] = React.useState(\"Home\");\n  console.log(currUser);\n  useEffect(() => {\n    const fetchUser = () => {\n      fetch(\"/api/users\").then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedUsers => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const checkedSignedIn = fetchedUsers.filter(user => user.signedIn == 1);\n\n        if (checkedSignedIn.length != 0) {\n          setUser(checkedSignedIn[0]);\n          const myID = checkedSignedIn[0].id;\n          return myID;\n        }\n      }).then(thatID => {\n        if (thatID != null) {\n          fetch(`/api/teamaccess`).then(response => {\n            if (response.ok) {\n              return response.json();\n            }\n\n            throw new Error(response.statusText);\n          }).then(fetchedAccesses => {\n            const filteredAccess = fetchedAccesses.filter(point => point.userId == thatID); // Create a copy of the collections, replacing the current article if this is an edit\n\n            setAccess(filteredAccess);\n          }).catch(err => console.error(err)); // eslint-disable-line no-console\n        }\n      }).catch(err => console.error(err)); // eslint-disable-line no-console\n    };\n\n    fetchUser();\n  }, [setUser]);\n\n  const handleSignInReturn = (username, password) => {\n    fetch(\"/api/users\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedUsers => {\n      // Create a copy of the collections, replacing the current article if this is an edit\n      const checkedSignedIn = fetchedUsers.filter(user => user.username == username && user.password == password);\n\n      if (checkedSignedIn.length != 0) {\n        setUser(checkedSignedIn[0]);\n        setError(\"\");\n        const newPerson = {\n          username: checkedSignedIn[0].username,\n          password: checkedSignedIn[0].password,\n          signedIn: 1\n        };\n        const updatedPerson = { ...checkedSignedIn[0],\n          ...newPerson\n        };\n        fetch(`/api/users/${updatedPerson.id}`, {\n          method: \"PUT\",\n          body: JSON.stringify(updatedPerson),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          console.log(response);\n          throw new Error(response.statusText);\n        }) //Add the newly created order to local orders and update order state\n        .then(finished => {\n          setUser(finished);\n          setAccess(null);\n          setError(\"\");\n          setMode(\"Home\");\n        }).catch(err => {\n          console.error(err);\n        });\n      } else {\n        setError(\"Your username/password combination do not match the ones found in our database\");\n      }\n    }).catch(err => console.error(err)); // eslint-disable-line no-console\n  };\n\n  const handleSignOutReturn = () => {\n    const newPerson = {\n      username: currUser.username,\n      password: currUser.password,\n      signedIn: 0\n    };\n    console.log(newPerson);\n    const updatedPerson = { ...currUser,\n      ...newPerson\n    };\n    console.log(updatedPerson);\n    fetch(`/api/users/${updatedPerson.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedPerson),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      console.log(response);\n      throw new Error(response.statusText);\n    }) //Add the newly created order to local orders and update order state\n    .then(finished => {\n      setUser(null);\n      setAccess(null);\n      setError(\"\");\n      setMode(\"Home\");\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const handleAccountCreation = personCredentials => {\n    fetch(\"/api/users\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedUsers => {\n      // Create a copy of the collections, replacing the current article if this is an edit\n      const checkedSignedIn = fetchedUsers.filter(user => user.username == personCredentials.username);\n\n      if (checkedSignedIn.length != 0) {\n        setError(\"Someone with this username already exists! Either sign-in to your other account or try a new username\");\n      } else {\n        fetch(\"/api/users\", {\n          method: \"POST\",\n          body: JSON.stringify(personCredentials),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }) //Add the newly created order to local orders and update order state\n        .then(receivedPerson => {\n          setUser(receivedPerson);\n        }).catch(err => {\n          console.error(err);\n        });\n      }\n    }).catch(err => console.error(err)); // eslint-disable-line no-console\n  };\n\n  if (currUser == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }, \"Voice-Activated Baseball Scoring\"), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LoginScreen, {\n      signIn: handleSignInReturn,\n      createAccount: handleAccountCreation,\n      errorMessage: signinError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }, \"Voice-Activated Baseball Scoring\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSignOutReturn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, \"Sign Out!\"), /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, \"Thanks for signing-in! Please select one of your teams below to get started\"), /*#__PURE__*/React.createElement(TeamList, {\n    access: access,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/App.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","TeamAccessHolder","LoginScreen","TeamList","Header","h1","ButtonDisplay","div","Message","App","currUser","setUser","access","setAccess","signinError","setError","mode","setMode","console","log","fetchUser","fetch","then","response","ok","json","Error","statusText","fetchedUsers","checkedSignedIn","filter","user","signedIn","length","myID","id","thatID","fetchedAccesses","filteredAccess","point","userId","catch","err","error","handleSignInReturn","username","password","newPerson","updatedPerson","method","body","JSON","stringify","headers","Headers","Accept","finished","handleSignOutReturn","handleAccountCreation","personCredentials","receivedPerson"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nimport TeamAccessHolder from \"./components/TeamAccessHolder\"\nimport LoginScreen from \"./components/LoginScreen\"\nimport TeamList from \"./components/TeamList\"\n\n\nconst Header = styled.h1`\n  background-color: blue;\n  text-align: center;\n  padding: 1rem;\n  color: white;\n`;\nconst ButtonDisplay = styled.div`\n  background-color: red;\n  padding: 0.5rem 0;\n  margin-bottom: 0.5rem;\n`;\n\nconst Message = styled.div`\n  background-color: white;\n  padding: 70px 0;\n  text-align: center;\n  color: black;\n  /*background-image: url('Jefferson.png')*/\n`;\n\nconst App = () => {\n  const [currUser, setUser] = React.useState(null);\n  const [access, setAccess] = React.useState(null);\n  const [signinError, setError] = React.useState(\"\");\n\n  const [mode, setMode] = React.useState(\"Home\");\n\n  console.log(currUser);\n\n  useEffect(() => {\n      const fetchUser = () => {\n        fetch(\"/api/users\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedUsers) => {\n            // Create a copy of the collections, replacing the current article if this is an edit\n            const checkedSignedIn = fetchedUsers.filter(user => user.signedIn == 1);\n            if (checkedSignedIn.length != 0) {\n              setUser(checkedSignedIn[0]);\n              const myID = checkedSignedIn[0].id;\n              return myID;\n            }\n          }).then((thatID) => {\n            if (thatID != null) {\n              fetch(`/api/teamaccess`)\n                .then((response) => {\n                  if (response.ok) {\n                    return response.json();\n                  }\n                  throw new Error(response.statusText);\n                })\n                .then((fetchedAccesses) => {\n                    const filteredAccess = fetchedAccesses.filter(point => point.userId == thatID);\n\n                  // Create a copy of the collections, replacing the current article if this is an edit\n                    setAccess(filteredAccess);\n                  })\n                .catch((err) => console.error(err)); // eslint-disable-line no-console\n            }\n          })\n          .catch((err) => console.error(err)); // eslint-disable-line no-console\n      };\n\n      fetchUser();\n\n    }, [setUser]);\n\n  const handleSignInReturn = (username, password) => {\n    fetch(\"/api/users\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then((fetchedUsers) => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const checkedSignedIn = fetchedUsers.filter(user => user.username == username && user.password == password);\n        if (checkedSignedIn.length != 0) {\n          setUser(checkedSignedIn[0]);\n          setError(\"\");\n\n          const newPerson = {\n            username: checkedSignedIn[0].username,\n            password: checkedSignedIn[0].password,\n            signedIn: 1\n          }\n\n          const updatedPerson = {...checkedSignedIn[0], ...newPerson};\n\n          fetch(`/api/users/${updatedPerson.id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(updatedPerson),\n            headers: new Headers({\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            })\n          })\n            .then(response => {\n              if (response.ok) {\n                return response.json();\n              }\n              console.log(response);\n              throw new Error(response.statusText);\n\n            })\n            //Add the newly created order to local orders and update order state\n            .then((finished) => {\n              setUser(finished);\n              setAccess(null);\n              setError(\"\");\n              setMode(\"Home\");\n\n            })\n            .catch(err => {\n              console.error(err);\n            });\n        }\n        else {\n          setError(\"Your username/password combination do not match the ones found in our database\");\n        }\n      })\n      .catch((err) => console.error(err)); // eslint-disable-line no-console\n  };\n\n  const handleSignOutReturn = () => {\n    const newPerson = {\n      username: currUser.username,\n      password: currUser.password,\n      signedIn: 0\n    }\n\n    console.log(newPerson);\n    const updatedPerson = {...currUser, ...newPerson};\n    console.log(updatedPerson);\n\n    fetch(`/api/users/${updatedPerson.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedPerson),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        console.log(response);\n        throw new Error(response.statusText);\n\n      })\n      //Add the newly created order to local orders and update order state\n      .then((finished) => {\n        setUser(null);\n        setAccess(null);\n        setError(\"\");\n        setMode(\"Home\");\n\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n\n  }\n\n  const handleAccountCreation = (personCredentials) =>\n    {\n      fetch(\"/api/users\")\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then((fetchedUsers) => {\n          // Create a copy of the collections, replacing the current article if this is an edit\n          const checkedSignedIn = fetchedUsers.filter(user => user.username == personCredentials.username);\n          if (checkedSignedIn.length != 0) {\n            setError(\"Someone with this username already exists! Either sign-in to your other account or try a new username\");\n          }\n          else {\n            fetch(\"/api/users\", {\n              method: \"POST\",\n              body: JSON.stringify(personCredentials),\n              headers: new Headers({\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              })\n            })\n              .then(response => {\n                if (response.ok) {\n                  return response.json();\n                }\n                throw new Error(response.statusText);\n              })\n              //Add the newly created order to local orders and update order state\n              .then(receivedPerson => {\n                setUser(receivedPerson);\n              })\n              .catch(err => {\n                console.error(err);\n              });\n          }\n        })\n        .catch((err) => console.error(err));  // eslint-disable-line no-console\n    };\n\n\n  if (currUser == null) {\n    return (\n      <div>\n        <Header>Voice-Activated Baseball Scoring</Header>\n        <Container>\n          <LoginScreen signIn={handleSignInReturn} createAccount={handleAccountCreation} errorMessage={signinError}></LoginScreen>\n        </Container>\n      </div>\n    );\n  }\n\n\n  return (\n\n    <div>\n      <Header>Voice-Activated Baseball Scoring</Header>\n      <Button onClick={handleSignOutReturn}>Sign Out!</Button>\n      <Message>Thanks for signing-in! Please select one of your teams below to get started</Message>\n      <TeamList access={access}></TeamList>\n    </div>\n  );\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}