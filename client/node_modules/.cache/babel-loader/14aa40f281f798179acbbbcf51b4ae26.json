{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/AddDeletePerson.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nimport PlayerHolder from \"./PlayerHolder\";\nimport FanHolder from \"./FanHolder\";\nimport PlayerAdder from \"./PlayerAdder\";\nimport FanAdder from \"./FanAdder\";\n\nconst AddDeletePerson = ({\n  team,\n  type,\n  back,\n  returnHome\n}) => {\n  const [list, setList] = React.useState([]);\n  useEffect(() => {\n    const buildList = () => {\n      if (type == \"Players\") {\n        fetch(\"/api/players\").then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(fetchedPlayers => {\n          const actualList = fetchedPlayers.filter(player => player.teamId == team.id);\n          setList(actualList);\n        }).catch(err => console.error(err)); // eslint-disable-line no-console\n      } else if (type == \"Scorers\") {\n        const allAccess = fetch(`/api/teamaccess`).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(info => {\n          const returnedInfo = info.filter(access => access.teamId == team.id && access.type == 2);\n          return returnedInfo;\n        }).catch(error => {\n          console.log(error);\n        });\n        allAccess.then(data => {\n          const users = fetch(`/api/users`).then(response => {\n            if (!response.ok) {\n              throw new Error(response.status_text);\n            }\n\n            return response.json();\n          }).then(data => {\n            console.log(allAccess);\n            console.log(allAccess[0]);\n            const trueList = data.filter(user => allAccess.includes(user.id));\n            setList(trueList);\n          }).catch(error => {\n            console.log(error);\n          });\n        });\n      } else if (type == \"Fans\") {\n        const allAccess = fetch(`/api/teamaccess`).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(info => {\n          const returnedInfo = info.filter(access => access.teamId == team.id);\n          const myIds = returnedInfo.map(point => point.userId);\n          return returnedInfo;\n        }).catch(error => {\n          console.log(error);\n        });\n        allAccess.then(data => {\n          const users = fetch(`/api/users`).then(response => {\n            if (!response.ok) {\n              throw new Error(response.status_text);\n            }\n\n            return response.json();\n          }).then(returnedVal => {\n            console.log(returnedVal);\n            console.log(data);\n            const trueList = returnedVal.filter(user => data.includes(user.id));\n            setList(trueList);\n          }).catch(error => {\n            console.log(error);\n          });\n        });\n      }\n    };\n\n    buildList();\n  }, []); //const handleDeletePerson = (person) => {\n  //};\n\n  const handleAddPlayer = player => {\n    fetch(\"/api/players\", {\n      method: \"POST\",\n      body: JSON.stringify(player),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }) //Add the newly created order to local orders and update order state\n    .then(receivedPerson => {\n      console.log(\"NEW LIST CREATION\");\n      const newList = [...list, receivedPerson];\n      console.log(newList);\n      setList(newList);\n      back();\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const handleAddUser = (accessSelected, actualUser) => {\n    fetch(\"/api/teamaccess\", {\n      method: \"POST\",\n      body: JSON.stringify(accessSelected),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(receivedAccess => {\n      console.log(\"ACCESS\");\n      const newList = [...list, actualUser];\n      console.error(newList);\n      console.log(newList);\n      setList(newList);\n      back();\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const backButton = /*#__PURE__*/React.createElement(Button, {\n    onClick: () => back(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, \"Back\");\n  console.log(list);\n\n  if (list != null && type == \"Players\") {\n    const trueMapping = list.map(person => /*#__PURE__*/React.createElement(PlayerHolder, {\n      player: person,\n      teamLoc: team.location,\n      teamName: team.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 46\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, \" \", trueMapping, \" \")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PlayerAdder, {\n      teamId: team.id,\n      addFunc: handleAddPlayer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, backButton));\n  } else if (list != null) {\n    const trueMapping = list.map(person => /*#__PURE__*/React.createElement(FanHolder, {\n      person: person,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 46\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, \" \", trueMapping, \" \"), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, trueMapping.length)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FanAdder, {\n      teamId: team.id,\n      addFunc: handleAddUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, backButton));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n};\n\nexport default AddDeletePerson;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/AddDeletePerson.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","PlayerHolder","FanHolder","PlayerAdder","FanAdder","AddDeletePerson","team","type","back","returnHome","list","setList","buildList","fetch","then","response","ok","json","Error","statusText","fetchedPlayers","actualList","filter","player","teamId","id","catch","err","console","error","allAccess","info","returnedInfo","access","log","data","users","status_text","trueList","user","includes","myIds","map","point","userId","returnedVal","handleAddPlayer","method","body","JSON","stringify","headers","Headers","Accept","receivedPerson","newList","handleAddUser","accessSelected","actualUser","receivedAccess","backButton","trueMapping","person","location","name","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nimport PlayerHolder from \"./PlayerHolder\";\nimport FanHolder from \"./FanHolder\";\nimport PlayerAdder from \"./PlayerAdder\";\nimport FanAdder from \"./FanAdder\";\n\nconst AddDeletePerson = ({ team, type, back, returnHome }) => {\n  const [list, setList] = React.useState([]);\n\n  useEffect(() => {\n    const buildList = () => {\n      if (type == \"Players\") {\n        fetch(\"/api/players\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedPlayers) => {\n            const actualList = fetchedPlayers.filter(player => player.teamId == team.id);\n            setList(actualList);\n          }).catch((err) => console.error(err)); // eslint-disable-line no-console\n      }\n      else if (type == \"Scorers\") {\n        const allAccess = fetch(`/api/teamaccess`)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          }).then((info) => {\n              const returnedInfo = info.filter(access => access.teamId == team.id && access.type == 2);\n              return returnedInfo;\n\n            }\n          ).catch(error => {\n            console.log(error);\n          });\n\n          allAccess.then(data => {\n            const users = fetch(`/api/users`)\n              .then(response => {\n                if (!response.ok) {\n                  throw new Error(response.status_text);\n                }\n                return response.json();\n              })\n              .then(data => {\n                console.log(allAccess);\n                console.log(allAccess[0]);\n                const trueList = data.filter(user => allAccess.includes(user.id));\n                setList(trueList);\n              })\n              .catch(error => {\n                console.log(error);\n              });\n\n\n          })\n      }\n\n      else if (type == \"Fans\") {\n        const allAccess = fetch(`/api/teamaccess`)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          }).then((info) => {\n              const returnedInfo = info.filter(access => access.teamId == team.id);\n              const myIds = returnedInfo.map(point => point.userId);\n              return returnedInfo;\n            }\n          ).catch(error => {\n            console.log(error);\n          });\n\n          allAccess.then(data => {\n            const users = fetch(`/api/users`)\n              .then(response => {\n                if (!response.ok) {\n                  throw new Error(response.status_text);\n                }\n                return response.json();\n              })\n              .then(returnedVal => {\n                console.log(returnedVal);\n                console.log(data);\n                const trueList = returnedVal.filter(user => data.includes(user.id));\n                setList(trueList);\n              })\n              .catch(error => {\n                console.log(error);\n              });\n\n\n          })\n      }\n    }\n    buildList();\n    }, []);\n\n    //const handleDeletePerson = (person) => {\n\n\n    //};\n\n    const handleAddPlayer = (player) => {\n        fetch(\"/api/players\", {\n          method: \"POST\",\n          body: JSON.stringify(player),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        })\n          .then(response => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          //Add the newly created order to local orders and update order state\n          .then(receivedPerson => {\n            console.log(\"NEW LIST CREATION\");\n            const newList = [...list, receivedPerson];\n            console.log(newList);\n            setList(newList);\n            back();\n          })\n          .catch(err => {\n            console.error(err);\n          });\n    }\n\n    const handleAddUser = (accessSelected, actualUser) => {\n      fetch(\"/api/teamaccess\", {\n        method: \"POST\",\n        body: JSON.stringify(accessSelected),\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        })\n      })\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then(receivedAccess => {\n          console.log(\"ACCESS\");\n          const newList = [...list, actualUser];\n          console.error(newList);\n          console.log(newList);\n          setList(newList);\n          back();\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n\n    const backButton = (\n      <Button onClick={() => back()}>Back</Button>\n    );\n\n    console.log(list);\n\n    if (list != null && type == \"Players\") {\n      const trueMapping = list.map(person => <PlayerHolder player={person} teamLoc={team.location} teamName={team.name}></PlayerHolder>)\n      return (\n        <div>\n          <Row>\n            <Col>\n              <ul> {trueMapping} </ul>\n            </Col>\n            <Col>\n              <PlayerAdder teamId={team.id} addFunc={handleAddPlayer}></PlayerAdder>\n            </Col>\n          </Row>\n          <Row>\n            {backButton}\n          </Row>\n        </div>\n      );\n\n    }\n    else if (list != null) {\n      const trueMapping = list.map(person => <FanHolder person={person}></FanHolder>)\n      return (\n        <div>\n          <Row>\n            <Col>\n              <ul> {trueMapping} </ul>\n              <strong>{trueMapping.length}</strong>\n            </Col>\n            <Col>\n              <FanAdder teamId={team.id} addFunc={handleAddUser}></FanAdder>\n            </Col>\n          </Row>\n          <Row>\n            {backButton}\n          </Row>\n        </div>\n      );\n    }\n    else {\n      return (<div>Loading...</div>);\n    }\n\n}\n\nexport default AddDeletePerson;\n"]},"metadata":{},"sourceType":"module"}