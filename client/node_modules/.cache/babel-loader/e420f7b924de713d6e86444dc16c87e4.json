{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/GameDisplay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nimport LineupPlayer from \"./LineupPlayer\";\nimport InningReader from \"./InningReader\";\n\nconst LineupHolder = ({\n  game,\n  teamId\n}) => {\n  const [lineup, setLineup] = React.useState(null);\n  const [bench, setBench] = React.useState(null);\n  const [bullpen, setBullpen] = React.useState(null);\n\n  function checkIn(playerId, lineup) {\n    if (lineup.firstId == playerId || lineup.secondId == playerId || lineup.thirdId == playerId || lineup.fourthId == playerId || lineup.fifthId == playerId || lineup.sixthId == playerId || lineup.seventhId == playerId || lineup.eighthId == playerId || lineup.ninthId == playerId || lineup.pitcher == playerId) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function makeArray(lineupObj) {\n    return [lineupObj.firstId, lineupObj.secondId, lineupObj.thirdId, lineupObj.fourthId, lineupObj.fifthId, lineupObj.sixthId, lineupObj.seventhId, lineupObj.eighthId, lineupObj.ninthId, lineupObj.pitcher];\n  }\n\n  useEffect(() => {\n    const theLineup = fetch(`api/players/${teamId}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedPlayers => {\n      return fetchedPlayers;\n    }).catch(err => {\n      console.error(err);\n    });\n    theLineup.then(data => {\n      fetch(`api/lineups/${game.id}`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedLineups => {\n        const trueLineList = fetchedLineups.filter(lineup => teamId == lineup.teamId);\n        const trueLine = trueLineList[0];\n        const myBullpen = [];\n        const myBench = [];\n        data.forEach(player => {\n          if (player.position != 1) {\n            if (!checkIn(player.id, trueLine)) {\n              myBench.push(player);\n            }\n          } else {\n            if (!checkIn(player.id, trueLine)) {\n              myBullpen.push(player);\n            }\n          }\n        });\n        setLineup(trueLine);\n        setBench(myBench);\n        setBullpen(myBullpen);\n      }).catch(err => {\n        console.error(err);\n      });\n    });\n  }, []);\n\n  if (lineup == null || bullpen == null || bench == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  const madeList = makeArray(lineup);\n  const lineupMap = madeList.map(playerId => /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(LineupPlayer, {\n    playerId: playerId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 47\n    }\n  })));\n  const bullpenMap = bullpen.map(pitcher => /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 47\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 49\n    }\n  }, pitcher.name)));\n  const benchMap = bench.map(hitter => /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 43\n    }\n  }, hitter.name)));\n  console.log(madeList);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, teamId, \"'s Lineup\")), lineupMap), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Bullpen\"), bullpenMap), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Bench\"), benchMap))));\n};\n\nconst GameTitleAndBox = ({\n  game\n}) => {\n  const [homeTeam, setHome] = React.useState(null);\n  const [roadTeam, setRoad] = React.useState(null);\n  const [innings, setInnings] = React.useState([]);\n  useEffect(() => {\n    const setTeams = () => {\n      fetch(`api/teams`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedTeams => {\n        const filteredTeams = fetchedTeams.filter(team => team.id == game.awayId || team.id == game.homeId);\n\n        if (filteredTeams[0].id == game.homeId) {\n          setHome(filteredTeams[0]);\n          setRoad(filteredTeams[1]);\n        } else {\n          setHome(filteredTeams[1]);\n          setRoad(filteredTeams[0]);\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n\n    const getdaInnings = () => {\n      fetch(`api/innings/${game.id}`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedInnings => {\n        setInnings(fetchedInnings);\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n\n    setTeams();\n    getdaInnings();\n  }, []);\n  const awayOpps = [];\n  const homeOpps = [];\n  let homeHits = 0;\n  let awayHits = 0;\n  let homeRuns = 0;\n  let awayRuns = 0;\n  innings.forEach((inning, index) => {\n    if (index % 2 == 0) {\n      awayOpps.push(inning.runs);\n      awayHits = awayHits + inning.hits;\n      awayRuns = awayRuns + inning.runs;\n    } else {\n      homeOpps.push(inning.runs);\n      homeHits = homeHits + inning.hits;\n      homeRuns = homeRuns + inning.runs;\n    }\n  });\n  const awayMapping = awayOpps.map(opp => /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 47\n    }\n  }, opp)));\n  const homeMapping = homeOpps.map(opp => /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 47\n    }\n  }, opp)));\n\n  if (homeTeam == null || roadTeam == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, roadTeam.name, \" at \", homeTeam.name)), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, \"Team\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"1\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"2\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, \"3\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"4\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"5\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, \"6\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"7\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, \"8\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, \"9\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, \"R\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, \"H\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, roadTeam.name)), awayMapping, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, awayRuns)), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, awayHits))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, homeTeam.name)), homeMapping, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, homeRuns)), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, homeHits))));\n};\n\nconst GameDisplay = ({\n  gameId,\n  back\n}) => {\n  const [myGame, setGame] = React.useState(null);\n  const [currInn, setCurrInn] = React.useState(null);\n  const [whoHitting, setHittingId] = React.useState(\"Away\");\n  const [awayOrder, setAwayOrder] = React.useState(0);\n  const [homeOrder, setHomeOrder] = React.useState(0);\n  useEffect(() => {\n    const setUP = fetch(\"api/games\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedGames => {\n      console.log(gameId);\n      const filteredGames = fetchedGames.filter(game => game.id == gameId);\n      console.log(filteredGames);\n      setGame(filteredGames[0]);\n      return filteredGames[0];\n    }).catch(err => {\n      console.error(err);\n    });\n    setUP.then(data => {\n      fetch(`api/innings/${data.id}`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedInnings => {\n        if (fetchedInnings.length == 0) {\n          const myInning = {\n            gameId: data.id,\n            pitchingId: data.homeId,\n            hittingId: data.awayId,\n            number: 1,\n            runs: 0,\n            hits: 0,\n            balls: 0,\n            strikes: 0,\n            outs: 0,\n            firstRunnerId: 0,\n            secondRunnerId: 0,\n            thirdRunnerId: 0\n          };\n          fetch(\"/api/innings\", {\n            method: \"POST\",\n            body: JSON.stringify(myInning),\n            headers: new Headers({\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            })\n          }).then(response => {\n            if (response.ok) {\n              return response.json();\n            }\n\n            throw new Error(response.statusText);\n          }).then(returnedInning => {\n            setCurrInn(returnedInning);\n            setHittingId(\"Away\");\n          }).catch(err => {\n            console.error(err);\n          });\n        } else {\n          if (fetchedInnings.length % 2 == 0) {\n            setHittingId(\"Home\");\n          } else {\n            setHittingId(\"Away\");\n          }\n\n          setCurrInn(fetchedInnings[fetchedInnings.length - 1]);\n        }\n      });\n    });\n  }, []);\n\n  const startNewInning = () => {\n    console.log(\"Im here\");\n    const findInnings = fetch(`api/innings/${myGame.id}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedInnings => {\n      return fetchedInnings;\n    }).catch(err => {\n      console.error(err);\n    });\n    findInnings.then(data => {\n      console.log(data);\n\n      if (data.length % 2 == 0) {\n        const myInning = {\n          gameId: myGame.id,\n          pitchingId: myGame.homeId,\n          hittingId: myGame.awayId,\n          number: data[data.length - 1].number + 1,\n          runs: 0,\n          hits: 0,\n          balls: 0,\n          strikes: 0,\n          outs: 0,\n          firstRunnerId: 0,\n          secondRunnerId: 0,\n          thirdRunnerId: 0\n        };\n        fetch(\"/api/innings\", {\n          method: \"POST\",\n          body: JSON.stringify(myInning),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(returnedInning => {\n          setCurrInn(returnedInning);\n          setHittingId(\"Away\");\n        }).catch(err => {\n          console.error(err);\n        });\n      } else {\n        const myInning = {\n          gameId: myGame.id,\n          pitchingId: myGame.awayId,\n          hittingId: myGame.homeId,\n          number: data[data.length - 1].number,\n          runs: 0,\n          hits: 0,\n          balls: 0,\n          strikes: 0,\n          outs: 0,\n          firstRunnerId: 0,\n          secondRunnerId: 0,\n          thirdRunnerId: 0\n        };\n        fetch(\"/api/innings\", {\n          method: \"POST\",\n          body: JSON.stringify(myInning),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(returnedInning => {\n          setCurrInn(returnedInning);\n          setHittingId(\"Home\");\n        }).catch(err => {\n          console.error(err);\n        });\n      }\n    });\n  };\n\n  const handleEndInning = (changedInning, atWhere) => {\n    console.log(\"Here\");\n    fetch(`/api/innings/${changedInning.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(changedInning),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      console.log(response);\n      throw new Error(response.statusText);\n    }) //Add the newly created order to local orders and update order state\n    .then(finished => {\n      console.log(\"Flip\");\n\n      if (whoHitting == \"Away\") {\n        setAwayOrder(atWhere);\n      } else {\n        setHomeOrder(atWhere);\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n    startNewInning();\n  };\n\n  if (myGame == null || currInn == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 7\n      }\n    }, \"Loading...\");\n  }\n\n  if (whoHitting == \"Away\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GameTitleAndBox, {\n      game: myGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LineupHolder, {\n      game: myGame,\n      teamId: myGame.awayId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InningReader, {\n      currInning: currInn,\n      hitOrder: awayOrder,\n      endInn: handleEndInning,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LineupHolder, {\n      game: myGame,\n      teamId: myGame.homeId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 13\n      }\n    }, \"This will hold instructions\"))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GameTitleAndBox, {\n    game: myGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LineupHolder, {\n    game: myGame,\n    teamId: myGame.awayId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InningReader, {\n    currInning: currInn,\n    hitOrder: homeOrder,\n    endInn: handleEndInning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LineupHolder, {\n    game: myGame,\n    teamId: myGame.homeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 11\n    }\n  }, \"THIS WILL HOLD INSTRUCTIONS LATER!\"))));\n};\n\nexport default GameDisplay;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/GameDisplay.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","LineupPlayer","InningReader","LineupHolder","game","teamId","lineup","setLineup","bench","setBench","bullpen","setBullpen","checkIn","playerId","firstId","secondId","thirdId","fourthId","fifthId","sixthId","seventhId","eighthId","ninthId","pitcher","makeArray","lineupObj","theLineup","fetch","then","response","ok","json","Error","statusText","fetchedPlayers","catch","err","console","error","data","id","fetchedLineups","trueLineList","filter","trueLine","myBullpen","myBench","forEach","player","position","push","madeList","lineupMap","map","bullpenMap","name","benchMap","hitter","log","GameTitleAndBox","homeTeam","setHome","roadTeam","setRoad","innings","setInnings","setTeams","fetchedTeams","filteredTeams","team","awayId","homeId","getdaInnings","fetchedInnings","awayOpps","homeOpps","homeHits","awayHits","homeRuns","awayRuns","inning","index","runs","hits","awayMapping","opp","homeMapping","GameDisplay","gameId","back","myGame","setGame","currInn","setCurrInn","whoHitting","setHittingId","awayOrder","setAwayOrder","homeOrder","setHomeOrder","setUP","fetchedGames","filteredGames","length","myInning","pitchingId","hittingId","number","balls","strikes","outs","firstRunnerId","secondRunnerId","thirdRunnerId","method","body","JSON","stringify","headers","Headers","Accept","returnedInning","startNewInning","findInnings","handleEndInning","changedInning","atWhere","finished"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nimport LineupPlayer from \"./LineupPlayer\";\nimport InningReader from \"./InningReader\";\n\nconst LineupHolder = ({ game, teamId }) => {\n  const [lineup, setLineup] = React.useState(null);\n  const [bench, setBench] = React.useState(null);\n  const [bullpen, setBullpen] = React.useState(null);\n\n  function checkIn(playerId, lineup) {\n    if (lineup.firstId == playerId || lineup.secondId == playerId || lineup.thirdId == playerId || lineup.fourthId == playerId || lineup.fifthId == playerId || lineup.sixthId == playerId || lineup.seventhId == playerId || lineup.eighthId == playerId || lineup.ninthId == playerId || lineup.pitcher == playerId) {\n      return true;\n    }\n    return false;\n  }\n\n  function makeArray(lineupObj) {\n    return [lineupObj.firstId, lineupObj.secondId, lineupObj.thirdId, lineupObj.fourthId, lineupObj.fifthId, lineupObj.sixthId, lineupObj.seventhId, lineupObj.eighthId, lineupObj.ninthId, lineupObj.pitcher];\n  }\n\n  useEffect(() => {\n      const theLineup = fetch(`api/players/${teamId}`)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then((fetchedPlayers) => {\n          return fetchedPlayers;\n        }).catch(err => {\n          console.error(err);\n        });\n\n        theLineup.then(data => {\n          fetch(`api/lineups/${game.id}`)\n            .then((response) => {\n              if (response.ok) {\n                return response.json();\n              }\n              throw new Error(response.statusText);\n            })\n            .then((fetchedLineups) => {\n              const trueLineList = fetchedLineups.filter(lineup => teamId == lineup.teamId);\n              const trueLine = trueLineList[0];\n              const myBullpen = [];\n              const myBench = [];\n              data.forEach(player => {\n                if (player.position != 1) {\n                  if (!checkIn(player.id, trueLine)) {\n                    myBench.push(player);\n                  }\n                }\n                else {\n                  if (!checkIn(player.id, trueLine)) {\n                    myBullpen.push(player);\n                  }\n                }\n              });\n\n              setLineup(trueLine);\n              setBench(myBench);\n              setBullpen(myBullpen);\n            }).catch(err => {\n              console.error(err);\n            });\n        })\n    }, []);\n\n\n\n    if (lineup == null || bullpen == null || bench == null) {\n      return (<div>Loading...</div>);\n    }\n\n    const madeList = makeArray(lineup);\n\n    const lineupMap = madeList.map(playerId => <Row>\n                                              <LineupPlayer playerId={playerId}></LineupPlayer>\n                                            </Row>);\n    const bullpenMap = bullpen.map(pitcher => <Row>\n                                                <small>{pitcher.name}</small>\n                                              </Row>);\n    const benchMap = bench.map(hitter => <Row>\n                                          <small>{hitter.name}</small>\n                                        </Row>);\n\n    console.log(madeList);\n\n    return (\n      <div>\n        <Container>\n          <Row>\n            <strong>{teamId}'s Lineup</strong>\n          </Row>\n          {lineupMap}\n        </Container>\n        <Container>\n          <Row>\n            <Col>\n              <small>Bullpen</small>\n              {bullpenMap}\n            </Col>\n            <Col>\n              <small>Bench</small>\n              {benchMap}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n}\n\nconst GameTitleAndBox = ({ game }) => {\n  const [homeTeam, setHome] = React.useState(null);\n  const [roadTeam, setRoad] = React.useState(null);\n  const [innings, setInnings] = React.useState([]);\n\n  useEffect(() => {\n      const setTeams = () => {\n        fetch(`api/teams`)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedTeams) => {\n            const filteredTeams = fetchedTeams.filter(team => team.id == game.awayId || team.id == game.homeId);\n            if (filteredTeams[0].id == game.homeId) {\n              setHome(filteredTeams[0]);\n              setRoad(filteredTeams[1]);\n            }\n            else {\n              setHome(filteredTeams[1]);\n              setRoad(filteredTeams[0]);\n            }\n          }).catch(err => {\n            console.error(err);\n          });\n      }\n      const getdaInnings = () => {\n        fetch(`api/innings/${game.id}`)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedInnings) => {\n            setInnings(fetchedInnings);\n          }).catch(err => {\n            console.error(err);\n          });\n      }\n      setTeams();\n      getdaInnings();\n    }, []);\n\n    const awayOpps = [];\n    const homeOpps = [];\n    let homeHits = 0;\n    let awayHits = 0;\n    let homeRuns = 0;\n    let awayRuns = 0;\n    innings.forEach((inning, index) => {\n      if (index % 2 == 0) {\n        awayOpps.push(inning.runs);\n        awayHits = awayHits + inning.hits;\n        awayRuns = awayRuns + inning.runs;\n      }\n      else {\n        homeOpps.push(inning.runs);\n        homeHits = homeHits + inning.hits;\n        homeRuns = homeRuns + inning.runs;\n      }\n    });\n\n    const awayMapping = awayOpps.map(opp => <Col>\n                                              <small>{opp}</small>\n                                            </Col>);\n    const homeMapping = homeOpps.map(opp => <Col>\n                                              <small>{opp}</small>\n                                            </Col>);\n\n    if (homeTeam == null || roadTeam == null) {\n      return (<div>Loading...</div>);\n    }\n\n    return (\n      <div>\n        <Row>\n          <h1>{roadTeam.name} at {homeTeam.name}</h1>\n        </Row>\n        <Row>\n          <Col>\n            <small>Team</small>\n          </Col>\n          <Col>\n            <small>1</small>\n          </Col>\n          <Col>\n            <small>2</small>\n          </Col>\n          <Col>\n            <small>3</small>\n          </Col>\n          <Col>\n            <small>4</small>\n          </Col>\n          <Col>\n            <small>5</small>\n          </Col>\n          <Col>\n            <small>6</small>\n          </Col>\n          <Col>\n            <small>7</small>\n          </Col>\n          <Col>\n            <small>8</small>\n          </Col>\n          <Col>\n            <small>9</small>\n          </Col>\n          <Col>\n            <small>R</small>\n          </Col>\n          <Col>\n            <small>H</small>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <small>{roadTeam.name}</small>\n          </Col>\n          {awayMapping}\n          <Col>\n            <small>{awayRuns}</small>\n          </Col>\n          <Col>\n            <small>{awayHits}</small>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <small>{homeTeam.name}</small>\n          </Col>\n          {homeMapping}\n          <Col>\n            <small>{homeRuns}</small>\n          </Col>\n          <Col>\n            <small>{homeHits}</small>\n          </Col>\n        </Row>\n      </div>\n    );\n\n\n}\n\nconst GameDisplay = ({ gameId, back }) => {\n  const [myGame, setGame] = React.useState(null);\n  const [currInn, setCurrInn] = React.useState(null);\n  const [whoHitting, setHittingId] = React.useState(\"Away\");\n  const [awayOrder, setAwayOrder] = React.useState(0);\n  const [homeOrder, setHomeOrder] = React.useState(0);\n\n\n  useEffect(() => {\n      const setUP = fetch(\"api/games\")\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(response.statusText);\n        })\n        .then((fetchedGames) => {\n          console.log(gameId);\n          const filteredGames = fetchedGames.filter(game => game.id == gameId);\n          console.log(filteredGames);\n          setGame(filteredGames[0]);\n          return filteredGames[0];\n        }).catch(err => {\n          console.error(err);\n        });\n\n        setUP.then((data) => {\n          fetch(`api/innings/${data.id}`)\n            .then((response) => {\n              if (response.ok) {\n                return response.json();\n              }\n              throw new Error(response.statusText);\n            })\n            .then((fetchedInnings) => {\n              if (fetchedInnings.length == 0) {\n                const myInning = ({\n                  gameId: data.id,\n                  pitchingId: data.homeId,\n                  hittingId: data.awayId,\n                  number: 1,\n                  runs: 0,\n                  hits: 0,\n                  balls: 0,\n                  strikes: 0,\n                  outs: 0,\n                  firstRunnerId: 0,\n                  secondRunnerId: 0,\n                  thirdRunnerId: 0\n                });\n                fetch(\"/api/innings\", {\n                  method: \"POST\",\n                  body: JSON.stringify(myInning),\n                  headers: new Headers({\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  })\n                })\n                  .then(response => {\n                    if (response.ok) {\n                      return response.json();\n                    }\n                    throw new Error(response.statusText);\n                  })\n                  .then((returnedInning) => {\n                    setCurrInn(returnedInning);\n                    setHittingId(\"Away\");\n                  }).catch(err => {\n                    console.error(err);\n                  });\n              }\n              else {\n                if (fetchedInnings.length % 2 == 0) {\n                  setHittingId(\"Home\");\n                }\n                else {\n                  setHittingId(\"Away\");\n                }\n                setCurrInn(fetchedInnings[fetchedInnings.length - 1]);\n              }\n            })\n\n        })\n\n    }, []);\n\n  const startNewInning = () => {\n    console.log(\"Im here\");\n    const findInnings = fetch(`api/innings/${myGame.id}`)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then((fetchedInnings) => {\n        return fetchedInnings;\n      }).catch(err => {\n        console.error(err);\n      });\n\n      findInnings.then((data) => {\n        console.log(data);\n        if (data.length % 2 == 0) {\n          const myInning = ({\n            gameId: myGame.id,\n            pitchingId: myGame.homeId,\n            hittingId: myGame.awayId,\n            number: data[data.length - 1].number + 1,\n            runs: 0,\n            hits: 0,\n            balls: 0,\n            strikes: 0,\n            outs: 0,\n            firstRunnerId: 0,\n            secondRunnerId: 0,\n            thirdRunnerId: 0\n          });\n\n          fetch(\"/api/innings\", {\n            method: \"POST\",\n            body: JSON.stringify(myInning),\n            headers: new Headers({\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            })\n          })\n            .then(response => {\n              if (response.ok) {\n                return response.json();\n              }\n              throw new Error(response.statusText);\n            })\n            .then((returnedInning) => {\n              setCurrInn(returnedInning);\n              setHittingId(\"Away\");\n            }).catch(err => {\n              console.error(err);\n            });\n\n        }\n        else {\n\n          const myInning = ({\n            gameId: myGame.id,\n            pitchingId: myGame.awayId,\n            hittingId: myGame.homeId,\n            number: data[data.length - 1].number,\n            runs: 0,\n            hits: 0,\n            balls: 0,\n            strikes: 0,\n            outs: 0,\n            firstRunnerId: 0,\n            secondRunnerId: 0,\n            thirdRunnerId: 0\n          });\n\n          fetch(\"/api/innings\", {\n            method: \"POST\",\n            body: JSON.stringify(myInning),\n            headers: new Headers({\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            })\n          })\n            .then(response => {\n              if (response.ok) {\n                return response.json();\n              }\n              throw new Error(response.statusText);\n            })\n            .then((returnedInning) => {\n              setCurrInn(returnedInning);\n              setHittingId(\"Home\");\n            }).catch(err => {\n              console.error(err);\n            });\n        }\n      });\n\n\n\n\n\n\n  }\n\n  const handleEndInning = (changedInning, atWhere) => {\n    console.log(\"Here\");\n    fetch(`/api/innings/${changedInning.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(changedInning),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        console.log(response);\n        throw new Error(response.statusText);\n\n      })\n      //Add the newly created order to local orders and update order state\n      .then((finished) => {\n        console.log(\"Flip\");\n        if (whoHitting == \"Away\") {\n          setAwayOrder(atWhere);\n        }\n        else {\n          setHomeOrder(atWhere);\n        }\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n      startNewInning();\n  };\n\n  if (myGame == null || currInn == null) {\n    return (\n      <div>Loading...</div>\n    );\n  }\n\n  if (whoHitting == \"Away\") {\n    return (\n      <div>\n        <Container>\n          <GameTitleAndBox game={myGame}></GameTitleAndBox>\n          <Row>\n            <Col>\n              <LineupHolder game={myGame} teamId={myGame.awayId}></LineupHolder>\n            </Col>\n            <Col>\n              <InningReader currInning={currInn} hitOrder={awayOrder} endInn={handleEndInning}></InningReader>\n            </Col>\n            <Col>\n              <LineupHolder game={myGame} teamId={myGame.homeId}></LineupHolder>\n            </Col>\n          </Row>\n          <Row>\n            <div>This will hold instructions</div>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Container>\n        <GameTitleAndBox game={myGame}></GameTitleAndBox>\n        <Row>\n          <Col>\n            <LineupHolder game={myGame} teamId={myGame.awayId}></LineupHolder>\n          </Col>\n          <Col>\n            <InningReader currInning={currInn} hitOrder={homeOrder} endInn={handleEndInning}></InningReader>\n          </Col>\n          <Col>\n            <LineupHolder game={myGame} teamId={myGame.homeId}></LineupHolder>\n          </Col>\n        </Row>\n        <Row>\n          <div>THIS WILL HOLD INSTRUCTIONS LATER!</div>\n        </Row>\n      </Container>\n    </div>\n  );\n\n\n\n}\n\nexport default GameDisplay;\n"]},"metadata":{},"sourceType":"module"}