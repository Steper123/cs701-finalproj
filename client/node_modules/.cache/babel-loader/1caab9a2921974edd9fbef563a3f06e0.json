{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/TeamPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nimport ButtonArea from \"./ButtonArea\";\nimport AddDeletePerson from \"./AddDeletePerson\";\nimport EventHolder from \"./EventHolder\";\nimport StatsSection from \"./StatsSection\";\nimport classes from \"./TeamPage.module.css\";\n\nconst TeamPage = ({\n  teamID,\n  access,\n  returnHome\n}) => {\n  const [teamMode, setTeamMode] = React.useState(\"Home\");\n  const [team, setTeam] = React.useState(null);\n  const [state, setState] = React.useState(null); //SET USE EFFECT TO GET PRIMARY TEAM AND SET TEAM MODE;\n\n  console.log(teamID);\n  console.log(access);\n  useEffect(() => {\n    const givenState = fetch(\"/api/states\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedState => {\n      // Create a copy of the collections, replacing the current article if this is an edit\n      const myState = fetchedState[0];\n      setState(myState);\n      setTeamMode(myState.teampageMode);\n      return myState;\n    });\n    givenState.then(data => {\n      fetch(\"/api/teams\").then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedTeams => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const myTeam = fetchedTeams.filter(team => team.id == teamID);\n        setTeam(myTeam[0]);\n      });\n    }); //add back CurrUser\n  }, [state]); //const teamLogo = (\n  //<div>\n  //<img src={require(`../assets/images/${team.name.toLowerCase()}.png`)} alt=\"MyLogo\" class=\"center\" />\n  //</div>\n  //  );\n\n  const typeChecker = num => {\n    if (num == 3) {\n      return \"Fan\";\n    } else if (num == 2) {\n      return \"Scorer\";\n    } else if (num == 1) {\n      return \"Admin/Coach\";\n    }\n  };\n\n  const changedMode = string => {\n    const updatedState = { ...state,\n      teampageMode: string\n    };\n    fetch(`/api/states/${1}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedState),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      console.log(response);\n      throw new Error(response.statusText);\n    }).then(returnedState => {\n      setState(returnedState);\n    });\n  };\n\n  if (teamMode == \"Home\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.AccessLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"Access level: \", typeChecker(access.type)), /*#__PURE__*/React.createElement(ButtonArea, {\n      access: access,\n      team: team,\n      returnHome: returnHome,\n      setTeamState: changedMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }));\n  } else if (teamMode == \"Game\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(EventHolder, {\n      team: team,\n      back: () => changedMode(\"Home\"),\n      userId: access.userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }));\n  } else if (teamMode == \"Stat\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StatsSection, {\n      team: team,\n      back: () => changedMode(\"Home\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AddDeletePerson, {\n      team: team,\n      type: teamMode,\n      back: () => changedMode(\"Home\"),\n      returnHome: returnHome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default TeamPage;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/TeamPage.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","ButtonArea","AddDeletePerson","EventHolder","StatsSection","classes","TeamPage","teamID","access","returnHome","teamMode","setTeamMode","team","setTeam","state","setState","console","log","givenState","fetch","then","response","ok","json","Error","statusText","fetchedState","myState","teampageMode","data","fetchedTeams","myTeam","filter","id","typeChecker","num","changedMode","string","updatedState","method","body","JSON","stringify","headers","Headers","Accept","returnedState","AccessLevel","type","userId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nimport ButtonArea from \"./ButtonArea\";\nimport AddDeletePerson from \"./AddDeletePerson\";\nimport EventHolder from \"./EventHolder\";\nimport StatsSection from \"./StatsSection\";\nimport classes from \"./TeamPage.module.css\";\n\n\n\nconst TeamPage = ({ teamID, access, returnHome }) => {\n  const [teamMode, setTeamMode] = React.useState(\"Home\");\n  const [team, setTeam] = React.useState(null);\n  const [state, setState] = React.useState(null);\n  //SET USE EFFECT TO GET PRIMARY TEAM AND SET TEAM MODE;\n  console.log(teamID);\n  console.log(access);\n  useEffect(() => {\n    const givenState = fetch(\"/api/states\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      }).then((fetchedState) => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const myState = fetchedState[0];\n        setState(myState);\n        setTeamMode(myState.teampageMode);\n        return myState;\n      })\n\n      givenState.then((data) => {\n        fetch(\"/api/teams\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          }).then((fetchedTeams) => {\n            // Create a copy of the collections, replacing the current article if this is an edit\n            const myTeam = fetchedTeams.filter(team => team.id == teamID);\n            setTeam(myTeam[0]);\n          })\n      })\n//add back CurrUser\n}, [state]);\n\n  //const teamLogo = (\n    //<div>\n      //<img src={require(`../assets/images/${team.name.toLowerCase()}.png`)} alt=\"MyLogo\" class=\"center\" />\n    //</div>\n//  );\n\n  const typeChecker = (num) => {\n    if (num == 3) {\n      return \"Fan\";\n    }\n    else if (num == 2) {\n      return \"Scorer\";\n    }\n    else if (num == 1) {\n      return \"Admin/Coach\"\n    }\n  }\n\n  const changedMode = (string) => {\n    const updatedState = {...state, teampageMode: string};\n    fetch(`/api/states/${1}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedState),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        console.log(response);\n        throw new Error(response.statusText);\n\n      })\n      .then((returnedState) => {\n        setState(returnedState);\n      })\n  }\n\n  if (teamMode == \"Home\") {\n    return (\n      <div>\n        <strong className={classes.AccessLevel}>Access level: {typeChecker(access.type)}</strong>\n        <ButtonArea access={access} team={team} returnHome={returnHome} setTeamState={changedMode}></ButtonArea>\n        \n      </div>\n    );\n  }\n  else if (teamMode == \"Game\") {\n    return (\n      <div>\n        <EventHolder team={team} back={() => changedMode(\"Home\")} userId={access.userId}></EventHolder>\n      </div>\n    );\n  }\n  else if (teamMode == \"Stat\") {\n    return (\n      <div>\n        <StatsSection team={team} back={() => changedMode(\"Home\")}></StatsSection>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div>\n        <AddDeletePerson team={team} type={teamMode} back={() => changedMode(\"Home\")} returnHome={returnHome}></AddDeletePerson>\n      </div>\n    );\n  }\n\n\n\n\n};\n\nexport default TeamPage;\n"]},"metadata":{},"sourceType":"module"}