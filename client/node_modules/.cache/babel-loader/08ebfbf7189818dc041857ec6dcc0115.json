{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/HitterStatDisplay.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nimport classes from \"./StatHolders.module.css\";\n\nconst HitterStatDisplay = ({\n  hitter\n}) => {\n  const [stats, setStats] = React.useState([]);\n\n  function gatherStats(plays, pos) {\n    console.log(pos);\n\n    if (pos == 0) {\n      let pitchesSeen = 0;\n      let pAs = 0;\n      let aBs = 0;\n      let singles = 0;\n      let doubles = 0;\n      let triples = 0;\n      let homers = 0;\n      let rbis = 0;\n      let runs = 0;\n      let sbs = 0;\n      let bbs = 0;\n      plays.forEach(play => {\n        pitchesSeen = pitchesSeen + 1;\n        const collectionPlay = play.hitterResult.split(\" \");\n        const loweredPlay = collectionPlay.map(word => word.toLowerCase());\n\n        if (loweredPlay.includes(\"single\")) {\n          pAs = pAs + 1;\n          aBs = aBs + 1;\n          singles = singles + 1;\n        } else if (loweredPlay.includes(\"double\")) {\n          pAs = pAs + 1;\n          aBs = aBs + 1;\n          doubles = doubles + 1;\n        } else if (loweredPlay.includes(\"triple\")) {\n          pAs = pAs + 1;\n          aBs = aBs + 1;\n          triples = triples + 1;\n        } else if (loweredPlay.includes(\"homerun\")) {\n          pAs = pAs + 1;\n          aBs = aBs + 1;\n          homers = homers + 1;\n        } else if (loweredPlay.includes(\"fly\") || loweredPlay.includes(\"flyout\")) {\n          pAs = pAs + 1;\n          aBs = aBs + 1;\n        } else if (loweredPlay.includes(\"ground\") || loweredPlay.includes(\"groundout\")) {\n          pAs = pAs + 1;\n          aBs = aBs + 1;\n        }\n      });\n      return {\n        pitchesSeen: pitchesSeen,\n        pAs: pAs,\n        aBs: aBs,\n        singles: singles,\n        doubles: doubles,\n        triples: triples,\n        homers: homers,\n        rbis: rbis,\n        runs: runs,\n        sbs: sbs,\n        bbs: bbs\n      };\n    } else {\n      let pitchesThrown = 0;\n      let fbs = 0;\n      let chs = 0;\n      let cvs = 0;\n      let other = 0;\n      let outsRecord = 0;\n      let hA = 0;\n      let rA = 0;\n      let ks = 0;\n      let bbs = 0;\n      plays.forEach(play => {\n        pitchesThrown = pitchesThrown + 1; //Pitch Type\n\n        if (play.pitchType == \"fastball\") {\n          fbs = fbs + 1;\n        } else if (play.pitchType == \"changeup\" || play.pitchType == \"change\") {\n          chs = chs + 1;\n        } else if (play.pitchType == \"curveball\" || play.pitchType == \"curve\") {\n          cvs = cvs + 1;\n        } else {\n          other = other + 1;\n        } //Result\n\n\n        const collectionPlay = play.hitterResult.split(\" \");\n        const loweredPlay = collectionPlay.map(word => word.toLowerCase());\n\n        if (loweredPlay.includes(\"single\")) {\n          hA = hA + 1;\n        } else if (loweredPlay.includes(\"double\")) {\n          hA = hA + 1;\n        } else if (loweredPlay.includes(\"triple\")) {\n          hA = hA + 1;\n        } else if (loweredPlay.includes(\"homerun\")) {\n          hA = hA + 1;\n          rA = rA + 1;\n        } else if (loweredPlay.includes(\"fly\") || loweredPlay.includes(\"flyout\")) {\n          outsRecord = outsRecord + 1;\n        } else if (loweredPlay.includes(\"ground\") || loweredPlay.includes(\"groundout\")) {\n          outsRecord = outsRecord + 1;\n        }\n      });\n      return {\n        pitchesThrown: pitchesThrown,\n        fbs: fbs,\n        chs: chs,\n        cvs: cvs,\n        other: other,\n        outsRecord: outsRecord,\n        hA: hA,\n        rA: rA,\n        ks: ks,\n        bbs: bbs\n      };\n    }\n  }\n\n  useEffect(() => {\n    fetch(`api/plays`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedPlays => {\n      const filteredPlays = fetchedPlays.filter(play => play.hitterId == hitter.id);\n      const myStats = gatherStats(filteredPlays, hitter.position);\n      setStats(myStats);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  if (hitter == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  if (stats.aBs == null) {\n    console.log(stats);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.StatHolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, hitter.name), /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.StatHolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, \"No stats recorded.\"));\n  } else {\n    console.log(stats);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.StatHolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, hitter.name), /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.StatHolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, parseFloat((stats.singles + stats.doubles + stats.triples + stats.homers) / stats.aBs).toFixed(2)), /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.StatHolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, parseFloat((stats.singles + stats.doubles + stats.triples + stats.homers + stats.bbs) / stats.pAs).toFixed(2)), /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.StatHolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, parseFloat((stats.singles + stats.doubles * 2 + stats.triples * 3 + stats.homers * 4) / stats.aBs).toFixed(2)), /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.StatHolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, stats.rbis));\n  }\n};\n\nexport default HitterStatDisplay;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/HitterStatDisplay.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","classes","HitterStatDisplay","hitter","stats","setStats","gatherStats","plays","pos","console","log","pitchesSeen","pAs","aBs","singles","doubles","triples","homers","rbis","runs","sbs","bbs","forEach","play","collectionPlay","hitterResult","split","loweredPlay","map","word","toLowerCase","includes","pitchesThrown","fbs","chs","cvs","other","outsRecord","hA","rA","ks","pitchType","fetch","then","response","ok","json","Error","statusText","fetchedPlays","filteredPlays","filter","hitterId","id","myStats","position","catch","err","error","StatHolder","name","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nimport classes from \"./StatHolders.module.css\";\n\nconst HitterStatDisplay = ({ hitter }) => {\n\n  const [stats, setStats] = React.useState([]);\n\n  function gatherStats(plays, pos) {\n    console.log(pos);\n    if (pos == 0) {\n      let pitchesSeen = 0;\n      let pAs = 0;\n      let aBs = 0;\n      let singles = 0;\n      let doubles = 0;\n      let triples = 0;\n      let homers = 0;\n      let rbis = 0;\n      let runs = 0;\n      let sbs = 0;\n      let bbs = 0;\n\n      plays.forEach(play => {\n        pitchesSeen = pitchesSeen + 1;\n        const collectionPlay = play.hitterResult.split(\" \");\n        const loweredPlay = collectionPlay.map(word => word.toLowerCase());\n        if (loweredPlay.includes(\"single\")) {\n          pAs = pAs + 1;\n          aBs = aBs + 1;\n          singles = singles + 1;\n        }\n        else if (loweredPlay.includes(\"double\")) {\n          pAs = pAs + 1;\n          aBs = aBs + 1;\n          doubles = doubles + 1;\n        }\n        else if (loweredPlay.includes(\"triple\")) {\n          pAs = pAs + 1;\n          aBs = aBs + 1;\n          triples = triples + 1;\n        }\n        else if (loweredPlay.includes(\"homerun\")) {\n          pAs = pAs + 1;\n          aBs = aBs + 1;\n          homers = homers + 1;\n        }\n        else if (loweredPlay.includes(\"fly\") || loweredPlay.includes(\"flyout\")) {\n          pAs = pAs + 1;\n          aBs = aBs + 1;\n        }\n        else if (loweredPlay.includes(\"ground\") || loweredPlay.includes(\"groundout\")) {\n          pAs = pAs + 1;\n          aBs = aBs + 1;\n        }\n      });\n\n      return ({\n        pitchesSeen: pitchesSeen,\n        pAs: pAs,\n        aBs: aBs,\n        singles: singles,\n        doubles: doubles,\n        triples: triples,\n        homers: homers,\n        rbis: rbis,\n        runs: runs,\n        sbs: sbs,\n        bbs: bbs\n      });\n    }\n\n    else {\n      let pitchesThrown = 0;\n      let fbs = 0;\n      let chs = 0;\n      let cvs = 0;\n      let other = 0;\n      let outsRecord = 0;\n      let hA = 0;\n      let rA = 0;\n      let ks = 0;\n      let bbs = 0;\n\n      plays.forEach(play => {\n        pitchesThrown = pitchesThrown + 1;\n        //Pitch Type\n        if (play.pitchType == \"fastball\") {\n          fbs = fbs + 1;\n        }\n        else if (play.pitchType == \"changeup\" || play.pitchType == \"change\") {\n          chs = chs + 1;\n        }\n        else if (play.pitchType == \"curveball\" || play.pitchType == \"curve\") {\n          cvs = cvs + 1;\n        }\n        else {\n          other = other + 1;\n        }\n        //Result\n        const collectionPlay = play.hitterResult.split(\" \");\n        const loweredPlay = collectionPlay.map(word => word.toLowerCase());\n        if (loweredPlay.includes(\"single\")) {\n          hA = hA + 1;\n        }\n        else if (loweredPlay.includes(\"double\")) {\n          hA = hA + 1;\n        }\n        else if (loweredPlay.includes(\"triple\")) {\n          hA = hA + 1;\n        }\n        else if (loweredPlay.includes(\"homerun\")) {\n          hA = hA + 1;\n          rA = rA + 1;\n        }\n        else if (loweredPlay.includes(\"fly\") || loweredPlay.includes(\"flyout\")) {\n          outsRecord = outsRecord + 1;\n        }\n        else if (loweredPlay.includes(\"ground\") || loweredPlay.includes(\"groundout\")) {\n          outsRecord = outsRecord + 1;\n        }\n\n    })\n\n    return ({\n      pitchesThrown: pitchesThrown,\n      fbs: fbs,\n      chs: chs,\n      cvs: cvs,\n      other: other,\n      outsRecord: outsRecord,\n      hA: hA,\n      rA: rA,\n      ks: ks,\n      bbs: bbs\n    });\n\n\n\n\n    }\n\n\n}\n\n  useEffect(() => {\n    fetch(`api/plays`)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then((fetchedPlays) => {\n        const filteredPlays = fetchedPlays.filter(play => play.hitterId == hitter.id);\n        const myStats = gatherStats(filteredPlays, hitter.position);\n        setStats(myStats);\n      }).catch(err => {\n        console.error(err);\n      });\n    }, []);\n\n    if (hitter == null) {\n      return (<div>Loading...</div>);\n    }\n    if (stats.aBs == null) {\n      console.log(stats);\n      return (\n        <div>\n          <strong className={classes.StatHolder}>{hitter.name}</strong>\n          <strong className={classes.StatHolder}>No stats recorded.</strong>\n        </div>\n\n      );\n    }\n    else {\n      console.log(stats);\n      return (\n        <div>\n            <strong className={classes.StatHolder}>{hitter.name}</strong>\n            <strong className={classes.StatHolder}>{parseFloat((stats.singles+stats.doubles+stats.triples+stats.homers)/stats.aBs).toFixed(2)}</strong>\n            <strong className={classes.StatHolder}>{parseFloat((stats.singles+stats.doubles+stats.triples+stats.homers+stats.bbs)/stats.pAs).toFixed(2)}</strong>\n            <strong className={classes.StatHolder}>{parseFloat((stats.singles + (stats.doubles*2) + (stats.triples*3) + (stats.homers*4))/stats.aBs).toFixed(2)}</strong>\n            <strong className={classes.StatHolder}>{stats.rbis}</strong>\n        </div>\n      );\n    }\n\n\n}\n\nexport default HitterStatDisplay;\n"]},"metadata":{},"sourceType":"module"}