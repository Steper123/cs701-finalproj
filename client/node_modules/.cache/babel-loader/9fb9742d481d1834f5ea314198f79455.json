{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/LineupPlayer.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nconst LineupPlayer = ({\n  playerId\n}) => {\n  const [season, setSeason] = React.useState(null);\n  const [actualPlayer, setActualPlayer] = React.useState(null);\n\n  function gatherStats(plays, pos) {\n    if (pos == 0) {\n      let pitchesSeen = 0;\n      let pAs = 0;\n      let aBs = 0;\n      let singles = 0;\n      let doubles = 0;\n      let triples = 0;\n      let homers = 0;\n      let rbis = 0;\n      let runs = 0;\n      let sbs = 0;\n      let bbs = 0;\n      plays.forEach(play => {\n        pitchesSeen = pitchesSeen + 1;\n        const collectionPlay = play.hitterResult.split(\" \");\n\n        if (!collectionPlay.includes(\"ball\") && !collectionPlay.includes(\"strike\")) {\n          pAs = pAs + 1;\n\n          if (!collectionPlay.includes(\"walk\")) {\n            aBs = aBs + 1;\n\n            if (collectionPlay.includes(\"single\")) {\n              singles = singles + 1;\n            } else if (collectionPlay.includes(\"double\")) {\n              doubles = doubles + 1;\n            } else if (collectionPlay.includes(\"triple\")) {\n              triples = triples + 1;\n            } else if (collectionPlay.includes(\"homerun\")) {\n              homers = homers + 1;\n            }\n          } else {\n            bbs = bbs + 1;\n          }\n\n          if (collectionPlay.includes(\"run\") || collectionPlay.includes(\"runs\")) {\n            if (collectionPlay.includes(\"one\")) {\n              rbis = rbis + 1;\n            } else if (collectionPlay.includes(\"two\")) {\n              rbis = rbis + 2;\n            } else if (collectionPlay.includes(\"three\")) {\n              rbis = rbis + 3;\n            } else {\n              rbis = rbis + 4;\n            }\n          }\n        }\n      });\n      return {\n        pitchesSeen: pitchesSeen,\n        pAs: pAs,\n        aBs: aBs,\n        singles: singles,\n        doubles: doubles,\n        triples: triples,\n        homers: homers,\n        rbis: rbis,\n        runs: runs,\n        sbs: sbs,\n        bbs: bbs\n      };\n    } else {\n      let pitchesThrown = 0;\n      let fbs = 0;\n      let chs = 0;\n      let cvs = 0;\n      let other = 0;\n      let outsRecord = 0;\n      let hA = 0;\n      let rA = 0;\n      let ks = 0;\n      let bbs = 0;\n      plays.forEach(play => {\n        pitchesThrown = pitchesThrown + 1; //Pitch Type\n\n        if (play.pitchType == \"fastball\") {\n          fbs = fbs + 1;\n        } else if (play.pitchType == \"changeup\") {\n          chs = chs + 1;\n        } else if (play.pitchType == \"curveball\") {\n          cvs = cvs + 1;\n        } else {\n          other = other + 1;\n        } //Result\n\n\n        const collectionPlay = play.hitterResult.split(\" \");\n\n        if (collectionPlay.includes(\"single\") || collectionPlay.includes(\"double\") || collectionPlay.includes(\"triple\") || collectionPlay.includes(\"homerun\")) {\n          hA = hA + 1;\n\n          if (collectionPlay.includes(\"run\") || collectionPlay.includes(\"runs\")) {\n            if (collectionPlay.includes(\"one\")) {\n              rA = rA + 1;\n            } else if (collectionPlay.includes(\"two\")) {\n              rA = rA + 2;\n            } else if (collectionPlay.includes(\"three\")) {\n              rA = rA + 3;\n            } else {\n              rA = rA + 4;\n            }\n          }\n        } else if (collectionPlay.includes(\"strikeout\")) {\n          ks = ks + 1;\n          outsRecord = outsRecord + 1;\n        } else if (collectionPlay.includes(\"walk\")) {\n          bbs = bbs + 1;\n        } else if (!collectionPlay.includes(\"ball\") || !collectionPlay.includes(\"strike\")) {\n          outsRecord = outsRecord + 1;\n        }\n      });\n      return {\n        pitchesThrown: pitchesThrown,\n        fbs: fbs,\n        chs: chs,\n        cvs: cvs,\n        other: other,\n        hA: hA,\n        rA: rA,\n        ks: ks,\n        bbs: bbs\n      };\n    }\n  }\n\n  useEffect(() => {\n    const setStats = () => {\n      fetch(`api/plays`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedPlays => {\n        if (player.position != 1) {\n          const myTotPlays = fetchedPlays.filter(play => playerId == play.hitterId);\n          setSeason(gatherStats(myTotPlays, 0));\n        } else {\n          const myTotPlays = fetchedPlays.filter(play => playerId == play.pitcherId);\n          setSeason(gatherStats(myTotPlays, 1));\n        }\n      });\n    };\n\n    const fetchGuy = () => {\n      fetch(`api/players`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedPlayers => {\n        const myGuy = fetchedPlayers.filter(player => player.id == playerId);\n        setActivePlayer(myGuy[0]);\n      });\n    };\n\n    setStats();\n    fetchGuy();\n  }, []);\n\n  if (actualPlayer.position != 1) {\n    return /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }, actualPlayer.name), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, (season.singles + season.doubles + season.triples + season.homeruns) / season.aBs), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, (season.singles + season.doubles + season.triples + season.homeruns + season.bbs) / season.pAs), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, (season.singles * 1 + season.doubles * 2 + season.triples * 3 + season.homers * 4) / season.aBs));\n  } else {\n    return /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }, actualPlayer.name), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, season.rA * 9 / (season.outsRecord / 3)), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, (season.hA + season.bbs) / (season.outsRecord / 3)), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }, season.ks / (season.outsRecord / 3)));\n  }\n};\n\nexport default LineupPlayer;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/LineupPlayer.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","LineupPlayer","playerId","season","setSeason","actualPlayer","setActualPlayer","gatherStats","plays","pos","pitchesSeen","pAs","aBs","singles","doubles","triples","homers","rbis","runs","sbs","bbs","forEach","play","collectionPlay","hitterResult","split","includes","pitchesThrown","fbs","chs","cvs","other","outsRecord","hA","rA","ks","pitchType","setStats","fetch","then","response","ok","json","Error","statusText","fetchedPlays","player","position","myTotPlays","filter","hitterId","pitcherId","fetchGuy","fetchedPlayers","myGuy","id","setActivePlayer","name","homeruns"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nconst LineupPlayer = ({ playerId }) => {\n  const [season, setSeason] = React.useState(null);\n  const [actualPlayer, setActualPlayer] = React.useState(null);\n\n  function gatherStats(plays, pos) {\n    if (pos == 0) {\n      let pitchesSeen = 0;\n      let pAs = 0;\n      let aBs = 0;\n      let singles = 0;\n      let doubles = 0;\n      let triples = 0;\n      let homers = 0;\n      let rbis = 0;\n      let runs = 0;\n      let sbs = 0;\n      let bbs = 0;\n\n      plays.forEach(play => {\n        pitchesSeen = pitchesSeen + 1;\n        const collectionPlay = play.hitterResult.split(\" \");\n        if (!collectionPlay.includes(\"ball\") && !collectionPlay.includes(\"strike\")) {\n          pAs = pAs + 1;\n          if (!collectionPlay.includes(\"walk\")) {\n            aBs = aBs + 1;\n            if (collectionPlay.includes(\"single\")) {\n              singles = singles + 1;\n            }\n            else if (collectionPlay.includes(\"double\")) {\n              doubles = doubles + 1;\n            }\n            else if (collectionPlay.includes(\"triple\")) {\n              triples = triples + 1;\n            }\n            else if (collectionPlay.includes(\"homerun\")) {\n              homers = homers + 1;\n            }\n          }\n          else {\n            bbs = bbs + 1;\n          }\n          if (collectionPlay.includes(\"run\") || collectionPlay.includes(\"runs\")) {\n            if (collectionPlay.includes(\"one\")) {\n              rbis = rbis + 1;\n            }\n            else if (collectionPlay.includes(\"two\")) {\n              rbis = rbis + 2;\n            }\n            else if (collectionPlay.includes(\"three\")) {\n              rbis = rbis + 3;\n            }\n            else {\n              rbis = rbis + 4;\n            }\n          }\n        }\n      });\n\n      return ({\n        pitchesSeen: pitchesSeen,\n        pAs: pAs,\n        aBs: aBs,\n        singles: singles,\n        doubles: doubles,\n        triples: triples,\n        homers: homers,\n        rbis: rbis,\n        runs: runs,\n        sbs: sbs,\n        bbs: bbs\n      });\n    }\n    else {\n      let pitchesThrown = 0;\n      let fbs = 0;\n      let chs = 0;\n      let cvs = 0;\n      let other = 0;\n      let outsRecord = 0;\n      let hA = 0;\n      let rA = 0;\n      let ks = 0;\n      let bbs = 0;\n\n      plays.forEach(play => {\n        pitchesThrown = pitchesThrown + 1;\n        //Pitch Type\n        if (play.pitchType == \"fastball\") {\n          fbs = fbs + 1;\n        }\n        else if (play.pitchType == \"changeup\") {\n          chs = chs + 1;\n        }\n        else if (play.pitchType == \"curveball\") {\n          cvs = cvs + 1;\n        }\n        else {\n          other = other + 1;\n        }\n        //Result\n        const collectionPlay = play.hitterResult.split(\" \");\n        if (collectionPlay.includes(\"single\") || collectionPlay.includes(\"double\") || collectionPlay.includes(\"triple\") || collectionPlay.includes(\"homerun\")) {\n          hA = hA + 1;\n          if (collectionPlay.includes(\"run\") || collectionPlay.includes(\"runs\")) {\n            if (collectionPlay.includes(\"one\")) {\n              rA = rA + 1;\n            }\n            else if (collectionPlay.includes(\"two\")) {\n              rA = rA + 2;\n            }\n            else if (collectionPlay.includes(\"three\")) {\n              rA = rA + 3;\n            }\n            else {\n              rA = rA + 4;\n            }\n          }\n        }\n        else if (collectionPlay.includes(\"strikeout\")) {\n          ks = ks + 1;\n          outsRecord = outsRecord + 1;\n        }\n        else if (collectionPlay.includes(\"walk\")) {\n          bbs = bbs + 1;\n        }\n        else if (!collectionPlay.includes(\"ball\") || !collectionPlay.includes(\"strike\")) {\n          outsRecord = outsRecord + 1;\n        }\n      });\n\n      return ({\n        pitchesThrown: pitchesThrown,\n        fbs: fbs,\n        chs: chs,\n        cvs: cvs,\n        other: other,\n        hA: hA,\n        rA: rA,\n        ks: ks,\n        bbs: bbs\n      });\n    }\n  }\n\n  useEffect(() => {\n      const setStats = () => {\n        fetch(`api/plays`)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedPlays) => {\n            if (player.position != 1) {\n              const myTotPlays = fetchedPlays.filter(play => playerId == play.hitterId);\n              setSeason(gatherStats(myTotPlays, 0));\n            }\n            else {\n              const myTotPlays = fetchedPlays.filter(play => playerId == play.pitcherId);\n              setSeason(gatherStats(myTotPlays, 1));\n            }\n          })\n      }\n\n      const fetchGuy = () => {\n        fetch(`api/players`)\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedPlayers) => {\n            const myGuy = fetchedPlayers.filter(player => player.id == playerId);\n            setActivePlayer(myGuy[0]);\n          })\n      }\n\n      setStats();\n      fetchGuy();\n    }, []);\n\n  if (actualPlayer.position != 1) {\n    return (\n        <Col>\n          <strong>{actualPlayer.name}</strong>\n          <small>{(season.singles + season.doubles + season.triples + season.homeruns)/(season.aBs)}</small>\n          <small>{(season.singles + season.doubles + season.triples + season.homeruns + season.bbs)/(season.pAs)}</small>\n          <small>{((season.singles*1) + (season.doubles*2) + (season.triples*3) + (season.homers*4))/(season.aBs)}</small>\n        </Col>\n    );\n  }\n  else {\n    return (\n      <Col>\n        <strong>{actualPlayer.name}</strong>\n        <small>{(season.rA*9)/(season.outsRecord/3)}</small>\n        <small>{(season.hA + season.bbs)/(season.outsRecord/3)}</small>\n        <small>{(season.ks)/(season.outsRecord/3)}</small>\n      </Col>\n\n    );\n\n  }\n\n\n\n}\n\nexport default LineupPlayer;\n"]},"metadata":{},"sourceType":"module"}