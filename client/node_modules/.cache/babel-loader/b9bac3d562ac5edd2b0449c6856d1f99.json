{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/TeamAccessHolder.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button } from \"reactstrap\";\n\nconst TeamAccessHolder = ({\n  teamaccess\n}) => {\n  const [team, setTeam] = React.useState(null);\n  useEffect(() => {\n    const fetchTeam = () => {\n      fetch(\"/api/teams\").then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedTeams => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const checkedTeam = fetchedTeams.filter(team => team.id == teamaccess.teamId);\n\n        if (checkedTeam.length != 0) {\n          setTeam(checkedTeam[0]);\n        }\n      }).catch(err => console.error(err)); // eslint-disable-line no-console\n    };\n\n    fetchTeam();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Team: \", team.location, \" \", team.name, \" (\", teamaccess.type, \")\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Coach: \", team.coach), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Division: \", team.division));\n};\n\nexport default TeamAccessHolder;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/TeamAccessHolder.js"],"names":["React","useState","useEffect","styled","Container","Button","TeamAccessHolder","teamaccess","team","setTeam","fetchTeam","fetch","then","response","ok","json","Error","statusText","fetchedTeams","checkedTeam","filter","id","teamId","length","catch","err","console","error","location","name","type","coach","division"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,YAAlC;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACC,QAAN,CAAe,IAAf,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,SAAS,GAAG,MAAM;AACtBC,MAAAA,KAAK,CAAC,YAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,cAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;AACD,OANH,EAOGL,IAPH,CAOSM,YAAD,IAAkB;AACtB;AACA,cAAMC,WAAW,GAAGD,YAAY,CAACE,MAAb,CAAoBZ,IAAI,IAAIA,IAAI,CAACa,EAAL,IAAWd,UAAU,CAACe,MAAlD,CAApB;;AACA,YAAIH,WAAW,CAACI,MAAZ,IAAsB,CAA1B,EAA6B;AAC3Bd,UAAAA,OAAO,CAACU,WAAW,CAAC,CAAD,CAAZ,CAAP;AACD;AACF,OAbH,EAcGK,KAdH,CAcUC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAdlB,EADsB,CAeiB;AACxC,KAhBD;;AAkBAf,IAAAA,SAAS;AAEV,GArBM,EAqBJ,EArBI,CAAT;AAyBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAeF,IAAI,CAACoB,QAApB,OAA+BpB,IAAI,CAACqB,IAApC,QAA4CtB,UAAU,CAACuB,IAAvD,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAetB,IAAI,CAACuB,KAApB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkBvB,IAAI,CAACwB,QAAvB,CAHF,CADF;AAQD,CApCD;;AAsCA,eAAe1B,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button } from \"reactstrap\";\n\nconst TeamAccessHolder = ({ teamaccess }) => {\n  const [team, setTeam] = React.useState(null);\n\n  useEffect(() => {\n      const fetchTeam = () => {\n        fetch(\"/api/teams\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((fetchedTeams) => {\n            // Create a copy of the collections, replacing the current article if this is an edit\n            const checkedTeam = fetchedTeams.filter(team => team.id == teamaccess.teamId);\n            if (checkedTeam.length != 0) {\n              setTeam(checkedTeam[0]);\n            }\n          })\n          .catch((err) => console.error(err)); // eslint-disable-line no-console\n      };\n\n      fetchTeam();\n\n    }, []);\n\n\n\n  return (\n    <div>\n      <strong>Team: {team.location} {team.name} ({teamaccess.type})</strong>\n      <small>Coach: {team.coach}</small>\n      <small>Division: {team.division}</small>\n    </div>\n  );\n\n}\n\nexport default TeamAccessHolder;\n"]},"metadata":{},"sourceType":"module"}