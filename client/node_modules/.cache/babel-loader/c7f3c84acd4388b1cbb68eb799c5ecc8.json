{"ast":null,"code":"var _jsxFileName = \"/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/TeamPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nimport ButtonArea from \"./ButtonArea\";\nimport AddDeletePerson from \"./AddDeletePerson\";\nimport EventHolder from \"./EventHolder\";\nimport StatsSection from \"./StatsSection\";\nimport classes from \"./TeamPage.module.css\";\n\nconst TeamPage = ({\n  teamID,\n  access,\n  returnHome\n}) => {\n  const [teamMode, setTeamMode] = React.useState(\"Home\");\n  const [team, setTeam] = React.useState(null);\n  const [state, setState] = React.useState(null); //SET USE EFFECT TO GET PRIMARY TEAM AND SET TEAM MODE;\n\n  useEffect(() => {\n    const givenState = fetch(\"/api/states\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(fetchedState => {\n      // Create a copy of the collections, replacing the current article if this is an edit\n      const myState = fetchedState[0];\n      setState(myState);\n      setTeamMode(myState.teampageMode);\n      return myState;\n    });\n    givenState.then(data => {\n      fetch(\"/api/teams\").then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(fetchedTeams => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const myTeam = fetchedTeams.filter(team => team.id == teamID);\n        setTeam(myTeam[0]);\n      });\n    }); //add back CurrUser\n  }, [state]);\n  console.log(team.name.toLowerCase());\n  const teamLogo = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(`../assets/images/${team.name.toLowerCase()}.png`),\n    alt: \"MyLogo\",\n    class: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n\n  const typeChecker = num => {\n    if (num == 3) {\n      return \"Fan\";\n    } else if (num == 2) {\n      return \"Scorer\";\n    } else if (num == 1) {\n      return \"Admin/Coach\";\n    }\n  };\n\n  const changedMode = string => {\n    const updatedState = { ...state,\n      teampageMode: string\n    };\n    fetch(`/api/states/${1}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedState),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      console.log(response);\n      throw new Error(response.statusText);\n    }).then(returnedState => {\n      setState(returnedState);\n    });\n  };\n\n  if (teamMode == \"Home\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.AccessLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"Access level: \", typeChecker(access.type)), /*#__PURE__*/React.createElement(ButtonArea, {\n      access: access,\n      team: team,\n      back: setTeamMode,\n      returnHome: returnHome,\n      setTeamState: setTeamMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), teamLogo);\n  } else if (teamMode == \"Game\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(EventHolder, {\n      team: team,\n      back: setTeamMode,\n      userId: access.userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }));\n  } else if (teamMode == \"Stat\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StatsSection, {\n      team: team,\n      back: () => changedMode(\"Home\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AddDeletePerson, {\n      team: team,\n      type: teamMode,\n      back: () => changedMode(\"Home\"),\n      returnHome: returnHome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default TeamPage;","map":{"version":3,"sources":["/Users/steper123/Desktop/CS_701/Term_Project/actualAPP/client/src/components/TeamPage.js"],"names":["React","useState","useEffect","styled","Container","Button","Row","Col","ButtonArea","AddDeletePerson","EventHolder","StatsSection","classes","TeamPage","teamID","access","returnHome","teamMode","setTeamMode","team","setTeam","state","setState","givenState","fetch","then","response","ok","json","Error","statusText","fetchedState","myState","teampageMode","data","fetchedTeams","myTeam","filter","id","console","log","name","toLowerCase","teamLogo","require","typeChecker","num","changedMode","string","updatedState","method","body","JSON","stringify","headers","Headers","Accept","returnedState","AccessLevel","type","userId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,GAAjC,QAA4C,YAA5C;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAAD,KAAoC;AACnD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,KAAK,CAACC,QAAN,CAAe,MAAf,CAAhC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBpB,KAAK,CAACC,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBtB,KAAK,CAACC,QAAN,CAAe,IAAf,CAA1B,CAHmD,CAInD;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,UAAU,GAAGC,KAAK,CAAC,aAAD,CAAL,CAChBC,IADgB,CACVC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,YAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;AACD,KANgB,EAMdL,IANc,CAMRM,YAAD,IAAkB;AACxB;AACA,YAAMC,OAAO,GAAGD,YAAY,CAAC,CAAD,CAA5B;AACAT,MAAAA,QAAQ,CAACU,OAAD,CAAR;AACAd,MAAAA,WAAW,CAACc,OAAO,CAACC,YAAT,CAAX;AACA,aAAOD,OAAP;AACD,KAZgB,CAAnB;AAcET,IAAAA,UAAU,CAACE,IAAX,CAAiBS,IAAD,IAAU;AACxBV,MAAAA,KAAK,CAAC,YAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,cAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;AACD,OANH,EAMKL,IANL,CAMWU,YAAD,IAAkB;AACxB;AACA,cAAMC,MAAM,GAAGD,YAAY,CAACE,MAAb,CAAoBlB,IAAI,IAAIA,IAAI,CAACmB,EAAL,IAAWxB,MAAvC,CAAf;AACAM,QAAAA,OAAO,CAACgB,MAAM,CAAC,CAAD,CAAP,CAAP;AACD,OAVH;AAWD,KAZD,EAfY,CA4BlB;AACC,GA7BU,EA6BR,CAACf,KAAD,CA7BQ,CAAT;AA+BAkB,EAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAI,CAACsB,IAAL,CAAUC,WAAV,EAAZ;AAEA,QAAMC,QAAQ,gBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEC,OAAO,CAAE,oBAAmBzB,IAAI,CAACsB,IAAL,CAAUC,WAAV,EAAwB,MAA7C,CAAjB;AAAsE,IAAA,GAAG,EAAC,QAA1E;AAAmF,IAAA,KAAK,EAAC,QAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;;AAMA,QAAMG,WAAW,GAAIC,GAAD,IAAS;AAC3B,QAAIA,GAAG,IAAI,CAAX,EAAc;AACZ,aAAO,KAAP;AACD,KAFD,MAGK,IAAIA,GAAG,IAAI,CAAX,EAAc;AACjB,aAAO,QAAP;AACD,KAFI,MAGA,IAAIA,GAAG,IAAI,CAAX,EAAc;AACjB,aAAO,aAAP;AACD;AACF,GAVD;;AAYA,QAAMC,WAAW,GAAIC,MAAD,IAAY;AAC9B,UAAMC,YAAY,GAAG,EAAC,GAAG5B,KAAJ;AAAWY,MAAAA,YAAY,EAAEe;AAAzB,KAArB;AACAxB,IAAAA,KAAK,CAAE,eAAc,CAAE,EAAlB,EAAqB;AACxB0B,MAAAA,MAAM,EAAE,KADgB;AAExBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAFkB;AAGxBK,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnBC,QAAAA,MAAM,EAAE,kBADW;AAEnB,wBAAgB;AAFG,OAAZ;AAHe,KAArB,CAAL,CAQG/B,IARH,CAQQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACDW,MAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACA,YAAM,IAAIG,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;AAED,KAfH,EAgBGL,IAhBH,CAgBSgC,aAAD,IAAmB;AACvBnC,MAAAA,QAAQ,CAACmC,aAAD,CAAR;AACD,KAlBH;AAmBD,GArBD;;AAuBA,MAAIxC,QAAQ,IAAI,MAAhB,EAAwB;AACtB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAEL,OAAO,CAAC8C,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAuDb,WAAW,CAAC9B,MAAM,CAAC4C,IAAR,CAAlE,CADF,eAEE,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE5C,MAApB;AAA4B,MAAA,IAAI,EAAEI,IAAlC;AAAwC,MAAA,IAAI,EAAED,WAA9C;AAA2D,MAAA,UAAU,EAAEF,UAAvE;AAAmF,MAAA,YAAY,EAAEE,WAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGyB,QAHH,CADF;AAOD,GARD,MASK,IAAI1B,QAAQ,IAAI,MAAhB,EAAwB;AAC3B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEE,IAAnB;AAAyB,MAAA,IAAI,EAAED,WAA/B;AAA4C,MAAA,MAAM,EAAEH,MAAM,CAAC6C,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GANI,MAOA,IAAI3C,QAAQ,IAAI,MAAhB,EAAwB;AAC3B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEE,IAApB;AAA0B,MAAA,IAAI,EAAE,MAAM4B,WAAW,CAAC,MAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GANI,MAOA;AACH,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE5B,IAAvB;AAA6B,MAAA,IAAI,EAAEF,QAAnC;AAA6C,MAAA,IAAI,EAAE,MAAM8B,WAAW,CAAC,MAAD,CAApE;AAA8E,MAAA,UAAU,EAAE/B,UAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;AAKF,CAjHD;;AAmHA,eAAeH,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\n\nimport ButtonArea from \"./ButtonArea\";\nimport AddDeletePerson from \"./AddDeletePerson\";\nimport EventHolder from \"./EventHolder\";\nimport StatsSection from \"./StatsSection\";\nimport classes from \"./TeamPage.module.css\";\n\n\n\nconst TeamPage = ({ teamID, access, returnHome }) => {\n  const [teamMode, setTeamMode] = React.useState(\"Home\");\n  const [team, setTeam] = React.useState(null);\n  const [state, setState] = React.useState(null);\n  //SET USE EFFECT TO GET PRIMARY TEAM AND SET TEAM MODE;\n  useEffect(() => {\n    const givenState = fetch(\"/api/states\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      }).then((fetchedState) => {\n        // Create a copy of the collections, replacing the current article if this is an edit\n        const myState = fetchedState[0];\n        setState(myState);\n        setTeamMode(myState.teampageMode);\n        return myState;\n      })\n\n      givenState.then((data) => {\n        fetch(\"/api/teams\")\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(response.statusText);\n          }).then((fetchedTeams) => {\n            // Create a copy of the collections, replacing the current article if this is an edit\n            const myTeam = fetchedTeams.filter(team => team.id == teamID);\n            setTeam(myTeam[0]);\n          })\n      })\n//add back CurrUser\n}, [state]);\n\n  console.log(team.name.toLowerCase());\n\n  const teamLogo = (\n    <div>\n      <img src={require(`../assets/images/${team.name.toLowerCase()}.png`)} alt=\"MyLogo\" class=\"center\" />\n    </div>\n  );\n\n  const typeChecker = (num) => {\n    if (num == 3) {\n      return \"Fan\";\n    }\n    else if (num == 2) {\n      return \"Scorer\";\n    }\n    else if (num == 1) {\n      return \"Admin/Coach\"\n    }\n  }\n\n  const changedMode = (string) => {\n    const updatedState = {...state, teampageMode: string};\n    fetch(`/api/states/${1}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedState),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      })\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        console.log(response);\n        throw new Error(response.statusText);\n\n      })\n      .then((returnedState) => {\n        setState(returnedState);\n      })\n  }\n\n  if (teamMode == \"Home\") {\n    return (\n      <div>\n        <strong className={classes.AccessLevel}>Access level: {typeChecker(access.type)}</strong>\n        <ButtonArea access={access} team={team} back={setTeamMode} returnHome={returnHome} setTeamState={setTeamMode}></ButtonArea>\n        {teamLogo}\n      </div>\n    );\n  }\n  else if (teamMode == \"Game\") {\n    return (\n      <div>\n        <EventHolder team={team} back={setTeamMode} userId={access.userId}></EventHolder>\n      </div>\n    );\n  }\n  else if (teamMode == \"Stat\") {\n    return (\n      <div>\n        <StatsSection team={team} back={() => changedMode(\"Home\")}></StatsSection>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div>\n        <AddDeletePerson team={team} type={teamMode} back={() => changedMode(\"Home\")} returnHome={returnHome}></AddDeletePerson>\n      </div>\n    );\n  }\n\n\n\n\n};\n\nexport default TeamPage;\n"]},"metadata":{},"sourceType":"module"}